var searchIndex={"mime/multipart":[["mime/multipart","Package multipart implements MIME multipart parsing, as defined in RFC2046","package"],["Writer.CreateFormField","CreateFormField calls CreatePart with a header using thegiven field name","func"],["Reader.ReadForm","ReadForm parses an entire multipart message whose parts havea Content-Disposition of \"form-data\"","func"],["NewWriter","NewWriter returns a new multipart Writer with a random boundary,writing to w","func"],["Part.Read","Read reads the body of a part, after its headers and before thenext part (if any) begins","func"],["Form.RemoveAll","RemoveAll removes any temporary files associated with a Form","func"],["FileHeader.Open","Open opens and returns the FileHeader's associated File","func"],["Part","A Part represents a single part in a multipart body","struct"],["Writer.WriteField","WriteField calls CreateFormField and then writes the given value","func"],["Writer.SetBoundary","SetBoundary overrides the Writer's default randomly-generatedboundary separator with an explicit value","func"],["Writer.Close","Close finishes the multipart message and writes the trailingboundary end line to the output","func"],["Writer.Boundary","Boundary returns the Writer's boundary","func"],["File","File is an interface to access the file part of a multipart message","interface"],["FileHeader","A FileHeader describes a file part of a multipart request","struct"],["Part.FileName","FileName returns the filename parameter of the Part'sContent-Disposition header","func"],["Reader.NextPart","NextPart returns the next part in the multipart or an error","func"],["Writer.CreatePart","CreatePart creates a new multipart section with the providedheader","func"],["Part.FormName","FormName returns the name parameter if p has a Content-Dispositionof type \"form-data\"","func"],["Writer.FormDataContentType","FormDataContentType returns the Content-Type for an HTTPmultipart/form-data with this Writer's Boundary","func"],["Writer.CreateFormFile","CreateFormFile is a convenience wrapper around CreatePart","func"],["Form","Form is a parsed multipart form","struct"],["Reader","Reader is an iterator over parts in a MIME multipart body","struct"],["Writer","A Writer generates multipart messages","struct"],["NewReader","NewReader creates a new multipart Reader reading from r using thegiven MIME boundary","func"]],"debug/plan9obj":[["debug/plan9obj","Package plan9obj implements access to Plan 9 a.out object files","package"],["FileHeader","A FileHeader represents a Plan 9 a.out file header","struct"],["Section.Open","Open returns a new ReadSeeker reading the Plan 9 a.out section","func"],["File.Section","Section returns a section with the given name, or nil if no suchsection exists","func"],["File","A File represents an open Plan 9 a.out file","struct"],["Sym","A Symbol represents an entry in a Plan 9 a.out symbol table section","struct"],["Section","A Section represents a single section in a Plan 9 a.out file","struct"],["NewFile","NewFile creates a new File for accessing a Plan 9 binary in an underlying reader","func"],["Section.Data","Data reads and returns the contents of the Plan 9 a.out section","func"],["File.Close","Close closes the File","func"],["File.Symbols","Symbols returns the symbol table for f","func"],["Open","Open opens the named file using os.Open and prepares it for use as a Plan 9 a.out binary","func"],["SectionHeader","A SectionHeader represents a single Plan 9 a.out section header","struct"]],"mime/quotedprintable":[["mime/quotedprintable","Package quotedprintable implements quoted-printable encoding as specified byRFC 2045","package"],["NewReader","NewReader returns a quoted-printable reader, decoding from r","func"],["Reader.Read","Read reads and decodes quoted-printable data from the underlying reader","func"],["Reader","Reader is a quoted-printable decoder","struct"],["NewWriter","NewWriter returns a new Writer that writes to w","func"],["Writer.Close","Close closes the Writer, flushing any unwritten data to the underlyingio.Writer, but does not close the underlying io.Writer","func"],["Writer","A Writer is a quoted-printable writer that implements io.WriteCloser","struct"],["Writer.Write","Write encodes p using quoted-printable encoding and writes it to theunderlying io.Writer","func"]],"runtime/trace":[["runtime/trace","Package trace contains facilities for programs to generate tracesfor the Go execution tracer","package"],["Start","Start enables tracing for the current program","func"],["Log","Log emits a one-off event with the given category and message","func"],["Stop","Stop stops the current tracing, if any","func"],["IsEnabled","IsEnabled reports whether tracing is enabled","func"],["Task","Task is a data type for tracing a user-defined, logical operation","struct"],["WithRegion","WithRegion starts a region associated with its calling goroutine, runs fn,and then ends the region","func"],["Region.End","End marks the end of the traced code region","func"],["NewTask","NewTask creates a task instance with the type taskType and returnsit along with a Context that carries the task","func"],["Logf","Logf is like Log, but the value is formatted using the specified format spec","func"],["Task.End","End marks the end of the operation represented by the Task","func"],["StartRegion","StartRegion starts a region and returns a function for marking theend of the region","func"],["Region","Region is a region of code whose execution time interval is traced","struct"]],"encoding/asn1":[["encoding/asn1","Package asn1 implements parsing of DER-encoded ASN.1 data structures,as defined in ITU-T Rec X.690","package"],["SyntaxError","A SyntaxError suggests that the ASN.1 data is invalid","struct"],["Marshal","Marshal returns the ASN.1 encoding of val","func"],["Flag","A Flag accepts any data and is set to true if present","other"],["UnmarshalWithParams","UnmarshalWithParams allows field parameters to be specified for thetop-level element","func"],["Unmarshal","Unmarshal parses the DER-encoded ASN.1 data structure band uses the reflect package to fill in an arbitrary value pointed at by val","func"],["ObjectIdentifier","An ObjectIdentifier represents an ASN.1 OBJECT IDENTIFIER","other"],["BitString","BitString is the structure to use when you want an ASN.1 BIT STRING type","struct"],["MarshalWithParams","MarshalWithParams allows field parameters to be specified for thetop-level element","func"],["ObjectIdentifier.Equal","Equal reports whether oi and other represent the same identifier","func"],["BitString.RightAlign","RightAlign returns a slice where the padding bits are at the beginning","func"],["RawValue","A RawValue represents an undecoded ASN.1 object","struct"],["BitString.At","At returns the bit at the given index","func"],["StructuralError","A StructuralError suggests that the ASN.1 data is valid, but the Go typewhich is receiving it doesn't match","struct"],["RawContent","RawContent is used to signal that the undecoded, DER data needs to bepreserved for a struct","other"],["Enumerated","An Enumerated is represented as a plain int","other"]],"crypto/subtle":[["crypto/subtle","Package subtle implements functions that are often useful in cryptographiccode but require careful thought to use correctly","package"],["ConstantTimeCompare","ConstantTimeCompare returns 1 if the two slices, x and y, have equal contentsand 0 otherwise","func"],["ConstantTimeByteEq","ConstantTimeByteEq returns 1 if x == y and 0 otherwise","func"],["ConstantTimeLessOrEq","ConstantTimeLessOrEq returns 1 if x <= y and 0 otherwise","func"],["ConstantTimeSelect","ConstantTimeSelect returns x if v == 1 and y if v == 0","func"],["ConstantTimeCopy","ConstantTimeCopy copies the contents of y into x (a slice of equal length)if v == 1","func"],["ConstantTimeEq","ConstantTimeEq returns 1 if x == y and 0 otherwise","func"]],"syscall":[["syscall","Package syscall contains an interface to the low-level operating systemprimitives","package"],["BpfVersion","","struct"],["StartProcess","StartProcess wraps ForkExec for package os","func"],["SetBpfImmediate","Deprecated: Use golang.org/x/net/bpf instead","func"],["RawSockaddrInet6","","struct"],["SetBpfDatalink","Deprecated: Use golang.org/x/net/bpf instead","func"],["ParseUnixRights","ParseUnixRights decodes a socket control message that contains aninteger array of open file descriptors from another process","func"],["Termios","","struct"],["Inet4Pktinfo","","struct"],["RawSockaddrDatalink","","struct"],["RouteRIB","RouteRIB returns routing information base, as known as RIB,which consists of network facility information, states andparameters","func"],["SockaddrInet4","","struct"],["RawSockaddr","","struct"],["InterfaceMessage","InterfaceMessage represents a routing message containingnetwork interface entries","struct"],["Timespec","","struct"],["Linger","","struct"],["BpfStat","","struct"],["ForkExec","Combination of fork and exec, careful to be thread safe","func"],["FdSet","","struct"],["CheckBpfVersion","Deprecated: Use golang.org/x/net/bpf instead","func"],["Fstore_t","","struct"],["Timeval32","","struct"],["SysProcAttr","","struct"],["BpfJump","Deprecated: Use golang.org/x/net/bpf instead","func"],["RawSockaddrAny","","struct"],["BpfTimeout","Deprecated: Use golang.org/x/net/bpf instead","func"],["Timespec.Nano","Nano returns ts as the number of nanoseconds elapsed since the Unix epoch","func"],["BpfStmt","Deprecated: Use golang.org/x/net/bpf instead","func"],["IfmaMsghdr2","","struct"],["RoutingMessage","RoutingMessage represents a routing message","interface"],["Dirent","","struct"],["StringSlicePtr","StringSlicePtr converts a slice of strings to a slice of pointersto NUL-terminated byte arrays","func"],["SockaddrInet6","","struct"],["Credential","Credential holds user and group identities to be assumedby a child process started by StartProcess","struct"],["StringBytePtr","StringBytePtr returns a pointer to a NUL-terminated array of bytes","func"],["IfMsghdr","","struct"],["UnixRights","UnixRights encodes a set of open file descriptors into a socketcontrol message for sending to another process","func"],["SocketControlMessage","SocketControlMessage represents a socket control message","struct"],["Timeval.Unix","Unix returns tv as the number of seconds and nanoseconds elapsed since theUnix epoch","func"],["Fsid","","struct"],["InterfaceAddrMessage","InterfaceAddrMessage represents a routing message containingnetwork interface address entries","struct"],["Timespec.Unix","Unix returns ts as the number of seconds and nanoseconds elapsed since theUnix epoch","func"],["RtMetrics","","struct"],["BpfHeadercmpl","Deprecated: Use golang.org/x/net/bpf instead","func"],["Fbootstraptransfer_t","","struct"],["SockaddrDatalink","","struct"],["FcntlFlock","FcntlFlock performs a fcntl syscall for the F_GETLK, F_SETLK or F_SETLKW command","func"],["Timeval","","struct"],["Signal","A Signal is a number describing a process signal","other"],["Conn","Conn is implemented by some types in the net and os packages to provideaccess to the underlying file descriptor or handle","interface"],["Statfs_t","","struct"],["SetBpfHeadercmpl","Deprecated: Use golang.org/x/net/bpf instead","func"],["StringByteSlice","StringByteSlice converts a string to a NUL-terminated []byte,If s contains a NUL byte this function panics instead ofreturning an error","func"],["Kevent_t","","struct"],["RawConn","A RawConn is a raw network connection","interface"],["ProcAttr","ProcAttr holds attributes that will be applied to a new process startedby StartProcess","struct"],["ParseRoutingSockaddr","ParseRoutingSockaddr parses msg's payload as raw sockaddrs andreturns the slice containing the Sockaddr interfaces","func"],["Log2phys_t","","struct"],["TimevalToNsec","TimevalToNsec converts a Timeval value into a number of nanosecondssince the Unix epoch","func"],["CmsgSpace","CmsgSpace returns the number of bytes an ancillary element withpayload of the passed data length occupies","func"],["SetBpfTimeout","Deprecated: Use golang.org/x/net/bpf instead","func"],["NsecToTimeval","NsecToTimeval takes a number of nanoseconds since the Unix epochand returns the corresponding Timeval value","func"],["InterfaceMulticastAddrMessage","InterfaceMulticastAddrMessage represents a routing messagecontaining network interface address entries","struct"],["Iovec","","struct"],["BpfStats","Deprecated: Use golang.org/x/net/bpf instead","func"],["FlushBpf","Deprecated: Use golang.org/x/net/bpf instead","func"],["Timeval.Nano","Nano returns tv as the number of nanoseconds elapsed since the Unix epoch","func"],["RawSockaddrInet4","","struct"],["TimespecToNsec","TimespecToNsec converts a Timespec value into a number ofnanoseconds since the Unix epoch","func"],["IfmaMsghdr","","struct"],["IPMreq","","struct"],["RtMsghdr","","struct"],["SetBpfInterface","Deprecated: Use golang.org/x/net/bpf instead","func"],["Radvisory_t","","struct"],["Exec","Exec invokes the execve(2) system call","func"],["BpfDatalink","Deprecated: Use golang.org/x/net/bpf instead","func"],["BytePtrFromString","BytePtrFromString returns a pointer to a NUL-terminated array ofbytes containing the text of s","func"],["Stat_t","","struct"],["IfaMsghdr","","struct"],["ParseDirent","ParseDirent parses up to max directory entries in buf,appending the names to names","func"],["BpfHdr","","struct"],["ByteSliceFromString","ByteSliceFromString returns a NUL-terminated slice of bytescontaining the text of s","func"],["SetBpfBuflen","Deprecated: Use golang.org/x/net/bpf instead","func"],["BpfInsn","","struct"],["BpfProgram","","struct"],["WaitStatus","","other"],["IPv6MTUInfo","","struct"],["Sockaddr","","interface"],["RouteMessage","RouteMessage represents a routing message containing routingentries","struct"],["Cmsghdr","","struct"],["CmsgLen","CmsgLen returns the value to store in the Len field of the Cmsghdrstructure, taking into account any necessary alignment","func"],["Flock_t","","struct"],["Msghdr","","struct"],["Errno","An Errno is an unsigned number describing an error condition","other"],["BpfBuflen","Deprecated: Use golang.org/x/net/bpf instead","func"],["IPv6Mreq","","struct"],["Inet6Pktinfo","","struct"],["NsecToTimespec","NsecToTimespec takes a number of nanoseconds since the Unix epochand returns the corresponding Timespec value","func"],["ParseRoutingMessage","ParseRoutingMessage parses b as routing messages and returns theslice containing the RoutingMessage interfaces","func"],["SlicePtrFromStrings","SlicePtrFromStrings converts a slice of strings to a slice ofpointers to NUL-terminated byte arrays","func"],["SetBpf","Deprecated: Use golang.org/x/net/bpf instead","func"],["SetBpfPromisc","Deprecated: Use golang.org/x/net/bpf instead","func"],["Rusage","","struct"],["ParseSocketControlMessage","ParseSocketControlMessage parses b as an array of socket controlmessages","func"],["SockaddrUnix","","struct"],["BpfInterface","Deprecated: Use golang.org/x/net/bpf instead","func"],["RawSockaddrUnix","","struct"],["IfData","","struct"],["Rlimit","","struct"],["ICMPv6Filter","","struct"]],"builtin":[["builtin","Package builtin provides documentation for Go's predeclared identifiers","package"],["float64","float64 is the set of all IEEE-754 64-bit floating-point numbers","other"],["panic","The panic built-in function stops normal execution of the currentgoroutine","func"],["FloatType","FloatType is here for the purposes of documentation only","other"],["copy","The copy built-in function copies elements from a source slice into adestination slice","func"],["IntegerType","IntegerType is here for the purposes of documentation only","other"],["make","The make built-in function allocates and initializes an object of typeslice, map, or chan (only)","func"],["string","string is the set of all strings of 8-bit bytes, conventionally but notnecessarily representing UTF-8-encoded text","other"],["cap","The cap built-in function returns the capacity of v, according to its type:","func"],["int16","int16 is the set of all signed 16-bit integers","other"],["len","The len built-in function returns the length of v, according to its type:","func"],["uint","uint is an unsigned integer type that is at least 32 bits in size","other"],["uint16","uint16 is the set of all unsigned 16-bit integers","other"],["complex64","complex64 is the set of all complex numbers with float32 real andimaginary parts","other"],["rune","rune is an alias for int32 and is equivalent to int32 in all ways","other"],["uint64","uint64 is the set of all unsigned 64-bit integers","other"],["Type","Type is here for the purposes of documentation only","other"],["delete","The delete built-in function deletes the element with the specified key(m[key]) from the map","func"],["append","The append built-in function appends elements to the end of a slice","func"],["Type1","Type1 is here for the purposes of documentation only","other"],["bool","bool is the set of boolean values, true and false","other"],["real","The real built-in function returns the real part of the complex number c","func"],["float32","float32 is the set of all IEEE-754 32-bit floating-point numbers","other"],["print","The print built-in function formats its arguments in animplementation-specific way and writes the result to standard error","func"],["int","int is a signed integer type that is at least 32 bits in size","other"],["new","The new built-in function allocates memory","func"],["uint32","uint32 is the set of all unsigned 32-bit integers","other"],["ComplexType","ComplexType is here for the purposes of documentation only","other"],["byte","byte is an alias for uint8 and is equivalent to uint8 in all ways","other"],["uint8","uint8 is the set of all unsigned 8-bit integers","other"],["int32","int32 is the set of all signed 32-bit integers","other"],["uintptr","uintptr is an integer type that is large enough to hold the bit pattern ofany pointer","other"],["int8","int8 is the set of all signed 8-bit integers","other"],["println","The println built-in function formats its arguments in animplementation-specific way and writes the result to standard error","func"],["close","The close built-in function closes a channel, which must be eitherbidirectional or send-only","func"],["error","The error built-in interface type is the conventional interface forrepresenting an error condition, with the nil value representing no error","interface"],["imag","The imag built-in function returns the imaginary part of the complexnumber c","func"],["complex128","complex128 is the set of all complex numbers with float64 real andimaginary parts","other"],["recover","The recover built-in function allows a program to manage behavior of apanicking goroutine","func"],["complex","The complex built-in function constructs a complex value from twofloating-point values","func"],["int64","int64 is the set of all signed 64-bit integers","other"]],"context":[["context","Package context defines the Context type, which carries deadlines,cancellation signals, and other request-scoped values across API boundariesand between processes","package"],["WithValue","WithValue returns a copy of parent in which the value associated with key isval","func"],["Context","A Context carries a deadline, a cancellation signal, and other values acrossAPI boundaries","interface"],["TODO","TODO returns a non-nil, empty Context","func"],["CancelFunc","A CancelFunc tells an operation to abandon its work","other"],["WithDeadline","WithDeadline returns a copy of the parent context with the deadline adjustedto be no later than d","func"],["WithTimeout","WithTimeout returns WithDeadline(parent, time.Now().Add(timeout))","func"],["WithCancel","WithCancel returns a copy of parent with a new Done channel","func"],["Background","Background returns a non-nil, empty Context","func"]],"debug/dwarf":[["debug/dwarf","Package dwarf provides access to DWARF debugging information loaded fromexecutable files, as defined in the DWARF 2.0 Standard athttp://dwarfstd.org/doc/dwarf-2.0.0.pdf","package"],["BasicType","A BasicType holds fields common to all basic types","struct"],["Reader.SkipChildren","SkipChildren skips over the child entries associated withthe last Entry returned by Next","func"],["VoidType","A VoidType represents the C void type","struct"],["LineReader.Seek","Seek restores the line table reader to a position returned by Tell","func"],["LineReader.Reset","Reset repositions the line table reader at the beginning of theline table","func"],["Entry","An entry is a sequence of attribute/value pairs","struct"],["Field","A Field is a single attribute/value pair in an Entry","struct"],["IntType","An IntType represents a signed integer type","struct"],["DecodeError","","struct"],["LineEntry","A LineEntry is a row in a DWARF line table","struct"],["LineReader.Tell","Tell returns the current position in the line table","func"],["DotDotDotType","A DotDotDotType represents the variadic ..","struct"],["Tag","A Tag is the classification (the type) of an Entry","other"],["Data.LineReader","LineReader returns a new reader for the line table of compilationunit cu, which must be an Entry with tag TagCompileUnit","func"],["ArrayType","An ArrayType represents a fixed size array type","struct"],["CharType","A CharType represents a signed character type","struct"],["Data.Type","Type reads the type at off in the DWARF “info” section","func"],["UcharType","A UcharType represents an unsigned character type","struct"],["PtrType","A PtrType represents a pointer type","struct"],["Reader.Seek","Seek positions the Reader at offset off in the encoded entry stream","func"],["QualType","A QualType represents a type that has the C/C++ \"const\", \"restrict\", or \"volatile\" qualifier","struct"],["EnumType","An EnumType represents an enumerated type","struct"],["UnspecifiedType","An UnspecifiedType represents an implicit, unknown, ambiguous or nonexistent type","struct"],["ComplexType","A ComplexType represents a complex floating point type","struct"],["Reader.Next","Next reads the next entry from the encoded entry stream","func"],["Reader.SeekPC","SeekPC returns the Entry for the compilation unit that includes pc,and positions the reader to read the children of that unit","func"],["LineReader.SeekPC","SeekPC sets *entry to the LineEntry that includes pc and positionsthe reader on the next entry in the line table","func"],["Offset","An Offset represents the location of an Entry within the DWARF info","other"],["EnumValue","An EnumValue represents a single enumeration value","struct"],["Data","Data represents the DWARF debugging informationloaded from an executable file (for example, an ELF or Mach-O executable)","struct"],["Entry.Val","Val returns the value associated with attribute Attr in Entry,or nil if there is no such attribute","func"],["New","New returns a new Data object initialized from the given parameters","func"],["Attr","An Attr identifies the attribute type in a DWARF Entry's Field","other"],["StructField","A StructField represents a field in a struct, union, or C++ class type","struct"],["UnsupportedType","An UnsupportedType is a placeholder returned in situations where weencounter a type that isn't supported","struct"],["LineFile","A LineFile is a source file referenced by a DWARF line table entry","struct"],["FloatType","A FloatType represents a floating point type","struct"],["Reader","A Reader allows reading Entry structures from a DWARF “info” section","struct"],["Data.Ranges","Ranges returns the PC ranges covered by e, a slice of [low,high) pairs","func"],["UintType","A UintType represents an unsigned integer type","struct"],["Class","A Class is the DWARF 4 class of an attribute value","other"],["AddrType","An AddrType represents a machine address type","struct"],["Data.Reader","Reader returns a new Reader for Data","func"],["StructType","A StructType represents a struct, union, or C++ class type","struct"],["FuncType","A FuncType represents a function type","struct"],["Entry.AttrField","AttrField returns the Field associated with attribute Attr inEntry, or nil if there is no such attribute","func"],["LineReaderPos","A LineReaderPos represents a position in a line table","struct"],["LineReader","A LineReader reads a sequence of LineEntry structures from a DWARF\"line\" section for a single compilation unit","struct"],["Type","A Type conventionally represents a pointer to any of thespecific Type structures (CharType, StructType, etc.)","interface"],["BoolType","A BoolType represents a boolean type","struct"],["CommonType","A CommonType holds fields common to multiple types","struct"],["LineReader.Next","Next sets *entry to the next row in this line table and moves tothe next row","func"],["TypedefType","A TypedefType represents a named type","struct"],["Reader.AddressSize","AddressSize returns the size in bytes of addresses in the current compilationunit","func"],["Data.AddTypes","AddTypes will add one .debug_types section to the DWARF data","func"]],"go/doc":[["go/doc","Package doc extracts source code documentation from a Go AST","package"],["ToHTML","ToHTML converts comment text to formatted HTML","func"],["Note","A Note represents a marked comment starting with \"MARKER(uid): note body\"","struct"],["Filter","","other"],["Synopsis","Synopsis returns a cleaned version of the first sentence in s","func"],["Package","Package is the documentation for an entire package","struct"],["Type","Type is the documentation for a type declaration","struct"],["Package.Filter","Filter eliminates documentation for names that don't pass through the filter f","func"],["Mode","Mode values control the operation of New","other"],["IsPredeclared","IsPredeclared reports whether s is a predeclared identifier","func"],["ToText","ToText prepares comment text for presentation in textual output","func"],["Examples","Examples returns the examples found in the files, sorted by Name field","func"],["Example","An Example represents an example function found in a source files","struct"],["Func","Func is the documentation for a func declaration","struct"],["New","New computes the package documentation for the given package AST","func"],["Value","Value is the documentation for a (possibly grouped) var or const declaration","struct"]],"container/heap":[["container/heap","Package heap provides heap operations for any type that implementsheap.Interface","package"],["Push","Push pushes the element x onto the heap","func"],["Init","Init establishes the heap invariants required by the other routines in this package","func"],["Remove","Remove removes and returns the element at index i from the heap","func"],["Pop","Pop removes and returns the minimum element (according to Less) from the heap","func"],["Interface","The Interface type describes the requirementsfor a type using the routines in this package","interface"],["Fix","Fix re-establishes the heap ordering after the element at index i has changed its value","func"]],"crypto/sha256":[["crypto/sha256","Package sha256 implements the SHA224 and SHA256 hash algorithms as definedin FIPS 180-4","package"],["New","New returns a new hash.Hash computing the SHA256 checksum","func"],["New224","New224 returns a new hash.Hash computing the SHA224 checksum","func"],["Sum256","Sum256 returns the SHA256 checksum of the data","func"],["Sum224","Sum224 returns the SHA224 checksum of the data","func"]],"encoding/ascii85":[["encoding/ascii85","Package ascii85 implements the ascii85 data encodingas used in the btoa tool and Adobe's PostScript and PDF document formats","package"],["NewDecoder","NewDecoder constructs a new ascii85 stream decoder","func"],["Encode","Encode encodes src into at most MaxEncodedLen(len(src))bytes of dst, returning the actual number of bytes written","func"],["CorruptInputError","","other"],["Decode","Decode decodes src into dst, returning both the numberof bytes written to dst and the number consumed from src","func"],["MaxEncodedLen","MaxEncodedLen returns the maximum length of an encoding of n source bytes","func"],["NewEncoder","NewEncoder returns a new ascii85 stream encoder","func"]],"path":[["path","Package path implements utility routines for manipulating slash-separatedpaths","package"],["Dir","Dir returns all but the last element of path, typically the path's directory","func"],["Match","Match reports whether name matches the shell pattern","func"],["Base","Base returns the last element of path","func"],["Join","Join joins any number of path elements into a single path, adding aseparating slash if necessary","func"],["Split","Split splits path immediately following the final slash,separating it into a directory and file name component","func"],["Ext","Ext returns the file name extension used by path","func"],["Clean","Clean returns the shortest path name equivalent to pathby purely lexical processing","func"],["IsAbs","IsAbs reports whether the path is absolute","func"]],"net/http/cookiejar":[["net/http/cookiejar","Package cookiejar implements an in-memory RFC 6265-compliant http.CookieJar","package"],["PublicSuffixList","PublicSuffixList provides the public suffix of a domain","interface"],["Options","Options are the options for creating a new Jar","struct"],["Jar.Cookies","Cookies implements the Cookies method of the http.CookieJar interface","func"],["Jar.SetCookies","SetCookies implements the SetCookies method of the http.CookieJar interface","func"],["Jar","Jar implements the http.CookieJar interface from the net/http package","struct"],["New","New returns a new cookie jar","func"]],"encoding/base32":[["encoding/base32","Package base32 implements base32 encoding as specified by RFC 4648","package"],["Encoding.EncodedLen","EncodedLen returns the length in bytes of the base32 encodingof an input buffer of length n","func"],["Encoding.DecodeString","DecodeString returns the bytes represented by the base32 string s","func"],["NewEncoding","NewEncoding returns a new Encoding defined by the given alphabet,which must be a 32-byte string","func"],["Encoding.WithPadding","WithPadding creates a new encoding identical to enc exceptwith a specified padding character, or NoPadding to disable padding","func"],["Encoding.Encode","Encode encodes src using the encoding enc, writingEncodedLen(len(src)) bytes to dst","func"],["NewEncoder","NewEncoder returns a new base32 stream encoder","func"],["Encoding","An Encoding is a radix 32 encoding/decoding scheme, defined by a32-character alphabet","struct"],["Encoding.Decode","Decode decodes src using the encoding enc","func"],["NewDecoder","NewDecoder constructs a new base32 stream decoder","func"],["Encoding.EncodeToString","EncodeToString returns the base32 encoding of src","func"],["Encoding.DecodedLen","DecodedLen returns the maximum length in bytes of the decoded datacorresponding to n bytes of base32-encoded data","func"],["CorruptInputError","","other"]],"encoding/json":[["encoding/json","Package json implements encoding and decoding of JSON as defined inRFC 7159","package"],["Decoder","A Decoder reads and decodes JSON values from an input stream","struct"],["Number","A Number represents a JSON number literal","other"],["Compact","Compact appends to dst the JSON-encoded src withinsignificant space characters elided","func"],["Decoder.DisallowUnknownFields","DisallowUnknownFields causes the Decoder to return an error when the destinationis a struct and the input contains object keys which do not match anynon-ignored, exported fields in the destination","func"],["UnsupportedValueError","","struct"],["Number.Int64","Int64 returns the number as an int64","func"],["Marshaler","Marshaler is the interface implemented by types thatcan marshal themselves into valid JSON","interface"],["Decoder.More","More reports whether there is another element in thecurrent array or object being parsed","func"],["Encoder.SetEscapeHTML","SetEscapeHTML specifies whether problematic HTML charactersshould be escaped inside JSON quoted strings","func"],["HTMLEscape","HTMLEscape appends to dst the JSON-encoded src with <, >, &, U+2028 and U+2029characters inside string literals changed to \\u003c, \\u003e, \\u0026, \\u2028, \\u2029so that the JSON will be safe to embed inside HTML <script> tags","func"],["Number.String","String returns the literal text of the number","func"],["Unmarshaler","Unmarshaler is the interface implemented by typesthat can unmarshal a JSON description of themselves","interface"],["UnmarshalFieldError","An UnmarshalFieldError describes a JSON object key thatled to an unexported (and therefore unwritable) struct field","struct"],["MarshalerError","A MarshalerError represents an error from calling a MarshalJSON or MarshalText method","struct"],["UnsupportedTypeError","An UnsupportedTypeError is returned by Marshal when attemptingto encode an unsupported value type","struct"],["Number.Float64","Float64 returns the number as a float64","func"],["Decoder.Buffered","Buffered returns a reader of the data remaining in the Decoder'sbuffer","func"],["Decoder.UseNumber","UseNumber causes the Decoder to unmarshal a number into an interface{} as aNumber instead of as a float64","func"],["InvalidUTF8Error","Before Go 1.2, an InvalidUTF8Error was returned by Marshal whenattempting to encode a string value with invalid UTF-8 sequences","struct"],["Encoder","An Encoder writes JSON values to an output stream","struct"],["UnmarshalTypeError","An UnmarshalTypeError describes a JSON value that wasnot appropriate for a value of a specific Go type","struct"],["Decoder.Token","Token returns the next JSON token in the input stream","func"],["RawMessage","RawMessage is a raw encoded JSON value","other"],["Token","A Token holds a value of one of these types:","other"],["Marshal","Marshal returns the JSON encoding of v","func"],["RawMessage.MarshalJSON","MarshalJSON returns m as the JSON encoding of m","func"],["SyntaxError","A SyntaxError is a description of a JSON syntax error","struct"],["Valid","Valid reports whether data is a valid JSON encoding","func"],["Indent","Indent appends to dst an indented form of the JSON-encoded src","func"],["Delim","A Delim is a JSON array or object delimiter, one of [ ] { or }","other"],["MarshalIndent","MarshalIndent is like Marshal but applies Indent to format the output","func"],["RawMessage.UnmarshalJSON","UnmarshalJSON sets *m to a copy of data","func"],["Decoder.Decode","Decode reads the next JSON-encoded value from itsinput and stores it in the value pointed to by v","func"],["NewEncoder","NewEncoder returns a new encoder that writes to w","func"],["Encoder.Encode","Encode writes the JSON encoding of v to the stream,followed by a newline character","func"],["Encoder.SetIndent","SetIndent instructs the encoder to format each subsequent encodedvalue as if indented by the package-level function Indent(dst, src, prefix, indent)","func"],["InvalidUnmarshalError","An InvalidUnmarshalError describes an invalid argument passed to Unmarshal","struct"],["NewDecoder","NewDecoder returns a new decoder that reads from r","func"],["Unmarshal","Unmarshal parses the JSON-encoded data and stores the resultin the value pointed to by v","func"]],"regexp":[["regexp","Package regexp implements regular expression search","package"],["Regexp.Expand","Expand appends template to dst and returns the result; during theappend, Expand replaces variables in the template with correspondingmatches drawn from src","func"],["Regexp.Longest","Longest makes future searches prefer the leftmost-longest match","func"],["Regexp.FindAll","FindAll is the 'All' version of Find; it returns a slice of all successivematches of the expression, as defined by the 'All' description in thepackage comment","func"],["Regexp.NumSubexp","NumSubexp returns the number of parenthesized subexpressions in this Regexp","func"],["Regexp.FindIndex","FindIndex returns a two-element slice of integers defining the location ofthe leftmost match in b of the regular expression","func"],["Regexp.FindSubmatch","FindSubmatch returns a slice of slices holding the text of the leftmostmatch of the regular expression in b and the matches, if any, of itssubexpressions, as defined by the 'Submatch' descriptions in the packagecomment","func"],["MustCompile","MustCompile is like Compile but panics if the expression cannot be parsed","func"],["Regexp.Find","Find returns a slice holding the text of the leftmost match in b of the regular expression","func"],["Regexp.MatchString","MatchString reports whether the string scontains any match of the regular expression re","func"],["QuoteMeta","QuoteMeta returns a string that escapes all regular expression metacharactersinside the argument text; the returned string is a regular expression matchingthe literal text","func"],["MatchString","MatchString reports whether the string scontains any match of the regular expression pattern","func"],["Regexp.Copy","Copy returns a new Regexp object copied from re","func"],["Regexp.SubexpNames","SubexpNames returns the names of the parenthesized subexpressionsin this Regexp","func"],["Regexp.FindAllStringIndex","FindAllStringIndex is the 'All' version of FindStringIndex; it returns aslice of all successive matches of the expression, as defined by the 'All'description in the package comment","func"],["Regexp.LiteralPrefix","LiteralPrefix returns a literal string that must begin any matchof the regular expression re","func"],["Regexp.FindAllString","FindAllString is the 'All' version of FindString; it returns a slice of allsuccessive matches of the expression, as defined by the 'All' descriptionin the package comment","func"],["Regexp.FindReaderSubmatchIndex","FindReaderSubmatchIndex returns a slice holding the index pairsidentifying the leftmost match of the regular expression of text read bythe RuneReader, and the matches, if any, of its subexpressions, as definedby the 'Submatch' and 'Index' descriptions in the package comment","func"],["Regexp.ReplaceAllLiteral","ReplaceAllLiteral returns a copy of src, replacing matches of the Regexpwith the replacement bytes repl","func"],["Match","Match reports whether the byte slice bcontains any match of the regular expression pattern","func"],["Regexp.FindString","FindString returns a string holding the text of the leftmost match in s of the regularexpression","func"],["Regexp.ExpandString","ExpandString is like Expand but the template and source are strings","func"],["Regexp.MatchReader","MatchReader reports whether the text returned by the RuneReadercontains any match of the regular expression re","func"],["Regexp.String","String returns the source text used to compile the regular expression","func"],["CompilePOSIX","CompilePOSIX is like Compile but restricts the regular expressionto POSIX ERE (egrep) syntax and changes the match semantics toleftmost-longest","func"],["Regexp.ReplaceAllString","ReplaceAllString returns a copy of src, replacing matches of the Regexpwith the replacement string repl","func"],["Regexp.Split","Split slices s into substrings separated by the expression and returns a slice ofthe substrings between those expression matches","func"],["Regexp.FindStringSubmatch","FindStringSubmatch returns a slice of strings holding the text of theleftmost match of the regular expression in s and the matches, if any, ofits subexpressions, as defined by the 'Submatch' description in thepackage comment","func"],["Regexp.ReplaceAllLiteralString","ReplaceAllLiteralString returns a copy of src, replacing matches of the Regexpwith the replacement string repl","func"],["Regexp.ReplaceAllFunc","ReplaceAllFunc returns a copy of src in which all matches of theRegexp have been replaced by the return value of function repl appliedto the matched byte slice","func"],["Regexp.FindAllSubmatch","FindAllSubmatch is the 'All' version of FindSubmatch; it returns a sliceof all successive matches of the expression, as defined by the 'All'description in the package comment","func"],["Regexp.FindAllStringSubmatch","FindAllStringSubmatch is the 'All' version of FindStringSubmatch; itreturns a slice of all successive matches of the expression, as defined bythe 'All' description in the package comment","func"],["Regexp.Match","Match reports whether the byte slice bcontains any match of the regular expression re","func"],["MustCompilePOSIX","MustCompilePOSIX is like CompilePOSIX but panics if the expression cannot be parsed","func"],["Regexp.ReplaceAll","ReplaceAll returns a copy of src, replacing matches of the Regexpwith the replacement text repl","func"],["Regexp.FindStringSubmatchIndex","FindStringSubmatchIndex returns a slice holding the index pairsidentifying the leftmost match of the regular expression in s and thematches, if any, of its subexpressions, as defined by the 'Submatch' and'Index' descriptions in the package comment","func"],["Regexp.FindAllStringSubmatchIndex","FindAllStringSubmatchIndex is the 'All' version ofFindStringSubmatchIndex; it returns a slice of all successive matches ofthe expression, as defined by the 'All' description in the packagecomment","func"],["Compile","Compile parses a regular expression and returns, if successful,a Regexp object that can be used to match against text","func"],["Regexp.FindReaderIndex","FindReaderIndex returns a two-element slice of integers defining thelocation of the leftmost match of the regular expression in text read fromthe RuneReader","func"],["Regexp.FindAllIndex","FindAllIndex is the 'All' version of FindIndex; it returns a slice of allsuccessive matches of the expression, as defined by the 'All' descriptionin the package comment","func"],["Regexp","Regexp is the representation of a compiled regular expression","struct"],["Regexp.FindAllSubmatchIndex","FindAllSubmatchIndex is the 'All' version of FindSubmatchIndex; it returnsa slice of all successive matches of the expression, as defined by the'All' description in the package comment","func"],["Regexp.FindSubmatchIndex","FindSubmatchIndex returns a slice holding the index pairs identifying theleftmost match of the regular expression in b and the matches, if any, ofits subexpressions, as defined by the 'Submatch' and 'Index' descriptionsin the package comment","func"],["Regexp.ReplaceAllStringFunc","ReplaceAllStringFunc returns a copy of src in which all matches of theRegexp have been replaced by the return value of function repl appliedto the matched substring","func"],["Regexp.FindStringIndex","FindStringIndex returns a two-element slice of integers defining thelocation of the leftmost match in s of the regular expression","func"],["MatchReader","MatchReader reports whether the text returned by the RuneReadercontains any match of the regular expression pattern","func"]],"time":[["time","Package time provides functionality for measuring and displaying time","package"],["After","After waits for the duration to elapse and then sends the current timeon the returned channel","func"],["Sleep","Sleep pauses the current goroutine for at least the duration d","func"],["Duration.Minutes","Minutes returns the duration as a floating point number of minutes","func"],["Parse","Parse parses a formatted string and returns the time value it represents","func"],["Timer.Reset","Reset changes the timer to expire after duration d","func"],["Timer.Stop","Stop prevents the Timer from firing","func"],["Time.Format","Format returns a textual representation of the time value formattedaccording to layout, which defines the format by showing how the referencetime, defined to be","func"],["Unix","Unix returns the local Time corresponding to the given Unix time,sec seconds and nsec nanoseconds since January 1, 1970 UTC","func"],["Timer","The Timer type represents a single event","struct"],["Time.Unix","Unix returns t as a Unix time, the number of seconds elapsedsince January 1, 1970 UTC","func"],["LoadLocationFromTZData","LoadLocationFromTZData returns a Location with the given nameinitialized from the IANA Time Zone database-formatted data","func"],["Time.MarshalBinary","MarshalBinary implements the encoding.BinaryMarshaler interface","func"],["Time.Zone","Zone computes the time zone in effect at time t, returning the abbreviatedname of the zone (such as \"CET\") and its offset in seconds east of UTC","func"],["Time.Date","Date returns the year, month, and day in which t occurs","func"],["Time.Second","Second returns the second offset within the minute specified by t, in the range [0, 59]","func"],["Duration.Microseconds","Microseconds returns the duration as an integer microsecond count","func"],["Time.UnmarshalBinary","UnmarshalBinary implements the encoding.BinaryUnmarshaler interface","func"],["Location.String","String returns a descriptive name for the time zone information,corresponding to the name argument to LoadLocation or FixedZone","func"],["Time.UTC","UTC returns t with the location set to UTC","func"],["Ticker","A Ticker holds a channel that delivers `ticks' of a clockat intervals","struct"],["Time.AddDate","AddDate returns the time corresponding to adding thegiven number of years, months, and days to t","func"],["Time.MarshalText","MarshalText implements the encoding.TextMarshaler interface","func"],["Weekday","A Weekday specifies a day of the week (Sunday = 0, ...)","other"],["Time.IsZero","IsZero reports whether t represents the zero time instant,January 1, year 1, 00:00:00 UTC","func"],["Time.AppendFormat","AppendFormat is like Format but appends the textualrepresentation to b and returns the extended buffer","func"],["Ticker.Stop","Stop turns off a ticker","func"],["Time.ISOWeek","ISOWeek returns the ISO 8601 year and week number in which t occurs","func"],["FixedZone","FixedZone returns a Location that always usesthe given zone name and offset (seconds east of UTC)","func"],["Time.In","In returns a copy of t representing the same time instant, butwith the copy's location information set to loc for displaypurposes","func"],["Now","Now returns the current local time","func"],["Until","Until returns the duration until t","func"],["Time","A Time represents an instant in time with nanosecond precision","struct"],["Time.GobDecode","GobDecode implements the gob.GobDecoder interface","func"],["NewTimer","NewTimer creates a new Timer that will sendthe current time on its channel after at least duration d","func"],["Time.Truncate","Truncate returns the result of rounding t down to a multiple of d (since the zero time)","func"],["Time.MarshalJSON","MarshalJSON implements the json.Marshaler interface","func"],["Time.YearDay","YearDay returns the day of the year specified by t, in the range [1,365] for non-leap years,and [1,366] in leap years","func"],["Time.Add","Add returns the time t+d","func"],["ParseDuration","ParseDuration parses a duration string","func"],["Time.Before","Before reports whether the time instant t is before u","func"],["Month","A Month specifies a month of the year (January = 1, ...)","other"],["Date","Date returns the Time corresponding to","func"],["Time.Equal","Equal reports whether t and u represent the same time instant","func"],["Time.Weekday","Weekday returns the day of the week specified by t","func"],["Time.Clock","Clock returns the hour, minute, and second within the day specified by t","func"],["Time.UnixNano","UnixNano returns t as a Unix time, the number of nanoseconds elapsedsince January 1, 1970 UTC","func"],["Duration.Round","Round returns the result of rounding d to the nearest multiple of m","func"],["Since","Since returns the time elapsed since t","func"],["Time.Nanosecond","Nanosecond returns the nanosecond offset within the second specified by t,in the range [0, 999999999]","func"],["Duration.Truncate","Truncate returns the result of rounding d toward zero to a multiple of m","func"],["Duration.String","String returns a string representing the duration in the form \"72h3m0.5s\"","func"],["Month.String","String returns the English name of the month (\"January\", \"February\", ...)","func"],["Location","A Location maps time instants to the zone in use at that time","struct"],["Time.GobEncode","GobEncode implements the gob.GobEncoder interface","func"],["Time.Round","Round returns the result of rounding t to the nearest multiple of d (since the zero time)","func"],["LoadLocation","LoadLocation returns the Location with the given name","func"],["Time.Month","Month returns the month of the year specified by t","func"],["Time.Local","Local returns t with the location set to local time","func"],["AfterFunc","AfterFunc waits for the duration to elapse and then calls fin its own goroutine","func"],["Time.UnmarshalText","UnmarshalText implements the encoding.TextUnmarshaler interface","func"],["ParseError.Error","Error returns the string representation of a ParseError","func"],["Tick","Tick is a convenience wrapper for NewTicker providing access to the tickingchannel only","func"],["Duration.Nanoseconds","Nanoseconds returns the duration as an integer nanosecond count","func"],["Time.Location","Location returns the time zone information associated with t","func"],["Duration.Milliseconds","Milliseconds returns the duration as an integer millisecond count","func"],["ParseInLocation","ParseInLocation is like Parse but differs in two important ways","func"],["Weekday.String","String returns the English name of the day (\"Sunday\", \"Monday\", ...)","func"],["Time.Year","Year returns the year in which t occurs","func"],["Duration","A Duration represents the elapsed time between two instantsas an int64 nanosecond count","other"],["Time.Minute","Minute returns the minute offset within the hour specified by t, in the range [0, 59]","func"],["Time.UnmarshalJSON","UnmarshalJSON implements the json.Unmarshaler interface","func"],["Time.After","After reports whether the time instant t is after u","func"],["Time.Sub","Sub returns the duration t-u","func"],["Duration.Seconds","Seconds returns the duration as a floating point number of seconds","func"],["Time.Day","Day returns the day of the month specified by t","func"],["Duration.Hours","Hours returns the duration as a floating point number of hours","func"],["Time.Hour","Hour returns the hour within the day specified by t, in the range [0, 23]","func"],["NewTicker","NewTicker returns a new Ticker containing a channel that will send thetime with a period specified by the duration argument","func"],["ParseError","ParseError describes a problem parsing a time string","struct"],["Time.String","String returns the time formatted using the format string","func"]],"flag":[["flag","Package flag implements command-line flag parsing","package"],["Getter","Getter is an interface that allows the contents of a Value to be retrieved","interface"],["FlagSet.DurationVar","DurationVar defines a time.Duration flag with specified name, default value, and usage string","func"],["FlagSet.Output","Output returns the destination for usage and error messages","func"],["String","String defines a string flag with specified name, default value, and usage string","func"],["Arg","Arg returns the i'th command-line argument","func"],["FlagSet.IntVar","IntVar defines an int flag with specified name, default value, and usage string","func"],["FlagSet.Int","Int defines an int flag with specified name, default value, and usage string","func"],["FlagSet.Set","Set sets the value of the named flag","func"],["Var","Var defines a flag with the specified name and usage string","func"],["FlagSet.Args","Args returns the non-flag arguments","func"],["IntVar","IntVar defines an int flag with specified name, default value, and usage string","func"],["VisitAll","VisitAll visits the command-line flags in lexicographical order, callingfn for each","func"],["Uint64","Uint64 defines a uint64 flag with specified name, default value, and usage string","func"],["FlagSet.Lookup","Lookup returns the Flag structure of the named flag, returning nil if none exists","func"],["FlagSet.Parse","Parse parses flag definitions from the argument list, which should notinclude the command name","func"],["Uint","Uint defines a uint flag with specified name, default value, and usage string","func"],["NFlag","NFlag returns the number of command-line flags that have been set","func"],["FlagSet.SetOutput","SetOutput sets the destination for usage and error messages","func"],["FlagSet.Float64Var","Float64Var defines a float64 flag with specified name, default value, and usage string","func"],["FlagSet.Duration","Duration defines a time.Duration flag with specified name, default value, and usage string","func"],["FlagSet.Float64","Float64 defines a float64 flag with specified name, default value, and usage string","func"],["FlagSet.Uint","Uint defines a uint flag with specified name, default value, and usage string","func"],["Lookup","Lookup returns the Flag structure of the named command-line flag,returning nil if none exists","func"],["StringVar","StringVar defines a string flag with specified name, default value, and usage string","func"],["FlagSet.UintVar","UintVar defines a uint flag with specified name, default value, and usage string","func"],["ErrorHandling","ErrorHandling defines how FlagSet.Parse behaves if the parse fails","other"],["FlagSet.Uint64Var","Uint64Var defines a uint64 flag with specified name, default value, and usage string","func"],["DurationVar","DurationVar defines a time.Duration flag with specified name, default value, and usage string","func"],["FlagSet.NFlag","NFlag returns the number of flags that have been set","func"],["FlagSet.Init","Init sets the name and error handling property for a flag set","func"],["Visit","Visit visits the command-line flags in lexicographical order, calling fnfor each","func"],["FlagSet.Int64Var","Int64Var defines an int64 flag with specified name, default value, and usage string","func"],["FlagSet.Var","Var defines a flag with the specified name and usage string","func"],["FlagSet.ErrorHandling","ErrorHandling returns the error handling behavior of the flag set","func"],["Int64Var","Int64Var defines an int64 flag with specified name, default value, and usage string","func"],["Set","Set sets the value of the named command-line flag","func"],["FlagSet.BoolVar","BoolVar defines a bool flag with specified name, default value, and usage string","func"],["Flag","A Flag represents the state of a flag","struct"],["FlagSet.NArg","NArg is the number of arguments remaining after flags have been processed","func"],["FlagSet.Name","Name returns the name of the flag set","func"],["PrintDefaults","PrintDefaults prints, to standard error unless configured otherwise,a usage message showing the default settings of all definedcommand-line flags","func"],["BoolVar","BoolVar defines a bool flag with specified name, default value, and usage string","func"],["FlagSet.Int64","Int64 defines an int64 flag with specified name, default value, and usage string","func"],["FlagSet.Visit","Visit visits the flags in lexicographical order, calling fn for each","func"],["FlagSet.String","String defines a string flag with specified name, default value, and usage string","func"],["UnquoteUsage","UnquoteUsage extracts a back-quoted name from the usagestring for a flag and returns it and the un-quoted usage","func"],["NArg","NArg is the number of arguments remaining after flags have been processed","func"],["Args","Args returns the non-flag command-line arguments","func"],["Uint64Var","Uint64Var defines a uint64 flag with specified name, default value, and usage string","func"],["FlagSet","A FlagSet represents a set of defined flags","struct"],["FlagSet.Bool","Bool defines a bool flag with specified name, default value, and usage string","func"],["Duration","Duration defines a time.Duration flag with specified name, default value, and usage string","func"],["FlagSet.StringVar","StringVar defines a string flag with specified name, default value, and usage string","func"],["Int64","Int64 defines an int64 flag with specified name, default value, and usage string","func"],["Value","Value is the interface to the dynamic value stored in a flag","interface"],["Bool","Bool defines a bool flag with specified name, default value, and usage string","func"],["FlagSet.Uint64","Uint64 defines a uint64 flag with specified name, default value, and usage string","func"],["NewFlagSet","NewFlagSet returns a new, empty flag set with the specified name anderror handling property","func"],["Float64","Float64 defines a float64 flag with specified name, default value, and usage string","func"],["FlagSet.Arg","Arg returns the i'th argument","func"],["Float64Var","Float64Var defines a float64 flag with specified name, default value, and usage string","func"],["UintVar","UintVar defines a uint flag with specified name, default value, and usage string","func"],["FlagSet.Parsed","Parsed reports whether f.Parse has been called","func"],["FlagSet.PrintDefaults","PrintDefaults prints, to standard error unless configured otherwise, thedefault values of all defined command-line flags in the set","func"],["Parsed","Parsed reports whether the command-line flags have been parsed","func"],["Parse","Parse parses the command-line flags from os.Args[1:]","func"],["Int","Int defines an int flag with specified name, default value, and usage string","func"],["FlagSet.VisitAll","VisitAll visits the flags in lexicographical order, calling fn for each","func"]],"mime":[["mime","Package mime implements parts of the MIME spec","package"],["WordEncoder.Encode","Encode returns the encoded-word form of s","func"],["WordDecoder","A WordDecoder decodes MIME headers containing RFC 2047 encoded-words","struct"],["WordDecoder.DecodeHeader","DecodeHeader decodes all encoded-words of the given string","func"],["ExtensionsByType","ExtensionsByType returns the extensions known to be associated with the MIMEtype typ","func"],["WordEncoder","A WordEncoder is an RFC 2047 encoded-word encoder","other"],["FormatMediaType","FormatMediaType serializes mediatype t and the parametersparam as a media type conforming to RFC 2045 and RFC 2616","func"],["WordDecoder.Decode","Decode decodes an RFC 2047 encoded-word","func"],["ParseMediaType","ParseMediaType parses a media type value and any optionalparameters, per RFC 1521","func"],["AddExtensionType","AddExtensionType sets the MIME type associated withthe extension ext to typ","func"],["TypeByExtension","TypeByExtension returns the MIME type associated with the file extension ext","func"]],"runtime/debug":[["runtime/debug","Package debug contains facilities for programs to debug themselves whilethey are running","package"],["SetMaxThreads","SetMaxThreads sets the maximum number of operating systemthreads that the Go program can use","func"],["SetGCPercent","SetGCPercent sets the garbage collection target percentage:a collection is triggered when the ratio of freshly allocated datato live data remaining after the previous collection reaches this percentage","func"],["BuildInfo","BuildInfo represents the build information read fromthe running binary","struct"],["SetMaxStack","SetMaxStack sets the maximum amount of memory thatcan be used by a single goroutine stack","func"],["GCStats","GCStats collect information about recent garbage collections","struct"],["ReadGCStats","ReadGCStats reads statistics about garbage collection into stats","func"],["FreeOSMemory","FreeOSMemory forces a garbage collection followed by anattempt to return as much memory to the operating systemas possible","func"],["SetTraceback","SetTraceback sets the amount of detail printed by the runtime inthe traceback it prints before exiting due to an unrecovered panicor an internal runtime error","func"],["Module","Module represents a module","struct"],["Stack","Stack returns a formatted stack trace of the goroutine that calls it","func"],["ReadBuildInfo","ReadBuildInfo returns the build information embeddedin the running binary","func"],["PrintStack","PrintStack prints to standard error the stack trace returned by runtime.Stack","func"],["WriteHeapDump","WriteHeapDump writes a description of the heap and the objects init to the given file descriptor","func"],["SetPanicOnFault","SetPanicOnFault controls the runtime's behavior when a program faultsat an unexpected (non-nil) address","func"]],"go/types":[["go/types","Package types declares the data types and implementsthe algorithms for type-checking of Go packages","package"],["Signature.Recv","Recv returns the receiver of signature s (if a method), or nil if afunction","func"],["Scope.Child","Child returns the i'th child scope for 0 <= i < NumChildren()","func"],["Scope.Insert","Insert attempts to insert an object obj into scope s","func"],["Var.Embedded","Embedded reports whether the variable is an embedded field","func"],["Chan.Elem","Elem returns the element type of channel c","func"],["TypeName.Type","Type returns the object's type","func"],["PkgName","A PkgName represents an imported Go package","struct"],["TypeAndValue.IsVoid","IsVoid reports whether the corresponding expressionis a function call without results","func"],["Eval","Eval returns the type and, if constant, the value for theexpression expr, evaluated at position pos of package pkg,which must have been derived from type-checking an AST withcomplete position information relative to the provided fileset","func"],["Nil.Type","Type returns the object's type","func"],["Builtin.Type","Type returns the object's type","func"],["Package.SetName","SetName sets the package name","func"],["Scope.Len","Len returns the number of scope elements","func"],["Error.Error","Error returns an error string formatted as follows:filename:line:column: message","func"],["Scope.Innermost","Innermost returns the innermost (child) scope containingpos","func"],["Var.Pkg","Pkg returns the package to which the object belongs","func"],["Struct","A Struct represents a struct type","struct"],["Comparable","Comparable reports whether values of type T are comparable","func"],["Selection.Index","Index describes the path from x to f in x.f","func"],["AssertableTo","AssertableTo reports whether a value of type V can be asserted to have type T","func"],["Var.Name","Name returns the object's (package-local, unqualified) name","func"],["Scope.Lookup","Lookup returns the object in scope s with the given name if such anobject exists; otherwise the result is nil","func"],["Info","Info holds result type information for a type-checked package","struct"],["Var.Type","Type returns the object's type","func"],["Scope","A Scope maintains a set of objects and links to its containing(parent) and contained (children) scopes","struct"],["Signature.Variadic","Variadic reports whether the signature s is variadic","func"],["ConvertibleTo","ConvertibleTo reports whether a value of type V is convertible to a value of type T","func"],["WriteSignature","WriteSignature writes the representation of the signature sig to buf,without a leading \"func\" keyword","func"],["TypeName","A TypeName represents a name for a (defined or alias) type","struct"],["NewVar","NewVar returns a new variable","func"],["Nil.Name","Name returns the object's (package-local, unqualified) name","func"],["Nil.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["Func.Type","Type returns the object's type","func"],["Signature.Results","Results returns the results of signature s, or nil","func"],["PkgName.Type","Type returns the object's type","func"],["Func.Name","Name returns the object's (package-local, unqualified) name","func"],["ImporterFrom","An ImporterFrom resolves import paths to packages; itsupports vendoring per https://golang.org/s/go15vendor","interface"],["Array","An Array represents an array type","struct"],["Basic","A Basic represents a basic type","struct"],["NewMethodSet","NewMethodSet returns the method set for the given type T","func"],["Scope.NumChildren","NumChildren returns the number of scopes nested in s","func"],["Interface.NumMethods","NumMethods returns the total number of methods of interface t","func"],["IsInterface","IsInterface reports whether typ is an interface type","func"],["TypeAndValue.IsValue","IsValue reports whether the corresponding expression is a value","func"],["NewConst","NewConst returns a new constant with value val","func"],["Importer","An Importer resolves import paths to Packages","interface"],["Const.Name","Name returns the object's (package-local, unqualified) name","func"],["ObjectString","ObjectString returns the string form of obj","func"],["TypeName.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["Nil.Pos","Pos returns the declaration position of the object's identifier","func"],["Func","A Func represents a declared function, concrete method, or abstract(interface) method","struct"],["Var.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["Interface.ExplicitMethod","ExplicitMethod returns the i'th explicitly declared method of interface t for 0 <= i < t.NumExplicitMethods()","func"],["Selection.Kind","Kind returns the selection kind","func"],["Const.Val","Val returns the constant's value","func"],["Label.Name","Name returns the object's (package-local, unqualified) name","func"],["Var","A Variable represents a declared variable (including function parameters and results, and struct fields)","struct"],["Builtin.Name","Name returns the object's (package-local, unqualified) name","func"],["Func.Pos","Pos returns the declaration position of the object's identifier","func"],["PkgName.Pkg","Pkg returns the package to which the object belongs","func"],["TypeName.Pos","Pos returns the declaration position of the object's identifier","func"],["Var.Anonymous","Anonymous reports whether the variable is an embedded field","func"],["Scope.Pos","Pos and End describe the scope's source code extent [pos, end)","func"],["TypeName.IsAlias","IsAlias reports whether obj is an alias name for a type","func"],["TypeName.Parent","Parent returns the scope in which the object is declared","func"],["Basic.Info","Info returns information about properties of basic type b","func"],["Var.Parent","Parent returns the scope in which the object is declared","func"],["Signature.Params","Params returns the parameters of signature s, or nil","func"],["Map.Key","Key returns the key type of map m","func"],["Default","Default returns the default \"typed\" type for an \"untyped\" type;it returns the incoming type for all other types","func"],["Named.AddMethod","AddMethod adds method m unless it is already in the method list","func"],["Const.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["Label.Parent","Parent returns the scope in which the object is declared","func"],["Named.Method","Method returns the i'th method of named type t for 0 <= i < t.NumMethods()","func"],["Implements","Implements reports whether type V implements interface T","func"],["ExprString","ExprString returns the (possibly shortened) string representation for x","func"],["Identical","Identical reports whether x and y are identical types","func"],["Builtin.Pos","Pos returns the declaration position of the object's identifier","func"],["NewArray","NewArray returns a new array type for the given element type and length","func"],["NewMap","NewMap returns a new map for the given key and element types","func"],["Package.Name","Name returns the package name","func"],["NewInterfaceType","NewInterfaceType returns a new (incomplete) interface for the given methods and embedded types","func"],["MethodSet.At","At returns the i'th method in s for 0 <= i < s.Len()","func"],["NewField","NewField returns a new variable representing a struct field","func"],["Package.Imports","Imports returns the list of packages directly imported bypkg; the list is in source order","func"],["Label.Pkg","Pkg returns the package to which the object belongs","func"],["TypeName.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["Tuple.Len","Len returns the number variables of tuple t","func"],["NewFunc","NewFunc returns a new function with the given signature, representingthe function's type","func"],["Array.Len","Len returns the length of array a","func"],["Basic.Kind","Kind returns the kind of basic type b","func"],["Named.Obj","Obj returns the type name for the named type t","func"],["Struct.NumFields","NumFields returns the number of fields in the struct (including blank and embedded fields)","func"],["NewParam","NewParam returns a new variable representing a function parameter","func"],["TypeAndValue.HasOk","HasOk reports whether the corresponding expression may beused on the rhs of a comma-ok assignment","func"],["Chan.Dir","Dir returns the direction of channel c","func"],["Object","An Object describes a named language entity such as a package,constant, type, variable, function (incl","interface"],["Scope.Parent","Parent returns the scope's containing (parent) scope","func"],["PkgName.Name","Name returns the object's (package-local, unqualified) name","func"],["PkgName.Pos","Pos returns the declaration position of the object's identifier","func"],["Builtin.Pkg","Pkg returns the package to which the object belongs","func"],["Nil.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["RelativeTo","RelativeTo returns a Qualifier that fully qualifies members ofall packages other than pkg","func"],["NewStruct","NewStruct returns a new struct with the given fields and corresponding field tags","func"],["PkgName.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["Qualifier","A Qualifier controls how named package-level objects are printed incalls to TypeString, ObjectString, and SelectionString","other"],["StdSizes","StdSizes is a convenience type for creating commonly used Sizes","struct"],["Package","A Package describes a Go package","struct"],["Pointer","A Pointer represents a pointer type","struct"],["BasicInfo","BasicInfo is a set of flags describing properties of a basic type","other"],["Func.FullName","FullName returns the package- or receiver-type-qualified name offunction or method obj","func"],["Package.Path","Path returns the package path","func"],["Scope.WriteTo","WriteTo writes a string representation of the scope to w,with the scope elements sorted by name","func"],["Named.NumMethods","NumMethods returns the number of explicit methods whose receiver is named type t","func"],["SelectionKind","SelectionKind describes the kind of a selector expression x.f(excluding qualified identifiers)","other"],["NewPackage","NewPackage returns a new Package for the given package path and name","func"],["Selection","A Selection describes a selector expression x.f","struct"],["Slice","A Slice represents a slice type","struct"],["LookupFieldOrMethod","LookupFieldOrMethod looks up a field or method with given package and namein T and returns the corresponding *Var or *Func, an index sequence, and abool indicating if there were any pointer indirections on the path to thefield or method","func"],["Interface.NumEmbeddeds","NumEmbeddeds returns the number of embedded types in interface t","func"],["TypeAndValue.IsBuiltin","IsBuiltin reports whether the corresponding expression denotesa (possibly parenthesized) built-in function","func"],["TypeAndValue.Addressable","Addressable reports whether the corresponding expressionis addressable (https://golang.org/ref/spec#Address_operators)","func"],["Const.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["Interface.Empty","Empty reports whether t is the empty interface","func"],["TypeAndValue","TypeAndValue reports the type and value (for constants)of the corresponding expression","struct"],["NewChan","NewChan returns a new channel type for the given direction and element type","func"],["Chan","A Chan represents a channel type","struct"],["Id","Id returns name if it is exported, otherwise itreturns the name qualified with the package path","func"],["NewNamed","NewNamed returns a new named type for the given type name, underlying type, and associated methods","func"],["Label.Pos","Pos returns the declaration position of the object's identifier","func"],["Sizes","Sizes defines the sizing functions for package unsafe","interface"],["Func.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["NewPkgName","NewPkgName returns a new PkgName object representing an imported package","func"],["Info.ObjectOf","ObjectOf returns the object denoted by the specified id,or nil if not found","func"],["Error","An Error describes a type-checking error; it implements the error interface","struct"],["Config","A Config specifies the configuration for type checking","struct"],["Named.SetUnderlying","SetUnderlying sets the underlying type and marks t as complete","func"],["Nil","Nil represents the predeclared value nil","struct"],["NewTypeName","NewTypeName returns a new type name denoting the given typ","func"],["TypeAndValue.IsNil","IsNil reports whether the corresponding expression denotes thepredeclared value nil","func"],["WriteType","WriteType writes the string representation of typ to buf","func"],["Package.MarkComplete","MarkComplete marks a package as complete","func"],["Pointer.Elem","Elem returns the element type for the given pointer p","func"],["Signature","A Signature represents a (non-builtin) function or method type","struct"],["Label.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["Nil.Pkg","Pkg returns the package to which the object belongs","func"],["TypeAndValue.Assignable","Assignable reports whether the corresponding expressionis assignable to (provided a value of the right type)","func"],["Config.Check","Check type-checks a package and returns the resulting package object andthe first error if any","func"],["MethodSet.Lookup","Lookup returns the method with matching package and name, or nil if not found","func"],["NewSignature","NewSignature returns a new function type for the given receiver, parameters,and results, either of which may be nil","func"],["Nil.Parent","Parent returns the scope in which the object is declared","func"],["Builtin","A Builtin represents a built-in function","struct"],["Selection.Obj","Obj returns the object denoted by x.f; a *Var fora field selection, and a *Func in all other cases","func"],["Func.Parent","Parent returns the scope in which the object is declared","func"],["Interface","An Interface represents an interface type","struct"],["Const.Parent","Parent returns the scope in which the object is declared","func"],["TypeAndValue.IsType","IsType reports whether the corresponding expression specifies a type","func"],["Map.Elem","Elem returns the element type of map m","func"],["MethodSet","A MethodSet is an ordered set of concrete or abstract (interface) methods;a method is a MethodVal selection, and they are ordered by ascending m.Obj().Id()","struct"],["Func.Pkg","Pkg returns the package to which the object belongs","func"],["Builtin.Parent","Parent returns the scope in which the object is declared","func"],["Struct.Field","Field returns the i'th field for 0 <= i < NumFields()","func"],["Interface.EmbeddedType","EmbeddedType returns the i'th embedded type of interface t for 0 <= i < t.NumEmbeddeds()","func"],["TypeString","TypeString returns the string representation of typ","func"],["CheckExpr","CheckExpr type checks the expression expr as if it had appeared atposition pos of package pkg","func"],["Var.Pos","Pos returns the declaration position of the object's identifier","func"],["Interface.Method","Method returns the i'th method of interface t for 0 <= i < t.NumMethods()","func"],["Interface.NumExplicitMethods","NumExplicitMethods returns the number of explicitly declared methods of interface t","func"],["BasicKind","BasicKind describes the kind of basic type","other"],["NewChecker","NewChecker returns a new Checker instance for a given package","func"],["TypeName.Name","Name returns the object's (package-local, unqualified) name","func"],["Const.Type","Type returns the object's type","func"],["TypeName.Pkg","Pkg returns the package to which the object belongs","func"],["ImportMode","ImportMode is reserved for future use","other"],["Map","A Map represents a map type","struct"],["Scope.Names","Names returns the scope's element names in sorted order","func"],["Const","A Const represents a declared constant","struct"],["Builtin.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["MissingMethod","MissingMethod returns (nil, false) if V implements T, otherwise itreturns a missing method required by T and whether it is missing orjust has the wrong type","func"],["NewSlice","NewSlice returns a new slice type for the given element type","func"],["Package.SetImports","SetImports sets the list of explicitly imported packages to list","func"],["SizesFor","SizesFor returns the Sizes used by a compiler for an architecture","func"],["NewInterface","NewInterface returns a new (incomplete) interface for the given methods and embedded types","func"],["Slice.Elem","Elem returns the element type of slice s","func"],["Var.IsField","IsField reports whether the variable is a struct field","func"],["PkgName.Parent","Parent returns the scope in which the object is declared","func"],["Tuple.At","At returns the i'th variable of tuple t","func"],["ChanDir","A ChanDir value indicates a channel direction","other"],["Info.TypeOf","TypeOf returns the type of expression e, or nil if not found","func"],["SelectionString","SelectionString returns the string form of s","func"],["AssignableTo","AssignableTo reports whether a value of type V is assignable to a variable of type T","func"],["Const.Pos","Pos returns the declaration position of the object's identifier","func"],["Label.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["Type","A Type represents a type of Go","interface"],["Array.Elem","Elem returns element type of array a","func"],["Scope.String","String returns a string representation of the scope, for debugging","func"],["Package.Scope","Scope returns the (complete or incomplete) package scopeholding the objects declared at package level (TypeNames,Consts, Vars, and Funcs)","func"],["Scope.LookupParent","LookupParent follows the parent chain of scopes starting with s untilit finds a scope where Lookup(name) returns a non-nil object, and thenreturns that scope and object","func"],["Func.Scope","Scope returns the scope of the function's body block","func"],["Func.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["Var.Exported","Exported reports whether the object is exported (starts with a capital letter)","func"],["MethodSet.Len","Len returns the number of methods in s","func"],["Interface.Complete","Complete computes the interface's method set","func"],["Const.Pkg","Pkg returns the package to which the object belongs","func"],["Initializer","An Initializer describes a package-level variable, or a list of variables in caseof a multi-valued initialization expression, and the corresponding initializationexpression","struct"],["Checker","A Checker maintains the state of the type checker","struct"],["Named","A Named represents a named type","struct"],["PkgName.Imported","Imported returns the package that was imported","func"],["Tuple","A Tuple represents an ordered list of variables; a nil *Tuple is a valid (empty) tuple","struct"],["PkgName.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["IdenticalIgnoreTags","IdenticalIgnoreTags reports whether x and y are identical types if tags are ignored","func"],["NewPointer","NewPointer returns a new pointer type for the given element (base) type","func"],["Interface.Embedded","Embedded returns the i'th embedded defined (*Named) type of interface t for 0 <= i < t.NumEmbeddeds()","func"],["Selection.Indirect","Indirect reports whether any pointer indirection was required to get fromx to f in x.f","func"],["NewScope","NewScope returns a new, empty scope contained in the given parentscope, if any","func"],["Struct.Tag","Tag returns the i'th field tag for 0 <= i < NumFields()","func"],["Label.Type","Type returns the object's type","func"],["NewLabel","NewLabel returns a new label","func"],["Package.Complete","A package is complete if its scope contains (at least) allexported objects; otherwise it is incomplete","func"],["Checker.Files","Files checks the provided files as part of the checker's package","func"],["Selection.Recv","Recv returns the type of x in x.f","func"],["NewTuple","NewTuple returns a new tuple for the given variables","func"],["DefPredeclaredTestFuncs","DefPredeclaredTestFuncs defines the assert and trace built-ins","func"],["Label","A Label represents a declared label","struct"],["Scope.Contains","Contains reports whether pos is within the scope's extent","func"],["Basic.Name","Name returns the name of basic type b","func"],["Selection.Type","Type returns the type of x.f, which may be different from the type of f","func"],["Builtin.Id","Id is a wrapper for Id(obj.Pkg(), obj.Name())","func"],["WriteExpr","WriteExpr writes the (possibly shortened) string representation for x to buf","func"]],"runtime/race":[["runtime/race","Package race implements data race detection logic","package"]],"encoding/csv":[["encoding/csv","Package csv reads and writes comma-separated values (CSV) files","package"],["Reader.Read","Read reads one record (a slice of fields) from r","func"],["ParseError","A ParseError is returned for parsing errors","struct"],["Reader.ReadAll","ReadAll reads all the remaining records from r","func"],["NewWriter","NewWriter returns a new Writer that writes to w","func"],["Writer.WriteAll","WriteAll writes multiple CSV records to w using Write and then calls Flush,returning any error from the Flush","func"],["Reader","A Reader reads records from a CSV-encoded file","struct"],["Writer","A Writer writes records using CSV encoding","struct"],["Writer.Error","Error reports any error that has occurred during a previous Write or Flush","func"],["Writer.Flush","Flush writes any buffered data to the underlying io.Writer","func"],["Writer.Write","Write writes a single CSV record to w along with any necessary quoting","func"],["NewReader","NewReader returns a new Reader that reads from r","func"]],"net/http/fcgi":[["net/http/fcgi","Package fcgi implements the FastCGI protocol","package"],["ProcessEnv","ProcessEnv returns FastCGI environment variables associated with the request rfor which no effort was made to be included in the request itself - the datais hidden in the request's context","func"],["Serve","Serve accepts incoming FastCGI connections on the listener l, creating a newgoroutine for each","func"]],"crypto/rsa":[["crypto/rsa","Package rsa implements RSA encryption as specified in PKCS#1","package"],["PrivateKey.Validate","Validate performs basic sanity checks on the key","func"],["PSSOptions","PSSOptions contains options for creating and verifying PSS signatures","struct"],["SignPKCS1v15","SignPKCS1v15 calculates the signature of hashed usingRSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5","func"],["SignPSS","SignPSS calculates the signature of hashed using RSASSA-PSS [1]","func"],["PublicKey.Size","Size returns the modulus size in bytes","func"],["VerifyPSS","VerifyPSS verifies a PSS signature","func"],["VerifyPKCS1v15","VerifyPKCS1v15 verifies an RSA PKCS#1 v1.5 signature","func"],["EncryptOAEP","EncryptOAEP encrypts the given message with RSA-OAEP","func"],["GenerateKey","GenerateKey generates an RSA keypair of the given bit size using therandom source random (for example, crypto/rand.Reader)","func"],["PrivateKey.Sign","Sign signs digest with priv, reading randomness from rand","func"],["PrivateKey.Decrypt","Decrypt decrypts ciphertext with priv","func"],["EncryptPKCS1v15","EncryptPKCS1v15 encrypts the given message with RSA and the paddingscheme from PKCS#1 v1.5","func"],["DecryptOAEP","DecryptOAEP decrypts ciphertext using RSA-OAEP","func"],["PrivateKey.Public","Public returns the public key corresponding to priv","func"],["PSSOptions.HashFunc","HashFunc returns pssOpts.Hash so that PSSOptions implementscrypto.SignerOpts","func"],["DecryptPKCS1v15SessionKey","DecryptPKCS1v15SessionKey decrypts a session key using RSA and the padding scheme from PKCS#1 v1.5","func"],["OAEPOptions","OAEPOptions is an interface for passing options to OAEP decryption using thecrypto.Decrypter interface","struct"],["PrivateKey","A PrivateKey represents an RSA key","struct"],["PrivateKey.Precompute","Precompute performs some calculations that speed up private key operationsin the future","func"],["PrecomputedValues","","struct"],["GenerateMultiPrimeKey","GenerateMultiPrimeKey generates a multi-prime RSA keypair of the given bitsize and the given random source, as suggested in [1]","func"],["CRTValue","CRTValue contains the precomputed Chinese remainder theorem values","struct"],["DecryptPKCS1v15","DecryptPKCS1v15 decrypts a plaintext using RSA and the padding scheme from PKCS#1 v1.5","func"],["PublicKey","A PublicKey represents the public part of an RSA key","struct"],["PKCS1v15DecryptOptions","PKCS1v15DecrypterOpts is for passing options to PKCS#1 v1.5 decryption usingthe crypto.Decrypter interface","struct"]],"testing":[["testing","Package testing provides support for automated testing of Go packages","package"],["Short","Short reports whether the -test.short flag is set","func"],["T.Fatal","Fatal is equivalent to Log followed by FailNow","func"],["B.Helper","Helper marks the calling function as a test helper function","func"],["Cover","Cover records information about test coverage checking","struct"],["B.Errorf","Errorf is equivalent to Logf followed by Fail","func"],["B.Fail","Fail marks the function as having failed but continues execution","func"],["T.Name","Name returns the name of the running test or benchmark","func"],["B.Log","Log formats its arguments using default formatting, analogous to Println,and records the text in the error log","func"],["B.ReportAllocs","ReportAllocs enables malloc statistics for this benchmark","func"],["T.Error","Error is equivalent to Log followed by Fail","func"],["B.Error","Error is equivalent to Log followed by Fail","func"],["B.Logf","Logf formats its arguments according to the format, analogous to Printf, andrecords the text in the error log","func"],["CoverMode","CoverMode reports what the test coverage mode is set to","func"],["T.Failed","Failed reports whether the function has failed","func"],["InternalBenchmark","An internal type but exported because it is cross-package; part of the implementationof the \"go test\" command","struct"],["T.Log","Log formats its arguments using default formatting, analogous to Println,and records the text in the error log","func"],["TB","TB is the interface common to T and B","interface"],["B.ResetTimer","ResetTimer zeroes the elapsed benchmark time and memory allocation countersand deletes user-reported metrics","func"],["BenchmarkResult","The results of a benchmark run","struct"],["B.Fatalf","Fatalf is equivalent to Logf followed by FailNow","func"],["AllocsPerRun","AllocsPerRun returns the average number of allocations during calls to f","func"],["RunBenchmarks","An internal function but exported because it is cross-package; part of the implementationof the \"go test\" command","func"],["B.SetBytes","SetBytes records the number of bytes processed in a single operation","func"],["RunTests","An internal function but exported because it is cross-package; part of the implementationof the \"go test\" command","func"],["B.RunParallel","RunParallel runs a benchmark in parallel","func"],["B.Name","Name returns the name of the running test or benchmark","func"],["Init","Init registers testing flags","func"],["RunExamples","An internal function but exported because it is cross-package; part of the implementationof the \"go test\" command","func"],["B.Fatal","Fatal is equivalent to Log followed by FailNow","func"],["MainStart","MainStart is meant for use by tests generated by 'go test'","func"],["T.Logf","Logf formats its arguments according to the format, analogous to Printf, andrecords the text in the error log","func"],["B.ReportMetric","ReportMetric adds \"n unit\" to the reported benchmark results","func"],["T.SkipNow","SkipNow marks the test as having been skipped and stops its executionby calling runtime.Goexit","func"],["T.Helper","Helper marks the calling function as a test helper function","func"],["M","M is a type passed to a TestMain function to run the actual tests","struct"],["InternalExample","","struct"],["Benchmark","Benchmark benchmarks a single function","func"],["Verbose","Verbose reports whether the -test.v flag is set","func"],["T.Skip","Skip is equivalent to Log followed by SkipNow","func"],["BenchmarkResult.NsPerOp","NsPerOp returns the \"ns/op\" metric","func"],["B.Skipped","Skipped reports whether the test was skipped","func"],["T.Fatalf","Fatalf is equivalent to Logf followed by FailNow","func"],["B.Run","Run benchmarks f as a subbenchmark with the given name","func"],["PB.Next","Next reports whether there are more iterations to execute","func"],["B.StartTimer","StartTimer starts timing a test","func"],["B","B is a type passed to Benchmark functions to manage benchmarktiming and to specify the number of iterations to run","struct"],["B.Skip","Skip is equivalent to Log followed by SkipNow","func"],["B.SkipNow","SkipNow marks the test as having been skipped and stops its executionby calling runtime.Goexit","func"],["B.Skipf","Skipf is equivalent to Logf followed by SkipNow","func"],["BenchmarkResult.AllocedBytesPerOp","AllocedBytesPerOp returns the \"B/op\" metric,which is calculated as r.MemBytes / r.N","func"],["T.Skipped","Skipped reports whether the test was skipped","func"],["Main","Main is an internal function, part of the implementation of the \"go test\" command","func"],["B.Failed","Failed reports whether the function has failed","func"],["BenchmarkResult.MemString","MemString returns r.AllocedBytesPerOp and r.AllocsPerOp in the same format as 'go test'","func"],["T.Fail","Fail marks the function as having failed but continues execution","func"],["B.StopTimer","StopTimer stops timing a test","func"],["BenchmarkResult.AllocsPerOp","AllocsPerOp returns the \"allocs/op\" metric,which is calculated as r.MemAllocs / r.N","func"],["CoverBlock","CoverBlock records the coverage data for a single basic block","struct"],["T","T is a type passed to Test functions to manage test state and support formatted test logs","struct"],["B.FailNow","FailNow marks the function as having failed and stops its executionby calling runtime.Goexit (which then runs all deferred calls in thecurrent goroutine)","func"],["T.FailNow","FailNow marks the function as having failed and stops its executionby calling runtime.Goexit (which then runs all deferred calls in thecurrent goroutine)","func"],["B.SetParallelism","SetParallelism sets the number of goroutines used by RunParallel to p*GOMAXPROCS","func"],["RegisterCover","RegisterCover records the coverage data accumulators for the tests","func"],["T.Parallel","Parallel signals that this test is to be run in parallel with (and only with)other parallel tests","func"],["PB","A PB is used by RunParallel for running parallel benchmarks","struct"],["T.Errorf","Errorf is equivalent to Logf followed by Fail","func"],["BenchmarkResult.String","String returns a summary of the benchmark results","func"],["M.Run","Run runs the tests","func"],["InternalTest","An internal type but exported because it is cross-package; part of the implementationof the \"go test\" command","struct"],["T.Run","Run runs f as a subtest of t called name","func"],["Coverage","Coverage reports the current code coverage as a fraction in the range [0, 1]","func"],["T.Skipf","Skipf is equivalent to Logf followed by SkipNow","func"]],"archive/tar":[["archive/tar","Package tar implements access to tar archives","package"],["Header.FileInfo","FileInfo returns an os.FileInfo for the Header","func"],["Writer.Flush","Flush finishes writing the current file's block padding","func"],["NewWriter","NewWriter creates a new Writer writing to w","func"],["Header","A Header represents a single header in a tar archive","struct"],["Reader.Next","Next advances to the next entry in the tar archive","func"],["Reader.Read","Read reads from the current file in the tar archive","func"],["Format","Format represents the tar archive format","other"],["Writer.Close","Close closes the tar archive by flushing the padding, and writing the footer","func"],["Writer.WriteHeader","WriteHeader writes hdr and prepares to accept the file's contents","func"],["FileInfoHeader","FileInfoHeader creates a partially-populated Header from fi","func"],["Writer","Writer provides sequential writing of a tar archive","struct"],["Reader","Reader provides sequential access to the contents of a tar archive","struct"],["NewReader","NewReader creates a new Reader reading from r","func"],["Writer.Write","Write writes to the current file in the tar archive","func"]],"container/list":[["container/list","Package list implements a doubly linked list","package"],["List.MoveToBack","MoveToBack moves element e to the back of list l","func"],["List.Back","Back returns the last element of list l or nil if the list is empty","func"],["List.PushFrontList","PushFrontList inserts a copy of an other list at the front of list l","func"],["Element","Element is an element of a linked list","struct"],["List.InsertAfter","InsertAfter inserts a new element e with value v immediately after mark and returns e","func"],["List.Remove","Remove removes e from l if e is an element of list l","func"],["New","New returns an initialized list","func"],["Element.Prev","Prev returns the previous list element or nil","func"],["List.MoveToFront","MoveToFront moves element e to the front of list l","func"],["Element.Next","Next returns the next list element or nil","func"],["List","List represents a doubly linked list","struct"],["List.Init","Init initializes or clears list l","func"],["List.InsertBefore","InsertBefore inserts a new element e with value v immediately before mark and returns e","func"],["List.MoveBefore","MoveBefore moves element e to its new position before mark","func"],["List.Len","Len returns the number of elements of list l","func"],["List.MoveAfter","MoveAfter moves element e to its new position after mark","func"],["List.PushBack","PushBack inserts a new element e with value v at the back of list l and returns e","func"],["List.Front","Front returns the first element of list l or nil if the list is empty","func"],["List.PushFront","PushFront inserts a new element e with value v at the front of list l and returns e","func"],["List.PushBackList","PushBackList inserts a copy of an other list at the back of list l","func"]],"unsafe":[["unsafe","Package unsafe contains operations that step around the type safety of Go programs","package"],["Pointer","Pointer represents a pointer to an arbitrary type","other"],["Sizeof","Sizeof takes an expression x of any type and returns the size in bytesof a hypothetical variable v as if v was declared via var v = x","func"],["Alignof","Alignof takes an expression x of any type and returns the required alignmentof a hypothetical variable v as if v was declared via var v = x","func"],["ArbitraryType","ArbitraryType is here for the purposes of documentation only and is not actuallypart of the unsafe package","other"],["Offsetof","Offsetof returns the offset within the struct of the field represented by x,which must be of the form structValue.field","func"]],"net/smtp":[["net/smtp","Package smtp implements the Simple Mail Transfer Protocol as defined in RFC 5321","package"],["ServerInfo","ServerInfo records information about an SMTP server","struct"],["Client.TLSConnectionState","TLSConnectionState returns the client's TLS connection state","func"],["Client.Reset","Reset sends the RSET command to the server, aborting the current mailtransaction","func"],["Client.Auth","Auth authenticates a client using the provided authentication mechanism","func"],["Client","A Client represents a client connection to an SMTP server","struct"],["Client.Verify","Verify checks the validity of an email address on the server","func"],["Client.Quit","Quit sends the QUIT command and closes the connection to the server","func"],["Client.Hello","Hello sends a HELO or EHLO to the server as the given host name","func"],["Client.Noop","Noop sends the NOOP command to the server","func"],["Client.Rcpt","Rcpt issues a RCPT command to the server using the provided email address","func"],["Client.Extension","Extension reports whether an extension is support by the server","func"],["Client.Mail","Mail issues a MAIL command to the server using the provided email address","func"],["Auth","Auth is implemented by an SMTP authentication mechanism","interface"],["Client.StartTLS","StartTLS sends the STARTTLS command and encrypts all further communication","func"],["Client.Close","Close closes the connection","func"],["NewClient","NewClient returns a new Client using an existing connection and host as aserver name to be used when authenticating","func"],["Dial","Dial returns a new Client connected to an SMTP server at addr","func"],["SendMail","SendMail connects to the server at addr, switches to TLS ifpossible, authenticates with the optional mechanism a if possible,and then sends an email from address from, to addresses to, withmessage msg","func"],["Client.Data","Data issues a DATA command to the server and returns a writer thatcan be used to write the mail headers and body","func"],["PlainAuth","PlainAuth returns an Auth that implements the PLAIN authenticationmechanism as defined in RFC 4616","func"],["CRAMMD5Auth","CRAMMD5Auth returns an Auth that implements the CRAM-MD5 authenticationmechanism as defined in RFC 2195","func"]],"image/png":[["image/png","Package png implements a PNG image decoder and encoder","package"],["EncoderBufferPool","EncoderBufferPool is an interface for getting and returning temporaryinstances of the EncoderBuffer struct","interface"],["Decode","Decode reads a PNG image from r and returns it as an image.Image","func"],["DecodeConfig","DecodeConfig returns the color model and dimensions of a PNG image withoutdecoding the entire image","func"],["EncoderBuffer","EncoderBuffer holds the buffers used for encoding PNG images","other"],["Encode","Encode writes the Image m to w in PNG format","func"],["Encoder.Encode","Encode writes the Image m to w in PNG format","func"],["UnsupportedError","An UnsupportedError reports that the input uses a valid but unimplemented PNG feature","other"],["Encoder","Encoder configures encoding PNG images","struct"],["CompressionLevel","","other"],["FormatError","A FormatError reports that the input is not a valid PNG","other"]],"bufio":[["bufio","Package bufio implements buffered I/O","package"],["Writer","Writer implements buffering for an io.Writer object","struct"],["ScanWords","ScanWords is a split function for a Scanner that returns eachspace-separated word of text, with surrounding spaces deleted","func"],["NewWriterSize","NewWriterSize returns a new Writer whose buffer has at least the specifiedsize","func"],["Reader.ReadBytes","ReadBytes reads until the first occurrence of delim in the input,returning a slice containing the data up to and including the delimiter","func"],["Reader.UnreadByte","UnreadByte unreads the last byte","func"],["Reader.WriteTo","WriteTo implements io.WriterTo","func"],["Reader.ReadSlice","ReadSlice reads until the first occurrence of delim in the input,returning a slice pointing at the bytes in the buffer","func"],["SplitFunc","SplitFunc is the signature of the split function used to tokenize theinput","other"],["ReadWriter","ReadWriter stores pointers to a Reader and a Writer","struct"],["Writer.Reset","Reset discards any unflushed buffered data, clears any error, andresets b to write its output to w","func"],["Writer.Available","Available returns how many bytes are unused in the buffer","func"],["Scanner.Text","Text returns the most recent token generated by a call to Scanas a newly allocated string holding its bytes","func"],["Scanner.Err","Err returns the first non-EOF error that was encountered by the Scanner","func"],["NewWriter","NewWriter returns a new Writer whose buffer has the default size","func"],["Reader.UnreadRune","UnreadRune unreads the last rune","func"],["Writer.WriteByte","WriteByte writes a single byte","func"],["NewReader","NewReader returns a new Reader whose buffer has the default size","func"],["Reader.Buffered","Buffered returns the number of bytes that can be read from the current buffer","func"],["ScanRunes","ScanRunes is a split function for a Scanner that returns eachUTF-8-encoded rune as a token","func"],["Reader.ReadRune","ReadRune reads a single UTF-8 encoded Unicode character and returns therune and its size in bytes","func"],["NewReadWriter","NewReadWriter allocates a new ReadWriter that dispatches to r and w","func"],["NewScanner","NewScanner returns a new Scanner to read from r","func"],["Reader.Read","Read reads data into p","func"],["Reader.ReadByte","ReadByte reads and returns a single byte","func"],["Writer.Size","Size returns the size of the underlying buffer in bytes","func"],["Scanner","Scanner provides a convenient interface for reading data such asa file of newline-delimited lines of text","struct"],["Writer.Flush","Flush writes any buffered data to the underlying io.Writer","func"],["ScanLines","ScanLines is a split function for a Scanner that returns each line oftext, stripped of any trailing end-of-line marker","func"],["Reader.Peek","Peek returns the next n bytes without advancing the reader","func"],["Scanner.Split","Split sets the split function for the Scanner","func"],["Writer.WriteRune","WriteRune writes a single Unicode code point, returningthe number of bytes written and any error","func"],["Reader.Reset","Reset discards any buffered data, resets all state, and switchesthe buffered reader to read from r","func"],["Reader.ReadString","ReadString reads until the first occurrence of delim in the input,returning a string containing the data up to and including the delimiter","func"],["Reader","Reader implements buffering for an io.Reader object","struct"],["ScanBytes","ScanBytes is a split function for a Scanner that returns each byte as a token","func"],["Scanner.Bytes","Bytes returns the most recent token generated by a call to Scan","func"],["Reader.Size","Size returns the size of the underlying buffer in bytes","func"],["Reader.ReadLine","ReadLine is a low-level line-reading primitive","func"],["Writer.Buffered","Buffered returns the number of bytes that have been written into the current buffer","func"],["Writer.ReadFrom","ReadFrom implements io.ReaderFrom","func"],["Reader.Discard","Discard skips the next n bytes, returning the number of bytes discarded","func"],["Writer.Write","Write writes the contents of p into the buffer","func"],["Scanner.Scan","Scan advances the Scanner to the next token, which will then beavailable through the Bytes or Text method","func"],["NewReaderSize","NewReaderSize returns a new Reader whose buffer has at least the specifiedsize","func"],["Scanner.Buffer","Buffer sets the initial buffer to use when scanning and the maximumsize of buffer that may be allocated during scanning","func"],["Writer.WriteString","WriteString writes a string","func"]],"reflect":[["reflect","Package reflect implements run-time reflection, allowing a program tomanipulate objects with arbitrary types","package"],["Value.MethodByName","MethodByName returns a function value corresponding to the methodof v with the given name","func"],["Value.Int","Int returns v's underlying value, as an int64","func"],["Value.Index","Index returns v's i'th element","func"],["Value.SetPointer","SetPointer sets the unsafe.Pointer value v to x","func"],["Value.Bytes","Bytes returns v's underlying value","func"],["MapOf","MapOf returns the map type with the given key and element types","func"],["Value.OverflowInt","OverflowInt reports whether the int64 x cannot be represented by v's type","func"],["Value.UnsafeAddr","UnsafeAddr returns a pointer to v's data","func"],["Value.SetBool","SetBool sets v's underlying value","func"],["SliceHeader","SliceHeader is the runtime representation of a slice","struct"],["Swapper","Swapper returns a function that swaps the elements in the providedslice","func"],["Value.Call","Call calls the function v with the input arguments in","func"],["Value.String","String returns the string v's underlying value, as a string","func"],["Value.IsZero","IsZero reports whether v is the zero value for its type","func"],["MakeMapWithSize","MakeMapWithSize creates a new map with the specified typeand initial space for approximately n elements","func"],["StructField","A StructField describes a single field in a struct","struct"],["Value.SetInt","SetInt sets v's underlying value to x","func"],["ChanOf","ChanOf returns the channel type with the given direction and element type","func"],["MakeChan","MakeChan creates a new channel with the specified type and buffer size","func"],["Value.IsNil","IsNil reports whether its argument v is nil","func"],["DeepEqual","DeepEqual reports whether x and y are “deeply equal,” defined as follows","func"],["Value.SetCap","SetCap sets v's capacity to n","func"],["Value.Close","Close closes the channel v","func"],["FuncOf","FuncOf returns the function type with the given argument and result types","func"],["Value.SetLen","SetLen sets v's length to n","func"],["Value.NumField","NumField returns the number of fields in the struct v","func"],["StringHeader","StringHeader is the runtime representation of a string","struct"],["MakeMap","MakeMap creates a new map with the specified type","func"],["Value.Convert","Convert returns the value v converted to type t","func"],["MapIter.Key","Key returns the key of the iterator's current map entry","func"],["StructTag.Lookup","Lookup returns the value associated with key in the tag string","func"],["Type","Type is the representation of a Go type","interface"],["Method","Method represents a single method","struct"],["Value","Value is the reflection interface to a Go value","struct"],["Value.Pointer","Pointer returns v's value as a uintptr","func"],["Value.CanSet","CanSet reports whether the value of v can be changed","func"],["Value.SetBytes","SetBytes sets v's underlying value","func"],["Value.TrySend","TrySend attempts to send x on the channel v but will not block","func"],["Value.Field","Field returns the i'th field of the struct v","func"],["Value.Addr","Addr returns a pointer value representing the address of v","func"],["Value.Float","Float returns v's underlying value, as a float64","func"],["Value.OverflowFloat","OverflowFloat reports whether the float64 x cannot be represented by v's type","func"],["ArrayOf","ArrayOf returns the array type with the given count and element type","func"],["Value.Kind","Kind returns v's Kind","func"],["Value.Send","Send sends x on the channel v","func"],["Value.MapRange","MapRange returns a range iterator for a map","func"],["StructTag.Get","Get returns the value associated with key in the tag string","func"],["Value.InterfaceData","InterfaceData returns the interface v's value as a uintptr pair","func"],["Value.Method","Method returns a function value corresponding to v's i'th method","func"],["Value.CanAddr","CanAddr reports whether the value's address can be obtained with Addr","func"],["New","New returns a Value representing a pointer to a new zero valuefor the specified type","func"],["Value.SetFloat","SetFloat sets v's underlying value to x","func"],["Value.CanInterface","CanInterface reports whether Interface can be used without panicking","func"],["Value.OverflowUint","OverflowUint reports whether the uint64 x cannot be represented by v's type","func"],["Value.Interface","Interface returns v's current value as an interface{}","func"],["Value.Len","Len returns v's length","func"],["Value.Cap","Cap returns v's capacity","func"],["Value.Uint","Uint returns v's underlying value, as a uint64","func"],["SliceOf","SliceOf returns the slice type with element type t","func"],["Value.TryRecv","TryRecv attempts to receive a value from the channel v but will not block","func"],["Zero","Zero returns a Value representing the zero value for the specified type","func"],["Value.Set","Set assigns x to the value v","func"],["Value.FieldByIndex","FieldByIndex returns the nested field corresponding to index","func"],["ChanDir","ChanDir represents a channel type's direction","other"],["Value.Complex","Complex returns v's underlying value, as a complex128","func"],["MapIter","A MapIter is an iterator for ranging over a map","struct"],["Value.Recv","Recv receives and returns a value from the channel v","func"],["MapIter.Next","Next advances the map iterator and reports whether there is anotherentry","func"],["Value.FieldByNameFunc","FieldByNameFunc returns the struct field with a namethat satisfies the match function","func"],["ValueError","A ValueError occurs when a Value method is invoked ona Value that does not support it","struct"],["Value.MapIndex","MapIndex returns the value associated with key in the map v","func"],["MakeFunc","MakeFunc returns a new function of the given Typethat wraps the function fn","func"],["Value.Slice","Slice returns v[i:j]","func"],["Value.SetMapIndex","SetMapIndex sets the element associated with key in the map v to elem","func"],["TypeOf","TypeOf returns the reflection Type that represents the dynamic type of i","func"],["Value.SetString","SetString sets v's underlying value to x","func"],["Value.OverflowComplex","OverflowComplex reports whether the complex128 x cannot be represented by v's type","func"],["MapIter.Value","Value returns the value of the iterator's current map entry","func"],["Value.Slice3","Slice3 is the 3-index form of the slice operation: it returns v[i:j:k]","func"],["Value.NumMethod","NumMethod returns the number of exported methods in the value's method set","func"],["SelectCase","A SelectCase describes a single case in a select operation","struct"],["Append","Append appends the values x to a slice s and returns the resulting slice","func"],["Value.Bool","Bool returns v's underlying value","func"],["Value.IsValid","IsValid reports whether v represents a value","func"],["Select","Select executes a select operation described by the list of cases","func"],["Kind.String","String returns the name of k","func"],["Value.SetUint","SetUint sets v's underlying value to x","func"],["Kind","A Kind represents the specific kind of type that a Type represents","other"],["MakeSlice","MakeSlice creates a new zero-initialized slice valuefor the specified slice type, length, and capacity","func"],["PtrTo","PtrTo returns the pointer type with element t","func"],["Value.SetComplex","SetComplex sets v's underlying value to x","func"],["NewAt","NewAt returns a Value representing a pointer to a value of thespecified type, using p as that pointer","func"],["Copy","Copy copies the contents of src into dst until eitherdst has been filled or src has been exhausted","func"],["Value.CallSlice","CallSlice calls the variadic function v with the input arguments in,assigning the slice in[len(in)-1] to v's final variadic argument","func"],["SelectDir","A SelectDir describes the communication direction of a select case","other"],["AppendSlice","AppendSlice appends a slice t to a slice s and returns the resulting slice","func"],["StructTag","A StructTag is the tag string in a struct field","other"],["ValueOf","ValueOf returns a new Value initialized to the concrete valuestored in the interface i","func"],["Value.FieldByName","FieldByName returns the struct field with the given name","func"],["Value.MapKeys","MapKeys returns a slice containing all the keys present in the map,in unspecified order","func"],["Value.Type","Type returns v's type","func"],["Value.Elem","Elem returns the value that the interface v containsor that the pointer v points to","func"],["Indirect","Indirect returns the value that v points to","func"],["StructOf","StructOf returns the struct type containing fields","func"]],"runtime":[["runtime","Package runtime contains operations that interact with Go's runtime system,such as functions to control goroutines","package"],["GOMAXPROCS","GOMAXPROCS sets the maximum number of CPUs that can be executingsimultaneously and returns the previous setting","func"],["ReadTrace","ReadTrace returns the next chunk of binary tracing data, blocking until datais available","func"],["SetBlockProfileRate","SetBlockProfileRate controls the fraction of goroutine blocking eventsthat are reported in the blocking profile","func"],["KeepAlive","KeepAlive marks its argument as currently reachable","func"],["NumCgoCall","NumCgoCall returns the number of cgo calls made by the current process","func"],["BlockProfile","BlockProfile returns n, the number of records in the current blocking profile","func"],["SetFinalizer","SetFinalizer sets the finalizer associated with obj to the providedfinalizer function","func"],["Error","The Error interface identifies a run time error","interface"],["Frames","Frames may be used to get function/file/line information for aslice of PC values returned by Callers","struct"],["Breakpoint","Breakpoint executes a breakpoint trap","func"],["ThreadCreateProfile","ThreadCreateProfile returns n, the number of records in the thread creation profile","func"],["FuncForPC","FuncForPC returns a *Func describing the function that contains thegiven program counter address, or else nil","func"],["Func.FileLine","FileLine returns the file name and line number of thesource code corresponding to the program counter pc","func"],["Version","Version returns the Go tree's version string","func"],["MemStats","A MemStats records statistics about the memory allocator","struct"],["Frames.Next","Next returns frame information for the next caller","func"],["UnlockOSThread","UnlockOSThread undoes an earlier call to LockOSThread","func"],["SetCPUProfileRate","SetCPUProfileRate sets the CPU profiling rate to hz samples per second","func"],["GC","GC runs a garbage collection and blocks the caller until thegarbage collection is complete","func"],["CallersFrames","CallersFrames takes a slice of PC values returned by Callers andprepares to return function/file/line information","func"],["StopTrace","StopTrace stops tracing, if it was previously enabled","func"],["Frame","Frame is the information returned by Frames for each call frame","struct"],["GoroutineProfile","GoroutineProfile returns n, the number of records in the active goroutine stack profile","func"],["MutexProfile","MutexProfile returns n, the number of records in the current mutex profile","func"],["Stack","Stack formats a stack trace of the calling goroutine into bufand returns the number of bytes written to buf","func"],["MemProfileRecord.Stack","Stack returns the stack trace associated with the record,a prefix of r.Stack0","func"],["MemProfile","MemProfile returns a profile of memory allocated and freed per allocationsite","func"],["SetCgoTraceback","SetCgoTraceback records three C functions to use to gathertraceback information from C code and to convert that tracebackinformation into symbolic information","func"],["CPUProfile","CPUProfile panics","func"],["Func.Name","Name returns the name of the function","func"],["SetMutexProfileFraction","SetMutexProfileFraction controls the fraction of mutex contention eventsthat are reported in the mutex profile","func"],["Func.Entry","Entry returns the entry address of the function","func"],["BlockProfileRecord","BlockProfileRecord describes blocking events originatedat a particular call sequence (stack trace)","struct"],["Goexit","Goexit terminates the goroutine that calls it","func"],["StackRecord.Stack","Stack returns the stack trace associated with the record,a prefix of r.Stack0","func"],["Func","A Func represents a Go function in the running binary","struct"],["StartTrace","StartTrace enables tracing for the current process","func"],["NumGoroutine","NumGoroutine returns the number of goroutines that currently exist","func"],["LockOSThread","LockOSThread wires the calling goroutine to its current operating system thread","func"],["MemProfileRecord","A MemProfileRecord describes the live objects allocatedby a particular call sequence (stack trace)","struct"],["GOROOT","GOROOT returns the root of the Go tree","func"],["Gosched","Gosched yields the processor, allowing other goroutines to run","func"],["ReadMemStats","ReadMemStats populates m with memory allocator statistics","func"],["MemProfileRecord.InUseBytes","InUseBytes returns the number of bytes in use (AllocBytes - FreeBytes)","func"],["Caller","Caller reports file and line number information about function invocations onthe calling goroutine's stack","func"],["TypeAssertionError","A TypeAssertionError explains a failed type assertion","struct"],["MemProfileRecord.InUseObjects","InUseObjects returns the number of objects in use (AllocObjects - FreeObjects)","func"],["StackRecord","A StackRecord describes a single execution stack","struct"],["Callers","Callers fills the slice pc with the return program counters of function invocationson the calling goroutine's stack","func"],["NumCPU","NumCPU returns the number of logical CPUs usable by the current process","func"]],"expvar":[["expvar","Package expvar provides a standardized interface to public variables, suchas operation counters in servers","package"],["Float.Set","Set sets v to value","func"],["Map.Do","Do calls f for each entry in the map","func"],["Var","Var is an abstract type for all exported variables","interface"],["Map.Delete","Delete deletes the given key from the map","func"],["Map.AddFloat","AddFloat adds delta to the *Float value stored under the given map key","func"],["String.String","String implements the Var interface","func"],["String","String is a string variable, and satisfies the Var interface","struct"],["Int","Int is a 64-bit integer variable that satisfies the Var interface","struct"],["Get","Get retrieves a named exported variable","func"],["Handler","Handler returns the expvar HTTP Handler","func"],["Do","Do calls f for each exported variable","func"],["Float","Float is a 64-bit float variable that satisfies the Var interface","struct"],["Map.Init","Init removes all keys from the map","func"],["Map","Map is a string-to-Var map variable that satisfies the Var interface","struct"],["KeyValue","KeyValue represents a single entry in a Map","struct"],["Func","Func implements Var by calling the functionand formatting the returned value using JSON","other"],["Map.Add","Add adds delta to the *Int value stored under the given map key","func"],["Float.Add","Add adds delta to v","func"],["Publish","Publish declares a named exported variable","func"]],"crypto":[["crypto","Package crypto collects common cryptographic constants","package"],["DecrypterOpts","","other"],["Hash.Size","Size returns the length, in bytes, of a digest resulting from the given hashfunction","func"],["PublicKey","PublicKey represents a public key using an unspecified algorithm","other"],["RegisterHash","RegisterHash registers a function that returns a new instance of the givenhash function","func"],["Decrypter","Decrypter is an interface for an opaque private key that can be used forasymmetric decryption operations","interface"],["Hash.Available","Available reports whether the given hash function is linked into the binary","func"],["Hash.HashFunc","HashFunc simply returns the value of h so that Hash implements SignerOpts","func"],["Hash.New","New returns a new hash.Hash calculating the given hash function","func"],["PrivateKey","PrivateKey represents a private key using an unspecified algorithm","other"],["SignerOpts","SignerOpts contains options for signing with a Signer","interface"],["Signer","Signer is an interface for an opaque private key that can be used forsigning operations","interface"],["Hash","Hash identifies a cryptographic hash function that is implemented in anotherpackage","other"]],"os/exec":[["os/exec","Package exec runs external commands","package"],["Command","Command returns the Cmd struct to execute the named program withthe given arguments","func"],["LookPath","LookPath searches for an executable named file in thedirectories named by the PATH environment variable","func"],["Cmd.String","String returns a human-readable description of c","func"],["CommandContext","CommandContext is like Command but includes a context","func"],["ExitError","An ExitError reports an unsuccessful exit by a command","struct"],["Cmd.StdoutPipe","StdoutPipe returns a pipe that will be connected to the command'sstandard output when the command starts","func"],["Error","Error is returned by LookPath when it fails to classify a file as anexecutable","struct"],["Cmd.Output","Output runs the command and returns its standard output","func"],["Cmd.CombinedOutput","CombinedOutput runs the command and returns its combined standardoutput and standard error","func"],["Cmd.Wait","Wait waits for the command to exit and waits for any copying tostdin or copying from stdout or stderr to complete","func"],["Cmd.StdinPipe","StdinPipe returns a pipe that will be connected to the command'sstandard input when the command starts","func"],["Cmd","Cmd represents an external command being prepared or run","struct"],["Cmd.Run","Run starts the specified command and waits for it to complete","func"],["Cmd.Start","Start starts the specified command but does not wait for it to complete","func"],["Cmd.StderrPipe","StderrPipe returns a pipe that will be connected to the command'sstandard error when the command starts","func"]],"crypto/ecdsa":[["crypto/ecdsa","Package ecdsa implements the Elliptic Curve Digital Signature Algorithm, asdefined in FIPS 186-3","package"],["PrivateKey.Sign","Sign signs digest with priv, reading randomness from rand","func"],["PrivateKey.Public","Public returns the public key corresponding to priv","func"],["Verify","Verify verifies the signature in r, s of hash using the public key, pub","func"],["PrivateKey","PrivateKey represents an ECDSA private key","struct"],["Sign","Sign signs a hash (which should be the result of hashing a larger message)using the private key, priv","func"],["PublicKey","PublicKey represents an ECDSA public key","struct"],["GenerateKey","GenerateKey generates a public and private key pair","func"]],"crypto/des":[["crypto/des","Package des implements the Data Encryption Standard (DES) and theTriple Data Encryption Algorithm (TDEA) as definedin U.S","package"],["KeySizeError","","other"],["NewCipher","NewCipher creates and returns a new cipher.Block","func"],["NewTripleDESCipher","NewTripleDESCipher creates and returns a new cipher.Block","func"]],"io":[["io","Package io provides basic interfaces to I/O primitives","package"],["MultiWriter","MultiWriter creates a writer that duplicates its writes to all theprovided writers, similar to the Unix tee(1) command","func"],["RuneScanner","RuneScanner is the interface that adds the UnreadRune method to thebasic ReadRune method","interface"],["ReadFull","ReadFull reads exactly len(buf) bytes from r into buf","func"],["ByteScanner","ByteScanner is the interface that adds the UnreadByte method to thebasic ReadByte method","interface"],["LimitedReader","A LimitedReader reads from R but limits the amount ofdata returned to just N bytes","struct"],["Closer","Closer is the interface that wraps the basic Close method","interface"],["NewSectionReader","NewSectionReader returns a SectionReader that reads from rstarting at offset off and stops with EOF after n bytes","func"],["CopyN","CopyN copies n bytes (or until an error) from src to dst","func"],["WriterTo","WriterTo is the interface that wraps the WriteTo method","interface"],["PipeReader","A PipeReader is the read half of a pipe","struct"],["MultiReader","MultiReader returns a Reader that's the logical concatenation ofthe provided input readers","func"],["PipeWriter.CloseWithError","CloseWithError closes the writer; subsequent reads from theread half of the pipe will return no bytes and the error err,or EOF if err is nil","func"],["WriteSeeker","WriteSeeker is the interface that groups the basic Write and Seek methods","interface"],["Seeker","Seeker is the interface that wraps the basic Seek method","interface"],["ByteWriter","ByteWriter is the interface that wraps the WriteByte method","interface"],["SectionReader","SectionReader implements Read, Seek, and ReadAt on a sectionof an underlying ReaderAt","struct"],["Pipe","Pipe creates a synchronous in-memory pipe","func"],["CopyBuffer","CopyBuffer is identical to Copy except that it stages through theprovided buffer (if one is required) rather than allocating atemporary one","func"],["PipeReader.Read","Read implements the standard Read interface:it reads data from the pipe, blocking until a writerarrives or the write end is closed","func"],["ReadSeeker","ReadSeeker is the interface that groups the basic Read and Seek methods","interface"],["PipeReader.Close","Close closes the reader; subsequent writes to thewrite half of the pipe will return the error ErrClosedPipe","func"],["WriteString","WriteString writes the contents of the string s to w, which accepts a slice of bytes","func"],["SectionReader.Size","Size returns the size of the section in bytes","func"],["ReadWriter","ReadWriter is the interface that groups the basic Read and Write methods","interface"],["PipeWriter.Write","Write implements the standard Write interface:it writes data to the pipe, blocking until one or more readershave consumed all the data or the read end is closed","func"],["WriteCloser","WriteCloser is the interface that groups the basic Write and Close methods","interface"],["TeeReader","TeeReader returns a Reader that writes to w what it reads from r","func"],["ReadCloser","ReadCloser is the interface that groups the basic Read and Close methods","interface"],["ReadWriteSeeker","ReadWriteSeeker is the interface that groups the basic Read, Write and Seek methods","interface"],["PipeReader.CloseWithError","CloseWithError closes the reader; subsequent writesto the write half of the pipe will return the error err","func"],["Copy","Copy copies from src to dst until either EOF is reachedon src or an error occurs","func"],["Reader","Reader is the interface that wraps the basic Read method","interface"],["Writer","Writer is the interface that wraps the basic Write method","interface"],["ReadWriteCloser","ReadWriteCloser is the interface that groups the basic Read, Write and Close methods","interface"],["StringWriter","StringWriter is the interface that wraps the WriteString method","interface"],["LimitReader","LimitReader returns a Reader that reads from rbut stops with EOF after n bytes","func"],["PipeWriter","A PipeWriter is the write half of a pipe","struct"],["ByteReader","ByteReader is the interface that wraps the ReadByte method","interface"],["RuneReader","RuneReader is the interface that wraps the ReadRune method","interface"],["ReaderAt","ReaderAt is the interface that wraps the basic ReadAt method","interface"],["PipeWriter.Close","Close closes the writer; subsequent reads from theread half of the pipe will return no bytes and EOF","func"],["ReaderFrom","ReaderFrom is the interface that wraps the ReadFrom method","interface"],["WriterAt","WriterAt is the interface that wraps the basic WriteAt method","interface"],["ReadAtLeast","ReadAtLeast reads from r into buf until it has read at least min bytes","func"]],"text/tabwriter":[["text/tabwriter","Package tabwriter implements a write filter (tabwriter.Writer) thattranslates tabbed columns in input into properly aligned text","package"],["Writer.Write","Write writes buf to the writer b","func"],["Writer.Init","A Writer must be initialized with a call to Init","func"],["Writer.Flush","Flush should be called after the last call to Write to ensurethat any data buffered in the Writer is written to output","func"],["NewWriter","NewWriter allocates and initializes a new tabwriter.Writer","func"],["Writer","A Writer is a filter that inserts padding around tab-delimitedcolumns in its input to align them in the output","struct"]],"compress/lzw":[["compress/lzw","Package lzw implements the Lempel-Ziv-Welch compressed data format,described in T","package"],["Order","Order specifies the bit ordering in an LZW data stream","other"],["NewReader","NewReader creates a new io.ReadCloser","func"],["NewWriter","NewWriter creates a new io.WriteCloser","func"]],"index/suffixarray":[["index/suffixarray","Package suffixarray implements substring search in logarithmic time usingan in-memory suffix array","package"],["Index.FindAllIndex","FindAllIndex returns a sorted list of non-overlapping matches of theregular expression r, where a match is a pair of indices specifyingthe matched slice of x.Bytes()","func"],["Index.Read","Read reads the index from r into x; x must not be nil","func"],["Index.Bytes","Bytes returns the data over which the index was created","func"],["Index","Index implements a suffix array for fast substring search","struct"],["New","New creates a new Index for data","func"],["Index.Lookup","Lookup returns an unsorted list of at most n indices where the byte string soccurs in the indexed data","func"],["Index.Write","Write writes the index x to w","func"]],"testing/quick":[["testing/quick","Package quick implements utility functions to help with black box testing","package"],["Generator","A Generator can generate random values of its own type","interface"],["Check","Check looks for an input to f, any function that returns bool,such that f returns false","func"],["SetupError","A SetupError is the result of an error in the way that check is beingused, independent of the functions being tested","other"],["CheckEqual","CheckEqual looks for an input on which f and g return different results","func"],["CheckError","A CheckError is the result of Check finding an error","struct"],["CheckEqualError","A CheckEqualError is the result CheckEqual finding an error","struct"],["Value","Value returns an arbitrary value of the given type","func"],["Config","A Config structure contains options for running a test","struct"]],"syscall/js":[["syscall/js","Package js gives access to the WebAssembly host environment when using the js/wasm architecture","package"],["Value.Float","Float returns the value v as a float64","func"],["Value.Index","Index returns JavaScript index i of value v","func"],["FuncOf","FuncOf returns a wrapped function","func"],["Null","Null returns the JavaScript value \"null\"","func"],["Value.Get","Get returns the JavaScript property p of value v","func"],["Global","Global returns the JavaScript global object, usually \"window\" or \"global\"","func"],["Value.JSValue","JSValue implements Wrapper interface","func"],["Error.Error","Error implements the error interface","func"],["Func.Release","Release frees up resources allocated for the function","func"],["Value.New","New uses JavaScript's \"new\" operator with value v as constructor and the given arguments","func"],["Value.Invoke","Invoke does a JavaScript call of the value v with the given arguments","func"],["Type","Type represents the JavaScript type of a Value","other"],["CopyBytesToJS","CopyBytesToJS copies bytes from src to the Uint8Array dst","func"],["Value.Bool","Bool returns the value v as a bool","func"],["Value.SetIndex","SetIndex sets the JavaScript index i of value v to ValueOf(x)","func"],["Value.InstanceOf","InstanceOf reports whether v is an instance of type t according to JavaScript's instanceof operator","func"],["Wrapper","Wrapper is implemented by types that are backed by a JavaScript value","interface"],["Value.Int","Int returns the value v truncated to an int","func"],["Value","Value represents a JavaScript value","struct"],["ValueError","A ValueError occurs when a Value method is invoked ona Value that does not support it","struct"],["CopyBytesToGo","CopyBytesToGo copies bytes from the Uint8Array src to dst","func"],["Func","Func is a wrapped Go function to be called by JavaScript","struct"],["Value.Length","Length returns the JavaScript property \"length\" of v","func"],["Value.Truthy","Truthy returns the JavaScript \"truthiness\" of the value v","func"],["Value.Type","Type returns the JavaScript type of the value v","func"],["Value.String","String returns the value v as a string","func"],["Value.Call","Call does a JavaScript call to the method m of value v with the given arguments","func"],["Value.Set","Set sets the JavaScript property p of value v to ValueOf(x)","func"],["Undefined","Undefined returns the JavaScript value \"undefined\"","func"],["ValueOf","ValueOf returns x as a JavaScript value:","func"],["Error","Error wraps a JavaScript error","struct"]],"compress/gzip":[["compress/gzip","Package gzip implements reading and writing of gzip format compressed files,as specified in RFC 1952","package"],["Reader.Close","Close closes the Reader","func"],["NewWriterLevel","NewWriterLevel is like NewWriter but specifies the compression level insteadof assuming DefaultCompression","func"],["Writer.Close","Close closes the Writer by flushing any unwritten data to the underlyingio.Writer and writing the GZIP footer","func"],["Reader.Read","Read implements io.Reader, reading uncompressed bytes from its underlying Reader","func"],["Header","The gzip file stores a header giving metadata about the compressed file","struct"],["Reader.Reset","Reset discards the Reader z's state and makes it equivalent to theresult of its original state from NewReader, but reading from r instead","func"],["Writer.Reset","Reset discards the Writer z's state and makes it equivalent to theresult of its original state from NewWriter or NewWriterLevel, butwriting to w instead","func"],["Reader.Multistream","Multistream controls whether the reader supports multistream files","func"],["Writer.Write","Write writes a compressed form of p to the underlying io.Writer","func"],["Writer.Flush","Flush flushes any pending compressed data to the underlying writer","func"],["Reader","A Reader is an io.Reader that can be read to retrieveuncompressed data from a gzip-format compressed file","struct"],["NewWriter","NewWriter returns a new Writer","func"],["NewReader","NewReader creates a new Reader reading the given reader","func"],["Writer","A Writer is an io.WriteCloser","struct"]],"go/token":[["go/token","Package token defines constants representing the lexical tokens of the Goprogramming language and basic operations on tokens (printing, predicates)","package"],["File.SetLinesForContent","SetLinesForContent sets the line offsets for the given file content","func"],["Pos","Pos is a compact encoding of a source position within a file set","other"],["File.AddLineColumnInfo","AddLineColumnInfo adds alternative file, line, and column numberinformation for a given file offset","func"],["File.LineStart","LineStart returns the Pos value of the start of the specified line","func"],["IsKeyword","IsKeyword reports whether name is a Go keyword, such as \"func\" or \"return\"","func"],["File.Line","Line returns the line number for the given file position p;p must be a Pos value in that file or NoPos","func"],["Token.String","String returns the string corresponding to the token tok","func"],["File.Offset","Offset returns the offset for the given file position p;p must be a valid Pos value in that file","func"],["File.SetLines","SetLines sets the line offsets for a file and reports whether it succeeded","func"],["Token.IsKeyword","IsKeyword returns true for tokens corresponding to keywords;it returns false otherwise","func"],["IsIdentifier","IsIdentifier reports whether name is a Go identifier, that is, a non-emptystring made up of letters, digits, and underscores, where the first characteris not a digit","func"],["Pos.IsValid","IsValid reports whether the position is valid","func"],["Token.Precedence","Precedence returns the operator precedence of the binaryoperator op","func"],["File.AddLine","AddLine adds the line offset for a new line","func"],["File.AddLineInfo","AddLineInfo is like AddLineColumnInfo with a column = 1 argument","func"],["File","A File is a handle for a file belonging to a FileSet","struct"],["File.MergeLine","MergeLine merges a line with the following line","func"],["FileSet.Position","Position converts a Pos p in the fileset into a Position value","func"],["FileSet.Base","Base returns the minimum base offset that must be provided toAddFile when adding the next file","func"],["FileSet.File","File returns the file that contains the position p","func"],["Token.IsLiteral","IsLiteral returns true for tokens corresponding to identifiersand basic type literals; it returns false otherwise","func"],["Position.IsValid","IsValid reports whether the position is valid","func"],["Position","Position describes an arbitrary source positionincluding the file, line, and column location","struct"],["FileSet.PositionFor","PositionFor converts a Pos p in the fileset into a Position value","func"],["IsExported","IsExported reports whether name starts with an upper-case letter","func"],["NewFileSet","NewFileSet creates a new file set","func"],["FileSet.Write","Write calls encode to serialize the file set s","func"],["File.Size","Size returns the size of file f as registered with AddFile","func"],["Token.IsOperator","IsOperator returns true for tokens corresponding to operators anddelimiters; it returns false otherwise","func"],["File.PositionFor","PositionFor returns the Position value for the given file position p","func"],["Position.String","String returns a string in one of several forms:","func"],["File.Base","Base returns the base offset of file f as registered with AddFile","func"],["FileSet","A FileSet represents a set of source files","struct"],["File.Position","Position returns the Position value for the given file position p","func"],["FileSet.AddFile","AddFile adds a new file with a given filename, base offset, and file sizeto the file set s and returns the file","func"],["Lookup","Lookup maps an identifier to its keyword token or IDENT (if not a keyword)","func"],["File.Pos","Pos returns the Pos value for the given file offset;the offset must be <= f.Size()","func"],["FileSet.Read","Read calls decode to deserialize a file set into s; s must not be nil","func"],["Token","Token is the set of lexical tokens of the Go programming language","other"],["File.Name","Name returns the file name of file f as registered with AddFile","func"],["FileSet.Iterate","Iterate calls f for the files in the file set in the order they were addeduntil f returns false","func"],["File.LineCount","LineCount returns the number of lines in file f","func"]],"image/gif":[["image/gif","Package gif implements a GIF image decoder and encoder","package"],["Encode","Encode writes the Image m to w in GIF format","func"],["Decode","Decode reads a GIF image from r and returns the first embeddedimage as an image.Image","func"],["Options","Options are the encoding parameters","struct"],["DecodeAll","DecodeAll reads a GIF image from r and returns the sequential framesand timing information","func"],["DecodeConfig","DecodeConfig returns the global color model and dimensions of a GIF imagewithout decoding the entire image","func"],["GIF","GIF represents the possibly multiple images stored in a GIF file","struct"],["EncodeAll","EncodeAll writes the images in g to w in GIF format with thegiven loop count and delay between frames","func"]],"strconv":[["strconv","Package strconv implements conversions to and from string representationsof basic data types","package"],["FormatUint","FormatUint returns the string representation of i in the given base,for 2 <= base <= 36","func"],["ParseBool","ParseBool returns the boolean value represented by the string","func"],["AppendQuoteRuneToASCII","AppendQuoteRuneToASCII appends a single-quoted Go character literal representing the rune,as generated by QuoteRuneToASCII, to dst and returns the extended buffer","func"],["QuoteRuneToASCII","QuoteRuneToASCII returns a single-quoted Go character literal representingthe rune","func"],["ParseUint","ParseUint is like ParseInt but for unsigned numbers","func"],["AppendFloat","AppendFloat appends the string form of the floating-point number f,as generated by FormatFloat, to dst and returns the extended buffer","func"],["FormatInt","FormatInt returns the string representation of i in the given base,for 2 <= base <= 36","func"],["QuoteRuneToGraphic","QuoteRuneToGraphic returns a single-quoted Go character literal representingthe rune","func"],["QuoteToASCII","QuoteToASCII returns a double-quoted Go string literal representing s","func"],["AppendQuoteRune","AppendQuoteRune appends a single-quoted Go character literal representing the rune,as generated by QuoteRune, to dst and returns the extended buffer","func"],["ParseFloat","ParseFloat converts the string s to a floating-point numberwith the precision specified by bitSize: 32 for float32, or 64 for float64","func"],["FormatFloat","FormatFloat converts the floating-point number f to a string,according to the format fmt and precision prec","func"],["IsPrint","IsPrint reports whether the rune is defined as printable by Go, withthe same definition as unicode.IsPrint: letters, numbers, punctuation,symbols and ASCII space","func"],["UnquoteChar","UnquoteChar decodes the first character or byte in the escaped stringor character literal represented by the string s","func"],["AppendQuoteRuneToGraphic","AppendQuoteRuneToGraphic appends a single-quoted Go character literal representing the rune,as generated by QuoteRuneToGraphic, to dst and returns the extended buffer","func"],["AppendInt","AppendInt appends the string form of the integer i,as generated by FormatInt, to dst and returns the extended buffer","func"],["IsGraphic","IsGraphic reports whether the rune is defined as a Graphic by Unicode","func"],["Quote","Quote returns a double-quoted Go string literal representing s","func"],["Itoa","Itoa is equivalent to FormatInt(int64(i), 10)","func"],["FormatBool","FormatBool returns \"true\" or \"false\" according to the value of b","func"],["CanBackquote","CanBackquote reports whether the string s can be representedunchanged as a single-line backquoted string without controlcharacters other than tab","func"],["AppendQuote","AppendQuote appends a double-quoted Go string literal representing s,as generated by Quote, to dst and returns the extended buffer","func"],["QuoteToGraphic","QuoteToGraphic returns a double-quoted Go string literal representing s","func"],["Unquote","Unquote interprets s as a single-quoted, double-quoted,or backquoted Go string literal, returning the string valuethat s quotes","func"],["AppendUint","AppendUint appends the string form of the unsigned integer i,as generated by FormatUint, to dst and returns the extended buffer","func"],["ParseInt","ParseInt interprets a string s in the given base (0, 2 to 36) andbit size (0 to 64) and returns the corresponding value i","func"],["AppendQuoteToASCII","AppendQuoteToASCII appends a double-quoted Go string literal representing s,as generated by QuoteToASCII, to dst and returns the extended buffer","func"],["QuoteRune","QuoteRune returns a single-quoted Go character literal representing therune","func"],["AppendQuoteToGraphic","AppendQuoteToGraphic appends a double-quoted Go string literal representing s,as generated by QuoteToGraphic, to dst and returns the extended buffer","func"],["AppendBool","AppendBool appends \"true\" or \"false\", according to the value of b,to dst and returns the extended buffer","func"],["NumError","A NumError records a failed conversion","struct"],["Atoi","Atoi is equivalent to ParseInt(s, 10, 0), converted to type int","func"]],"text/scanner":[["text/scanner","Package scanner provides a scanner and tokenizer for UTF-8-encoded text","package"],["Scanner.Next","Next reads and returns the next Unicode character","func"],["Position","A source position is represented by a Position value","struct"],["Scanner","A Scanner implements reading of Unicode characters and tokens from an io.Reader","struct"],["TokenString","TokenString returns a printable string for a token or Unicode character","func"],["Scanner.Peek","Peek returns the next Unicode character in the source without advancingthe scanner","func"],["Position.IsValid","IsValid reports whether the position is valid","func"],["Scanner.TokenText","TokenText returns the string corresponding to the most recently scanned token","func"],["Scanner.Scan","Scan reads the next token or Unicode character from source and returns it","func"],["Scanner.Init","Init initializes a Scanner with a new source and returns s","func"],["Scanner.Pos","Pos returns the position of the character immediately afterthe character or token returned by the last call to Next or Scan","func"]],"image/draw":[["image/draw","Package draw provides image composition functions","package"],["Op.Draw","Draw implements the Drawer interface by calling the Draw function with thisOp","func"],["Op","Op is a Porter-Duff compositing operator","other"],["Quantizer","Quantizer produces a palette for an image","interface"],["Draw","Draw calls DrawMask with a nil mask","func"],["Image","Image is an image.Image with a Set method to change a single pixel","interface"],["Drawer","Drawer contains the Draw method","interface"],["DrawMask","DrawMask aligns r.Min in dst with sp in src and mp in mask and then replaces the rectangle rin dst with the result of a Porter-Duff composition","func"]],"math/cmplx":[["math/cmplx","Package cmplx provides basic constants and mathematical functions forcomplex numbers","package"],["Cot","Cot returns the cotangent of x","func"],["Rect","Rect returns the complex number x with polar coordinates r, θ","func"],["Sinh","Sinh returns the hyperbolic sine of x","func"],["Inf","Inf returns a complex infinity, complex(+Inf, +Inf)","func"],["Atan","Atan returns the inverse tangent of x","func"],["Sin","Sin returns the sine of x","func"],["Acos","Acos returns the inverse cosine of x","func"],["Exp","Exp returns e**x, the base-e exponential of x","func"],["Asin","Asin returns the inverse sine of x","func"],["Atanh","Atanh returns the inverse hyperbolic tangent of x","func"],["Conj","Conj returns the complex conjugate of x","func"],["Sqrt","Sqrt returns the square root of x","func"],["Abs","Abs returns the absolute value (also called the modulus) of x","func"],["NaN","NaN returns a complex “not-a-number” value","func"],["IsInf","IsInf reports whether either real(x) or imag(x) is an infinity","func"],["Log","Log returns the natural logarithm of x","func"],["IsNaN","IsNaN reports whether either real(x) or imag(x) is NaNand neither is an infinity","func"],["Pow","Pow returns x**y, the base-x exponential of y","func"],["Cos","Cos returns the cosine of x","func"],["Acosh","Acosh returns the inverse hyperbolic cosine of x","func"],["Cosh","Cosh returns the hyperbolic cosine of x","func"],["Tan","Tan returns the tangent of x","func"],["Phase","Phase returns the phase (also called the argument) of x","func"],["Asinh","Asinh returns the inverse hyperbolic sine of x","func"],["Polar","Polar returns the absolute value r and phase θ of x,such that x = r * e**θi","func"],["Tanh","Tanh returns the hyperbolic tangent of x","func"],["Log10","Log10 returns the decimal logarithm of x","func"]],"html/template":[["html/template","Package template (html/template) implements data-driven templates forgenerating HTML output safe against code injection","package"],["Srcset","Srcset encapsulates a known safe srcset attribute(see https://w3c.github.io/html/semantics-embedded-content.html#element-attrdef-img-srcset)","other"],["ParseFiles","ParseFiles creates a new Template and parses the template definitions fromthe named files","func"],["Template.ExecuteTemplate","ExecuteTemplate applies the template associated with t that has the givenname to the specified data object and writes the output to wr","func"],["JS","JS encapsulates a known safe EcmaScript5 Expression, for example,`(x + y * z())`","other"],["Template.Templates","Templates returns a slice of the templates associated with t, including titself","func"],["JSEscape","JSEscape writes to w the escaped JavaScript equivalent of the plain text data b","func"],["HTMLEscape","HTMLEscape writes to w the escaped HTML equivalent of the plain text data b","func"],["CSS","CSS encapsulates known safe content that matches any of:","other"],["Template.Option","Option sets options for the template","func"],["Template.Lookup","Lookup returns the template with the given name that is associated with t,or nil if there is no such template","func"],["URLQueryEscaper","URLQueryEscaper returns the escaped value of the textual representation ofits arguments in a form suitable for embedding in a URL query","func"],["JSEscaper","JSEscaper returns the escaped JavaScript equivalent of the textualrepresentation of its arguments","func"],["IsTrue","IsTrue reports whether the value is 'true', in the sense of not the zero of its type,and whether the value has a meaningful truth value","func"],["HTMLEscapeString","HTMLEscapeString returns the escaped HTML equivalent of the plain text data s","func"],["URL","URL encapsulates a known safe URL or URL substring (see RFC 3986)","other"],["Template.Name","Name returns the name of the template","func"],["ParseGlob","ParseGlob creates a new Template and parses the template definitions fromthe files identified by the pattern","func"],["Template.ParseGlob","ParseGlob parses the template definitions in the files identified by thepattern and associates the resulting templates with t","func"],["New","New allocates a new HTML template with the given name","func"],["Template.Parse","Parse parses text as a template body for t","func"],["JSEscapeString","JSEscapeString returns the escaped JavaScript equivalent of the plain text data s","func"],["HTMLAttr","HTMLAttr encapsulates an HTML attribute from a trusted source,for example, ` dir=\"ltr\"`","other"],["Template.Funcs","Funcs adds the elements of the argument map to the template's function map","func"],["HTMLEscaper","HTMLEscaper returns the escaped HTML equivalent of the textualrepresentation of its arguments","func"],["Template","Template is a specialized Template from \"text/template\" that produces a safeHTML document fragment","struct"],["Template.Execute","Execute applies a parsed template to the specified data object,writing the output to wr","func"],["Template.New","New allocates a new HTML template associated with the given oneand with the same delimiters","func"],["HTML","HTML encapsulates a known safe HTML document fragment","other"],["Template.ParseFiles","ParseFiles parses the named files and associates the resulting templates witht","func"],["ErrorCode","ErrorCode is a code for a kind of error","other"],["JSStr","JSStr encapsulates a sequence of characters meant to be embeddedbetween quotes in a JavaScript expression","other"],["Template.DefinedTemplates","DefinedTemplates returns a string listing the defined templates,prefixed by the string \"; defined templates are: \"","func"],["Template.Clone","Clone returns a duplicate of the template, including all associatedtemplates","func"],["Error","Error describes a problem encountered during template Escaping","struct"],["Must","Must is a helper that wraps a call to a function returning (*Template, error)and panics if the error is non-nil","func"],["Template.AddParseTree","AddParseTree creates a new template with the name and parse treeand associates it with t","func"],["FuncMap","FuncMap is the type of the map defining the mapping from names tofunctions","other"],["Template.Delims","Delims sets the action delimiters to the specified strings, to be used insubsequent calls to Parse, ParseFiles, or ParseGlob","func"]],"hash/fnv":[["hash/fnv","Package fnv implements FNV-1 and FNV-1a, non-cryptographic hash functionscreated by Glenn Fowler, Landon Curt Noll, and Phong Vo","package"],["New128","New128 returns a new 128-bit FNV-1 hash.Hash","func"],["New128a","New128a returns a new 128-bit FNV-1a hash.Hash","func"],["New32a","New32a returns a new 32-bit FNV-1a hash.Hash","func"],["New64","New64 returns a new 64-bit FNV-1 hash.Hash","func"],["New32","New32 returns a new 32-bit FNV-1 hash.Hash","func"],["New64a","New64a returns a new 64-bit FNV-1a hash.Hash","func"]],"math/bits":[["math/bits","Package bits implements bit counting and manipulationfunctions for the predeclared unsigned integer types","package"],["Reverse64","Reverse64 returns the value of x with its bits in reversed order","func"],["OnesCount64","OnesCount64 returns the number of one bits (\"population count\") in x","func"],["Len8","Len8 returns the minimum number of bits required to represent x; the result is 0 for x == 0","func"],["Mul32","Mul32 returns the 64-bit product of x and y: (hi, lo) = x * ywith the product bits' upper half returned in hi and the lowerhalf returned in lo","func"],["Div32","Div32 returns the quotient and remainder of (hi, lo) divided by y:quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upperhalf in parameter hi and the lower half in parameter lo","func"],["TrailingZeros","TrailingZeros returns the number of trailing zero bits in x; the result is UintSize for x == 0","func"],["LeadingZeros64","LeadingZeros64 returns the number of leading zero bits in x; the result is 64 for x == 0","func"],["LeadingZeros16","LeadingZeros16 returns the number of leading zero bits in x; the result is 16 for x == 0","func"],["OnesCount16","OnesCount16 returns the number of one bits (\"population count\") in x","func"],["OnesCount32","OnesCount32 returns the number of one bits (\"population count\") in x","func"],["Len16","Len16 returns the minimum number of bits required to represent x; the result is 0 for x == 0","func"],["Sub","Sub returns the difference of x, y and borrow: diff = x - y - borrow","func"],["Add64","Add64 returns the sum with carry of x, y and carry: sum = x + y + carry","func"],["Len64","Len64 returns the minimum number of bits required to represent x; the result is 0 for x == 0","func"],["RotateLeft16","RotateLeft16 returns the value of x rotated left by (k mod 16) bits","func"],["TrailingZeros64","TrailingZeros64 returns the number of trailing zero bits in x; the result is 64 for x == 0","func"],["Add","Add returns the sum with carry of x, y and carry: sum = x + y + carry","func"],["Reverse16","Reverse16 returns the value of x with its bits in reversed order","func"],["Sub32","Sub32 returns the difference of x, y and borrow, diff = x - y - borrow","func"],["OnesCount","OnesCount returns the number of one bits (\"population count\") in x","func"],["RotateLeft32","RotateLeft32 returns the value of x rotated left by (k mod 32) bits","func"],["Reverse","Reverse returns the value of x with its bits in reversed order","func"],["Len32","Len32 returns the minimum number of bits required to represent x; the result is 0 for x == 0","func"],["ReverseBytes","ReverseBytes returns the value of x with its bytes in reversed order","func"],["Reverse32","Reverse32 returns the value of x with its bits in reversed order","func"],["TrailingZeros32","TrailingZeros32 returns the number of trailing zero bits in x; the result is 32 for x == 0","func"],["ReverseBytes64","ReverseBytes64 returns the value of x with its bytes in reversed order","func"],["RotateLeft","RotateLeft returns the value of x rotated left by (k mod UintSize) bits","func"],["Add32","Add32 returns the sum with carry of x, y and carry: sum = x + y + carry","func"],["Div64","Div64 returns the quotient and remainder of (hi, lo) divided by y:quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upperhalf in parameter hi and the lower half in parameter lo","func"],["Sub64","Sub64 returns the difference of x, y and borrow: diff = x - y - borrow","func"],["LeadingZeros32","LeadingZeros32 returns the number of leading zero bits in x; the result is 32 for x == 0","func"],["ReverseBytes16","ReverseBytes16 returns the value of x with its bytes in reversed order","func"],["TrailingZeros16","TrailingZeros16 returns the number of trailing zero bits in x; the result is 16 for x == 0","func"],["LeadingZeros","LeadingZeros returns the number of leading zero bits in x; the result is UintSize for x == 0","func"],["Len","Len returns the minimum number of bits required to represent x; the result is 0 for x == 0","func"],["Reverse8","Reverse8 returns the value of x with its bits in reversed order","func"],["RotateLeft64","RotateLeft64 returns the value of x rotated left by (k mod 64) bits","func"],["Mul64","Mul64 returns the 128-bit product of x and y: (hi, lo) = x * ywith the product bits' upper half returned in hi and the lowerhalf returned in lo","func"],["Mul","Mul returns the full-width product of x and y: (hi, lo) = x * ywith the product bits' upper half returned in hi and the lowerhalf returned in lo","func"],["LeadingZeros8","LeadingZeros8 returns the number of leading zero bits in x; the result is 8 for x == 0","func"],["TrailingZeros8","TrailingZeros8 returns the number of trailing zero bits in x; the result is 8 for x == 0","func"],["OnesCount8","OnesCount8 returns the number of one bits (\"population count\") in x","func"],["Div","Div returns the quotient and remainder of (hi, lo) divided by y:quo = (hi, lo)/y, rem = (hi, lo)%y with the dividend bits' upperhalf in parameter hi and the lower half in parameter lo","func"],["RotateLeft8","RotateLeft8 returns the value of x rotated left by (k mod 8) bits","func"],["ReverseBytes32","ReverseBytes32 returns the value of x with its bytes in reversed order","func"]],"crypto/sha512":[["crypto/sha512","Package sha512 implements the SHA-384, SHA-512, SHA-512/224, and SHA-512/256hash algorithms as defined in FIPS 180-4","package"],["Sum512_256","Sum512_256 returns the Sum512/256 checksum of the data","func"],["Sum512_224","Sum512_224 returns the Sum512/224 checksum of the data","func"],["New","New returns a new hash.Hash computing the SHA-512 checksum","func"],["New512_224","New512_224 returns a new hash.Hash computing the SHA-512/224 checksum","func"],["Sum512","Sum512 returns the SHA512 checksum of the data","func"],["New512_256","New512_256 returns a new hash.Hash computing the SHA-512/256 checksum","func"],["New384","New384 returns a new hash.Hash computing the SHA-384 checksum","func"],["Sum384","Sum384 returns the SHA384 checksum of the data","func"]],"database/sql/driver":[["database/sql/driver","Package driver defines interfaces to be implemented by databasedrivers as used by package sql","package"],["Queryer","Queryer is an optional interface that may be implemented by a Conn","interface"],["ExecerContext","ExecerContext is an optional interface that may be implemented by a Conn","interface"],["Pinger","Pinger is an optional interface that may be implemented by a Conn","interface"],["NotNull","NotNull is a type that implements ValueConverter by disallowing nilvalues but otherwise delegating to another ValueConverter","struct"],["StmtExecContext","StmtExecContext enhances the Stmt interface by providing Exec with context","interface"],["RowsColumnTypeDatabaseTypeName","RowsColumnTypeDatabaseTypeName may be implemented by Rows","interface"],["Value","Value is a value that drivers must be able to handle","other"],["Null","Null is a type that implements ValueConverter by allowing nilvalues but otherwise delegating to another ValueConverter","struct"],["Tx","Tx is a transaction","interface"],["RowsColumnTypeNullable","RowsColumnTypeNullable may be implemented by Rows","interface"],["RowsNextResultSet","RowsNextResultSet extends the Rows interface by providing a way to signalthe driver to advance to the next result set","interface"],["ConnBeginTx","ConnBeginTx enhances the Conn interface with context and TxOptions","interface"],["RowsAffected","RowsAffected implements Result for an INSERT or UPDATE operationwhich mutates a number of rows","other"],["Stmt","Stmt is a prepared statement","interface"],["RowsColumnTypeScanType","RowsColumnTypeScanType may be implemented by Rows","interface"],["NamedValue","NamedValue holds both the value name and value","struct"],["DriverContext","If a Driver implements DriverContext, then sql.DB will callOpenConnector to obtain a Connector and then invokethat Connector's Conn method to obtain each needed connection,instead of invoking the Driver's Open method for each connection","interface"],["Rows","Rows is an iterator over an executed query's results","interface"],["ConnPrepareContext","ConnPrepareContext enhances the Conn interface with context","interface"],["RowsColumnTypePrecisionScale","RowsColumnTypePrecisionScale may be implemented by Rows","interface"],["ValueConverter","ValueConverter is the interface providing the ConvertValue method","interface"],["Valuer","Valuer is the interface providing the Value method","interface"],["QueryerContext","QueryerContext is an optional interface that may be implemented by a Conn","interface"],["Connector","A Connector represents a driver in a fixed configurationand can create any number of equivalent Conns for useby multiple goroutines","interface"],["IsolationLevel","IsolationLevel is the transaction isolation level stored in TxOptions","other"],["StmtQueryContext","StmtQueryContext enhances the Stmt interface by providing Query with context","interface"],["IsValue","IsValue reports whether v is a valid Value parameter type","func"],["TxOptions","TxOptions holds the transaction options","struct"],["Execer","Execer is an optional interface that may be implemented by a Conn","interface"],["NamedValueChecker","NamedValueChecker may be optionally implemented by Conn or Stmt","interface"],["ColumnConverter","ColumnConverter may be optionally implemented by Stmt if thestatement is aware of its own columns' types and can convert fromany type to a driver Value","interface"],["RowsColumnTypeLength","RowsColumnTypeLength may be implemented by Rows","interface"],["Conn","Conn is a connection to a database","interface"],["IsScanValue","IsScanValue is equivalent to IsValue","func"],["Result","Result is the result of a query execution","interface"],["Driver","Driver is the interface that must be implemented by a databasedriver","interface"],["SessionResetter","SessionResetter may be implemented by Conn to allow drivers to reset thesession state associated with the connection and to signal a bad connection","interface"]],"math/rand":[["math/rand","Package rand implements pseudo-random number generators","package"],["Int31","Int31 returns a non-negative pseudo-random 31-bit integer as an int32from the default Source","func"],["Int","Int returns a non-negative pseudo-random int from the default Source","func"],["ExpFloat64","ExpFloat64 returns an exponentially distributed float64 in the range(0, +math.MaxFloat64] with an exponential distribution whose rate parameter(lambda) is 1 and whose mean is 1/lambda (1) from the default Source","func"],["Rand","A Rand is a source of random numbers","struct"],["Rand.Uint32","Uint32 returns a pseudo-random 32-bit value as a uint32","func"],["Rand.Int31","Int31 returns a non-negative pseudo-random 31-bit integer as an int32","func"],["Rand.Int","Int returns a non-negative pseudo-random int","func"],["Rand.Read","Read generates len(p) random bytes and writes them into p","func"],["Read","Read generates len(p) random bytes from the default Source andwrites them into p","func"],["Zipf","A Zipf generates Zipf distributed variates","struct"],["Float64","Float64 returns, as a float64, a pseudo-random number in [0.0,1.0)from the default Source","func"],["NewSource","NewSource returns a new pseudo-random Source seeded with the given value","func"],["Source64","A Source64 is a Source that can also generateuniformly-distributed pseudo-random uint64 values inthe range [0, 1<<64) directly","interface"],["Uint32","Uint32 returns a pseudo-random 32-bit value as a uint32from the default Source","func"],["Rand.Float64","Float64 returns, as a float64, a pseudo-random number in [0.0,1.0)","func"],["New","New returns a new Rand that uses random values from srcto generate other random values","func"],["Float32","Float32 returns, as a float32, a pseudo-random number in [0.0,1.0)from the default Source","func"],["Rand.Perm","Perm returns, as a slice of n ints, a pseudo-random permutation of the integers [0,n)","func"],["Int31n","Int31n returns, as an int32, a non-negative pseudo-random number in [0,n)from the default Source","func"],["Int63n","Int63n returns, as an int64, a non-negative pseudo-random number in [0,n)from the default Source","func"],["Shuffle","Shuffle pseudo-randomizes the order of elements using the default Source","func"],["Source","A Source represents a source of uniformly-distributedpseudo-random int64 values in the range [0, 1<<63)","interface"],["Rand.Intn","Intn returns, as an int, a non-negative pseudo-random number in [0,n)","func"],["Rand.Seed","Seed uses the provided seed value to initialize the generator to a deterministic state","func"],["Zipf.Uint64","Uint64 returns a value drawn from the Zipf distribution describedby the Zipf object","func"],["Seed","Seed uses the provided seed value to initialize the default Source to adeterministic state","func"],["Rand.Uint64","Uint64 returns a pseudo-random 64-bit value as a uint64","func"],["Rand.Shuffle","Shuffle pseudo-randomizes the order of elements","func"],["Int63","Int63 returns a non-negative pseudo-random 63-bit integer as an int64from the default Source","func"],["NormFloat64","NormFloat64 returns a normally distributed float64 in the range[-math.MaxFloat64, +math.MaxFloat64] withstandard normal distribution (mean = 0, stddev = 1)from the default Source","func"],["Intn","Intn returns, as an int, a non-negative pseudo-random number in [0,n)from the default Source","func"],["Rand.Float32","Float32 returns, as a float32, a pseudo-random number in [0.0,1.0)","func"],["Uint64","Uint64 returns a pseudo-random 64-bit value as a uint64from the default Source","func"],["Perm","Perm returns, as a slice of n ints, a pseudo-random permutation of the integers [0,n)from the default Source","func"],["Rand.Int31n","Int31n returns, as an int32, a non-negative pseudo-random number in [0,n)","func"],["NewZipf","NewZipf returns a Zipf variate generator","func"],["Rand.Int63n","Int63n returns, as an int64, a non-negative pseudo-random number in [0,n)","func"],["Rand.NormFloat64","NormFloat64 returns a normally distributed float64 inthe range -math.MaxFloat64 through +math.MaxFloat64 inclusive,with standard normal distribution (mean = 0, stddev = 1)","func"],["Rand.ExpFloat64","ExpFloat64 returns an exponentially distributed float64 in the range(0, +math.MaxFloat64] with an exponential distribution whose rate parameter(lambda) is 1 and whose mean is 1/lambda (1)","func"],["Rand.Int63","Int63 returns a non-negative pseudo-random 63-bit integer as an int64","func"]],"crypto/rc4":[["crypto/rc4","Package rc4 implements RC4 encryption, as defined in Bruce Schneier'sApplied Cryptography","package"],["KeySizeError","","other"],["NewCipher","NewCipher creates and returns a new Cipher","func"],["Cipher.Reset","Reset zeros the key data and makes the Cipher unusable","func"],["Cipher","A Cipher is an instance of RC4 using a particular key","struct"],["Cipher.XORKeyStream","XORKeyStream sets dst to the result of XORing src with the key stream","func"]],"debug/gosym":[["debug/gosym","Package gosym implements access to the Go symboland line number tables embedded in Go binaries generatedby the gc compilers","package"],["NewTable","NewTable decodes the Go symbol table (the \".gosymtab\" section in ELF),returning an in-memory representation","func"],["Table","Table represents a Go symbol table","struct"],["Table.LookupSym","LookupSym returns the text, data, or bss symbol with the given name,or nil if no such symbol is found","func"],["Table.LineToPC","LineToPC looks up the first program counter on the given line inthe named file","func"],["DecodingError","DecodingError represents an error during the decoding ofthe symbol table","struct"],["LineTable.PCToLine","PCToLine returns the line number for the given program counter","func"],["LineTable.LineToPC","LineToPC returns the program counter for the given line number,considering only program counters before maxpc","func"],["NewLineTable","NewLineTable returns a new PC/line tablecorresponding to the encoded data","func"],["Sym.ReceiverName","ReceiverName returns the receiver type name of this symbol,or the empty string if there is none","func"],["Sym.PackageName","PackageName returns the package part of the symbol name,or the empty string if there is none","func"],["Sym.Static","Static reports whether this symbol is static (not visible outside its file)","func"],["LineTable","A LineTable is a data structure mapping program counters to line numbers","struct"],["Table.LookupFunc","LookupFunc returns the text, data, or bss symbol with the given name,or nil if no such symbol is found","func"],["Table.PCToFunc","PCToFunc returns the function containing the program counter pc,or nil if there is no such function","func"],["Table.SymByAddr","SymByAddr returns the text, data, or bss symbol starting at the given address","func"],["Func","A Func collects information about a single function","struct"],["UnknownLineError","UnknownLineError represents a failure to map a line to a programcounter, either because the line is beyond the bounds of the fileor because there is no code on the given line","struct"],["UnknownFileError","UnknownFileError represents a failure to find the specific file inthe symbol table","other"],["Table.PCToLine","PCToLine looks up line number information for a program counter","func"],["Sym","A Sym represents a single symbol table entry","struct"],["Obj","An Obj represents a collection of functions in a symbol table","struct"],["Sym.BaseName","BaseName returns the symbol name without the package or receiver name","func"]],"io/ioutil":[["io/ioutil","Package ioutil implements some I/O utility functions","package"],["ReadAll","ReadAll reads from r until an error or EOF and returns the data it read","func"],["ReadDir","ReadDir reads the directory named by dirname and returnsa list of directory entries sorted by filename","func"],["NopCloser","NopCloser returns a ReadCloser with a no-op Close method wrappingthe provided Reader r","func"],["WriteFile","WriteFile writes data to a file named by filename","func"],["ReadFile","ReadFile reads the file named by filename and returns the contents","func"],["TempDir","TempDir creates a new temporary directory in the directory dirwith a name beginning with prefix and returns the path of thenew directory","func"],["TempFile","TempFile creates a new temporary file in the directory dir,opens the file for reading and writing, and returns the resulting *os.File","func"]],"fmt":[["fmt","Package fmt implements formatted I/O with functions analogousto C's printf and scanf","package"],["Fscanf","Fscanf scans text read from r, storing successive space-separatedvalues into successive arguments as determined by the format","func"],["Formatter","Formatter is the interface implemented by values with a custom formatter","interface"],["State","State represents the printer state passed to custom formatters","interface"],["ScanState","ScanState represents the scanner state passed to custom scanners","interface"],["Fprintf","Fprintf formats according to a format specifier and writes to w","func"],["Fprint","Fprint formats using the default formats for its operands and writes to w","func"],["Stringer","Stringer is implemented by any value that has a String method,which defines the “native” format for that value","interface"],["GoStringer","GoStringer is implemented by any value that has a GoString method,which defines the Go syntax for that value","interface"],["Errorf","Errorf formats according to a format specifier and returns the string as avalue that satisfies error","func"],["Scan","Scan scans text read from standard input, storing successivespace-separated values into successive arguments","func"],["Sprintf","Sprintf formats according to a format specifier and returns the resulting string","func"],["Fscanln","Fscanln is similar to Fscan, but stops scanning at a newline andafter the final item there must be a newline or EOF","func"],["Scanner","Scanner is implemented by any value that has a Scan method, which scansthe input for the representation of a value and stores the result in thereceiver, which must be a pointer to be useful","interface"],["Fscan","Fscan scans text read from r, storing successive space-separatedvalues into successive arguments","func"],["Sscanln","Sscanln is similar to Sscan, but stops scanning at a newline andafter the final item there must be a newline or EOF","func"],["Printf","Printf formats according to a format specifier and writes to standard output","func"],["Print","Print formats using the default formats for its operands and writes to standard output","func"],["Sprint","Sprint formats using the default formats for its operands and returns the resulting string","func"],["Sscanf","Sscanf scans the argument string, storing successive space-separatedvalues into successive arguments as determined by the format","func"],["Scanln","Scanln is similar to Scan, but stops scanning at a newline andafter the final item there must be a newline or EOF","func"],["Sscan","Sscan scans the argument string, storing successive space-separatedvalues into successive arguments","func"],["Println","Println formats using the default formats for its operands and writes to standard output","func"],["Scanf","Scanf scans text read from standard input, storing successivespace-separated values into successive arguments as determined bythe format","func"],["Fprintln","Fprintln formats using the default formats for its operands and writes to w","func"],["Sprintln","Sprintln formats using the default formats for its operands and returns the resulting string","func"]],"go/ast":[["go/ast","Package ast declares the types used to represent syntax trees for Gopackages","package"],["UnaryExpr","A UnaryExpr node represents a unary expression","struct"],["MapType","A MapType node represents a map type","struct"],["FilterFile","FilterFile trims the AST for a Go file in place by removing allnames from top-level declarations (including struct field andinterface method names, but not from parameter lists) that don'tpass through the filter f","func"],["NotNilFilter","NotNilFilter returns true for field values that are not nil;it returns false otherwise","func"],["SelectStmt","An SelectStmt node represents a select statement","struct"],["BinaryExpr","A BinaryExpr node represents a binary expression","struct"],["Ident","An Ident node represents an identifier","struct"],["SelectorExpr","A SelectorExpr node represents an expression followed by a selector","struct"],["Ellipsis","An Ellipsis node stands for the \"...\" type in aparameter list or the \"...\" length in an array type","struct"],["BadStmt","A BadStmt node is a placeholder for statements containingsyntax errors for which no correct statement nodes can becreated","struct"],["Scope","A Scope maintains the set of named language entities declaredin the scope and a link to the immediately surrounding (outer)scope","struct"],["CommentGroup.Text","Text returns the text of the comment","func"],["Inspect","Inspect traverses an AST in depth-first order: It starts by callingf(node); node must not be nil","func"],["TypeAssertExpr","A TypeAssertExpr node represents an expression followed by atype assertion","struct"],["Scope.Insert","Insert attempts to insert a named object obj into the scope s","func"],["CallExpr","A CallExpr node represents an expression followed by an argument list","struct"],["IfStmt","An IfStmt node represents an if statement","struct"],["BadDecl","A BadDecl node is a placeholder for declarations containingsyntax errors for which no correct declaration nodes can becreated","struct"],["FieldList.NumFields","NumFields returns the number of parameters or struct fields represented by a FieldList","func"],["RangeStmt","A RangeStmt represents a for statement with a range clause","struct"],["BlockStmt","A BlockStmt node represents a braced statement list","struct"],["CompositeLit","A CompositeLit node represents a composite literal","struct"],["FilterPackage","FilterPackage trims the AST for a Go package in place by removingall names from top-level declarations (including struct field andinterface method names, but not from parameter lists) that don'tpass through the filter f","func"],["CommClause","A CommClause node represents a case of a select statement","struct"],["ValueSpec","A ValueSpec node represents a constant or variable declaration(ConstSpec or VarSpec production)","struct"],["Filter","","other"],["ReturnStmt","A ReturnStmt node represents a return statement","struct"],["BadExpr","A BadExpr node is a placeholder for expressions containingsyntax errors for which no correct expression nodes can becreated","struct"],["ExprStmt","An ExprStmt node represents a (stand-alone) expressionin a statement list","struct"],["FilterDecl","FilterDecl trims the AST for a Go declaration in place by removingall names (including struct field and interface method names, butnot from parameter lists) that don't pass through the filter f","func"],["NewScope","NewScope creates a new scope nested in the outer scope","func"],["NewObj","NewObj creates a new object of a given kind and name","func"],["Visitor","A Visitor's Visit method is invoked for each node encountered by Walk","interface"],["CommentMap.Filter","Filter returns a new comment map consisting of only thoseentries of cmap for which a corresponding node exists inthe AST specified by node","func"],["MergePackageFiles","MergePackageFiles creates a file AST by merging the ASTs of thefiles belonging to a package","func"],["EmptyStmt","An EmptyStmt node represents an empty statement","struct"],["File","A File node represents a Go source file","struct"],["AssignStmt","An AssignStmt node represents an assignment ora short variable declaration","struct"],["CaseClause","A CaseClause represents a case of an expression or type switch statement","struct"],["ArrayType","An ArrayType node represents an array or slice type","struct"],["SendStmt","A SendStmt node represents a send statement","struct"],["NewCommentMap","NewCommentMap creates a new comment map by associating comment groupsof the comments list with the nodes of the AST specified by node","func"],["Spec","The Spec type stands for any of *ImportSpec, *ValueSpec, and *TypeSpec","interface"],["Field","A Field represents a Field declaration list in a struct type,a method list in an interface type, or a parameter/result declarationin a signature","struct"],["DeferStmt","A DeferStmt node represents a defer statement","struct"],["GoStmt","A GoStmt node represents a go statement","struct"],["CommentMap.Comments","Comments returns the list of comment groups in the comment map","func"],["DeclStmt","A DeclStmt node represents a declaration in a statement list","struct"],["NewPackage","NewPackage creates a new Package node from a set of File nodes","func"],["ForStmt","A ForStmt represents a for statement","struct"],["Decl","All declaration nodes implement the Decl interface","interface"],["BranchStmt","A BranchStmt node represents a break, continue, goto,or fallthrough statement","struct"],["ParenExpr","A ParenExpr node represents a parenthesized expression","struct"],["FuncType","A FuncType node represents a function type","struct"],["Scope.String","Debugging support","func"],["PackageExports","PackageExports trims the AST for a Go package in place such thatonly exported nodes remain","func"],["TypeSpec","A TypeSpec node represents a type declaration (TypeSpec production)","struct"],["ImportSpec","An ImportSpec node represents a single package import","struct"],["ObjKind","ObjKind describes what an object represents","other"],["Expr","All expression nodes implement the Expr interface","interface"],["InterfaceType","An InterfaceType node represents an interface type","struct"],["IncDecStmt","An IncDecStmt node represents an increment or decrement statement","struct"],["MergeMode","The MergeMode flags control the behavior of MergePackageFiles","other"],["Object.Pos","Pos computes the source position of the declaration of an object name","func"],["FieldFilter","A FieldFilter may be provided to Fprint to control the output","other"],["SliceExpr","An SliceExpr node represents an expression followed by slice indices","struct"],["Scope.Lookup","Lookup returns the object with the given name if it isfound in scope s, otherwise it returns nil","func"],["CommentMap","A CommentMap maps an AST node to a list of comment groupsassociated with it","other"],["IsExported","IsExported reports whether name starts with an upper-case letter","func"],["Print","Print prints x to standard output, skipping nil fields","func"],["IndexExpr","An IndexExpr node represents an expression followed by an index","struct"],["Ident.IsExported","IsExported reports whether id starts with an upper-case letter","func"],["Stmt","All statement nodes implement the Stmt interface","interface"],["ChanType","A ChanType node represents a channel type","struct"],["BasicLit","A BasicLit node represents a literal of basic type","struct"],["FuncDecl","A FuncDecl node represents a function declaration","struct"],["Object","An Object describes a named language entity such as a package,constant, type, variable, function (incl","struct"],["ChanDir","The direction of a channel type is indicated by a bitmask including one or both of the following constants","other"],["KeyValueExpr","A KeyValueExpr node represents (key : value) pairsin composite literals","struct"],["GenDecl","A GenDecl node (generic declaration node) represents an import,constant, type or variable declaration","struct"],["LabeledStmt","A LabeledStmt node represents a labeled statement","struct"],["FileExports","FileExports trims the AST for a Go source file in place such thatonly exported nodes remain: all top-level identifiers which are not exportedand their associated information (such as type, initial value, or functionbody) are removed","func"],["Importer","An Importer resolves import paths to package Objects","other"],["Node","All node types implement the Node interface","interface"],["TypeSwitchStmt","An TypeSwitchStmt node represents a type switch statement","struct"],["FieldList","A FieldList represents a list of Fields, enclosed by parentheses or braces","struct"],["SwitchStmt","A SwitchStmt node represents an expression switch statement","struct"],["Comment","A Comment node represents a single //-style or /*-style comment","struct"],["FuncLit","A FuncLit node represents a function literal","struct"],["StarExpr","A StarExpr node represents an expression of the form \"*\" Expression","struct"],["SortImports","SortImports sorts runs of consecutive import lines in import blocks in f","func"],["Fprint","Fprint prints the (sub-)tree starting at AST node x to w","func"],["Package","A Package node represents a set of source filescollectively building a Go package","struct"],["StructType","A StructType node represents a struct type","struct"],["Walk","Walk traverses an AST in depth-first order: It starts by callingv.Visit(node); node must not be nil","func"],["CommentMap.Update","Update replaces an old node in the comment map with the new nodeand returns the new node","func"],["CommentGroup","A CommentGroup represents a sequence of commentswith no other tokens and no empty lines between","struct"],["NewIdent","NewIdent creates a new Ident without position","func"]],"compress/flate":[["compress/flate","Package flate implements the DEFLATE compressed data format, described inRFC 1951","package"],["NewWriter","NewWriter returns a new Writer compressing data at the given level","func"],["ReadError","A ReadError reports an error encountered while reading input","struct"],["NewReader","NewReader returns a new ReadCloser that can be usedto read the uncompressed version of r","func"],["NewReaderDict","NewReaderDict is like NewReader but initializes the readerwith a preset dictionary","func"],["Writer.Close","Close flushes and closes the writer","func"],["Reader","The actual read interface needed by NewReader","interface"],["Writer.Reset","Reset discards the writer's state and makes it equivalent tothe result of NewWriter or NewWriterDict called with dstand w's level and dictionary","func"],["Writer.Flush","Flush flushes any pending data to the underlying writer","func"],["Writer","A Writer takes data written to it and writes the compressedform of that data to an underlying writer (see NewWriter)","struct"],["Resetter","Resetter resets a ReadCloser returned by NewReader or NewReaderDictto switch to a new underlying Reader","interface"],["Writer.Write","Write writes data to w, which will eventually write thecompressed form of data to its underlying writer","func"],["CorruptInputError","A CorruptInputError reports the presence of corrupt input at a given offset","other"],["WriteError","A WriteError reports an error encountered while writing output","struct"],["NewWriterDict","NewWriterDict is like NewWriter but initializes the newWriter with a preset dictionary","func"],["InternalError","An InternalError reports an error in the flate code itself","other"]],"net/url":[["net/url","Package url parses URLs and implements query escaping","package"],["URL.Parse","Parse parses a URL in the context of the receiver","func"],["Values.Encode","Encode encodes the values into “URL encoded” form(\"bar=baz&foo=quux\") sorted by key","func"],["URL.IsAbs","IsAbs reports whether the URL is absolute","func"],["PathUnescape","PathUnescape does the inverse transformation of PathEscape,converting each 3-byte encoded substring of the form \"%AB\" into thehex-decoded byte 0xAB","func"],["URL.String","String reassembles the URL into a valid URL string","func"],["URL.Hostname","Hostname returns u.Host, stripping any valid port number if present","func"],["URL","A URL represents a parsed URL (technically, a URI reference)","struct"],["QueryUnescape","QueryUnescape does the inverse transformation of QueryEscape,converting each 3-byte encoded substring of the form \"%AB\" into thehex-decoded byte 0xAB","func"],["Parse","Parse parses rawurl into a URL structure","func"],["EscapeError","","other"],["Userinfo.Password","Password returns the password in case it is set, and whether it is set","func"],["UserPassword","UserPassword returns a Userinfo containing the provided usernameand password","func"],["URL.Port","Port returns the port part of u.Host, without the leading colon","func"],["URL.RequestURI","RequestURI returns the encoded path?query or opaque?querystring that would be used in an HTTP request for u","func"],["Values.Set","Set sets the key to value","func"],["Values.Get","Get gets the first value associated with the given key","func"],["ParseRequestURI","ParseRequestURI parses rawurl into a URL structure","func"],["Userinfo.String","String returns the encoded userinfo information in the standard formof \"username[:password]\"","func"],["URL.EscapedPath","EscapedPath returns the escaped form of u.Path","func"],["InvalidHostError","","other"],["URL.ResolveReference","ResolveReference resolves a URI reference to an absolute URI froman absolute base URI u, per RFC 3986 Section 5.2","func"],["QueryEscape","QueryEscape escapes the string so it can be safely placedinside a URL query","func"],["URL.Query","Query parses RawQuery and returns the corresponding values","func"],["Userinfo","The Userinfo type is an immutable encapsulation of username andpassword details for a URL","struct"],["Error","Error reports an error and the operation and URL that caused it","struct"],["PathEscape","PathEscape escapes the string so it can be safely placed inside a URL path segment,replacing special characters (including /) with %XX sequences as needed","func"],["Values.Add","Add adds the value to key","func"],["User","User returns a Userinfo containing the provided usernameand no password set","func"],["Values.Del","Del deletes the values associated with key","func"],["Values","Values maps a string key to a list of values","other"],["ParseQuery","ParseQuery parses the URL-encoded query string and returnsa map listing the values specified for each key","func"],["Userinfo.Username","Username returns the username","func"]],"net/rpc/jsonrpc":[["net/rpc/jsonrpc","Package jsonrpc implements a JSON-RPC 1.0 ClientCodec and ServerCodecfor the rpc package","package"],["ServeConn","ServeConn runs the JSON-RPC server on a single connection","func"],["NewServerCodec","NewServerCodec returns a new rpc.ServerCodec using JSON-RPC on conn","func"],["Dial","Dial connects to a JSON-RPC server at the specified network address","func"],["NewClientCodec","NewClientCodec returns a new rpc.ClientCodec using JSON-RPC on conn","func"],["NewClient","NewClient returns a new rpc.Client to handle requests to theset of services at the other end of the connection","func"]],"unicode/utf16":[["unicode/utf16","Package utf16 implements encoding and decoding of UTF-16 sequences","package"],["EncodeRune","EncodeRune returns the UTF-16 surrogate pair r1, r2 for the given rune","func"],["DecodeRune","DecodeRune returns the UTF-16 decoding of a surrogate pair","func"],["Decode","Decode returns the Unicode code point sequence representedby the UTF-16 encoding s","func"],["IsSurrogate","IsSurrogate reports whether the specified Unicode code pointcan appear in a surrogate pair","func"],["Encode","Encode returns the UTF-16 encoding of the Unicode code point sequence s","func"]],"compress/bzip2":[["compress/bzip2","Package bzip2 implements bzip2 decompression","package"],["StructuralError","A StructuralError is returned when the bzip2 data is found to besyntactically invalid","other"],["NewReader","NewReader returns an io.Reader which decompresses bzip2 data from r","func"]],"text/template/parse":[["text/template/parse","Package parse builds parse trees for templates as defined by text/templateand html/template","package"],["Tree.Copy","Copy returns a copy of the Tree","func"],["IdentifierNode.SetPos","SetPos sets the position","func"],["StringNode","StringNode holds a string constant","struct"],["ActionNode","ActionNode holds an action (something bounded by delimiters)","struct"],["WithNode","WithNode represents a {{with}} action and its commands","struct"],["NumberNode","NumberNode holds a number: signed or unsigned integer, float, or complex","struct"],["DotNode","DotNode holds the special identifier '.'","struct"],["IfNode","IfNode represents an {{if}} action and its commands","struct"],["CommandNode","CommandNode holds a command (a pipeline inside an evaluating action)","struct"],["IdentifierNode.SetTree","SetTree sets the parent tree for the node","func"],["RangeNode","RangeNode represents a {{range}} action and its commands","struct"],["Tree","Tree is the representation of a single parsed template","struct"],["New","New allocates a new parse tree with the given name","func"],["NodeType.Type","Type returns itself and provides an easy default implementationfor embedding in a Node","func"],["NodeType","NodeType identifies the type of a parse tree node","other"],["ChainNode","ChainNode holds a term followed by a chain of field accesses (identifier starting with '.')","struct"],["PipeNode","PipeNode holds a pipeline with optional declaration","struct"],["TextNode","TextNode holds plain text","struct"],["FieldNode","FieldNode holds a field (identifier starting with '.')","struct"],["NilNode","NilNode holds the special identifier 'nil' representing an untyped nil constant","struct"],["VariableNode","AssignNode holds a list of variable names, possibly with chained fieldaccesses","struct"],["Tree.ErrorContext","ErrorContext returns a textual representation of the location of the node in the input text","func"],["NewIdentifier","NewIdentifier returns a new IdentifierNode with the given identifier name","func"],["BoolNode","BoolNode holds a boolean constant","struct"],["Node","A Node is an element in the parse tree","interface"],["Pos","Pos represents a byte position in the original input text from whichthis template was parsed","other"],["TemplateNode","TemplateNode represents a {{template}} action","struct"],["ChainNode.Add","Add adds the named field (which should start with a period) to the end of the chain","func"],["Parse","Parse returns a map from template name to parse.Tree, created by parsing thetemplates described in the argument string","func"],["IdentifierNode","IdentifierNode holds an identifier","struct"],["ListNode","ListNode holds a sequence of nodes","struct"],["IsEmptyTree","IsEmptyTree reports whether this tree (node) is empty of everything but space","func"],["BranchNode","BranchNode is the common representation of if, range, and with","struct"],["Tree.Parse","Parse parses the template definition string to construct a representation ofthe template for execution","func"]],"bytes":[["bytes","Package bytes implements functions for the manipulation of byte slices","package"],["EqualFold","EqualFold reports whether s and t, interpreted as UTF-8 strings,are equal under Unicode case-folding","func"],["Reader.WriteTo","WriteTo implements the io.WriterTo interface","func"],["ContainsRune","ContainsRune reports whether the rune is contained in the UTF-8-encoded byte slice b","func"],["ContainsAny","ContainsAny reports whether any of the UTF-8-encoded code points in chars are within b","func"],["LastIndexAny","LastIndexAny interprets s as a sequence of UTF-8-encoded Unicode codepoints","func"],["FieldsFunc","FieldsFunc interprets s as a sequence of UTF-8-encoded code points","func"],["Reader.UnreadRune","UnreadRune complements ReadRune in implementing the io.RuneScanner interface","func"],["NewBufferString","NewBufferString creates and initializes a new Buffer using string s as itsinitial contents","func"],["Buffer.UnreadRune","UnreadRune unreads the last rune returned by ReadRune","func"],["LastIndexByte","LastIndexByte returns the index of the last instance of c in s, or -1 if c is not present in s","func"],["Buffer.String","String returns the contents of the unread portion of the bufferas a string","func"],["Buffer.WriteTo","WriteTo writes data to w until the buffer is drained or an error occurs","func"],["Buffer.Grow","Grow grows the buffer's capacity, if necessary, to guarantee space foranother n bytes","func"],["Buffer.Bytes","Bytes returns a slice of length b.Len() holding the unread portion of the buffer","func"],["TrimPrefix","TrimPrefix returns s without the provided leading prefix string","func"],["Reader.UnreadByte","UnreadByte complements ReadByte in implementing the io.ByteScanner interface","func"],["IndexRune","IndexRune interprets s as a sequence of UTF-8-encoded code points","func"],["TrimRight","TrimRight returns a subslice of s by slicing off all trailingUTF-8-encoded code points that are contained in cutset","func"],["LastIndexFunc","LastIndexFunc interprets s as a sequence of UTF-8-encoded code points","func"],["IndexFunc","IndexFunc interprets s as a sequence of UTF-8-encoded code points","func"],["Buffer.WriteString","WriteString appends the contents of s to the buffer, growing the buffer asneeded","func"],["Buffer.Truncate","Truncate discards all but the first n unread bytes from the bufferbut continues to use the same allocated storage","func"],["Contains","Contains reports whether subslice is within b","func"],["Join","Join concatenates the elements of s to create a new byte slice","func"],["Reader.Len","Len returns the number of bytes of the unread portion of theslice","func"],["Buffer.Write","Write appends the contents of p to the buffer, growing the buffer asneeded","func"],["ToTitle","ToTitle treats s as UTF-8-encoded bytes and returns a copy with all the Unicode letters mapped to their title case","func"],["Reader","A Reader implements the io.Reader, io.ReaderAt, io.WriterTo, io.Seeker,io.ByteScanner, and io.RuneScanner interfaces by reading froma byte slice","struct"],["HasSuffix","HasSuffix tests whether the byte slice s ends with suffix","func"],["Compare","Compare returns an integer comparing two byte slices lexicographically","func"],["Reader.ReadAt","ReadAt implements the io.ReaderAt interface","func"],["HasPrefix","HasPrefix tests whether the byte slice s begins with prefix","func"],["Buffer.WriteRune","WriteRune appends the UTF-8 encoding of Unicode code point r to thebuffer, returning its length and an error, which is always nil but isincluded to match bufio.Writer's WriteRune","func"],["TrimRightFunc","TrimRightFunc returns a subslice of s by slicing off all trailingUTF-8-encoded code points c that satisfy f(c)","func"],["ReplaceAll","ReplaceAll returns a copy of the slice s with allnon-overlapping instances of old replaced by new","func"],["Buffer.ReadRune","ReadRune reads and returns the next UTF-8-encodedUnicode code point from the buffer","func"],["SplitAfterN","SplitAfterN slices s into subslices after each instance of sep andreturns a slice of those subslices","func"],["ToValidUTF8","ToValidUTF8 treats s as UTF-8-encoded bytes and returns a copy with each run of bytesrepresenting invalid UTF-8 replaced with the bytes in replacement, which may be empty","func"],["TrimFunc","TrimFunc returns a subslice of s by slicing off all leading and trailingUTF-8-encoded code points c that satisfy f(c)","func"],["Reader.Size","Size returns the original length of the underlying byte slice","func"],["Reader.Reset","Reset resets the Reader to be reading from b","func"],["LastIndex","LastIndex returns the index of the last instance of sep in s, or -1 if sep is not present in s","func"],["Buffer","A Buffer is a variable-sized buffer of bytes with Read and Write methods","struct"],["Buffer.ReadBytes","ReadBytes reads until the first occurrence of delim in the input,returning a slice containing the data up to and including the delimiter","func"],["Replace","Replace returns a copy of the slice s with the first nnon-overlapping instances of old replaced by new","func"],["TrimSpace","TrimSpace returns a subslice of s by slicing off all leading andtrailing white space, as defined by Unicode","func"],["Map","Map returns a copy of the byte slice s with all its characters modifiedaccording to the mapping function","func"],["ToUpper","ToUpper returns a copy of the byte slice s with all Unicode letters mapped totheir upper case","func"],["Buffer.Read","Read reads the next len(p) bytes from the buffer or until the bufferis drained","func"],["Reader.Read","Read implements the io.Reader interface","func"],["TrimLeftFunc","TrimLeftFunc treats s as UTF-8-encoded bytes and returns a subslice of s by slicing offall leading UTF-8-encoded code points c that satisfy f(c)","func"],["Buffer.Len","Len returns the number of bytes of the unread portion of the buffer;b.Len() == len(b.Bytes())","func"],["SplitAfter","SplitAfter slices s into all subslices after each instance of sep andreturns a slice of those subslices","func"],["Buffer.ReadFrom","ReadFrom reads data from r until EOF and appends it to the buffer, growingthe buffer as needed","func"],["Title","Title treats s as UTF-8-encoded bytes and returns a copy with all Unicode letters that beginwords mapped to their title case","func"],["Index","Index returns the index of the first instance of sep in s, or -1 if sep is not present in s","func"],["SplitN","SplitN slices s into subslices separated by sep and returns a slice ofthe subslices between those separators","func"],["Buffer.ReadString","ReadString reads until the first occurrence of delim in the input,returning a string containing the data up to and including the delimiter","func"],["Buffer.UnreadByte","UnreadByte unreads the last byte returned by the most recent successfulread operation that read at least one byte","func"],["Count","Count counts the number of non-overlapping instances of sep in s","func"],["Reader.Seek","Seek implements the io.Seeker interface","func"],["TrimSuffix","TrimSuffix returns s without the provided trailing suffix string","func"],["Equal","Equal reports whether a and bare the same length and contain the same bytes","func"],["Repeat","Repeat returns a new byte slice consisting of count copies of b","func"],["TrimLeft","TrimLeft returns a subslice of s by slicing off all leadingUTF-8-encoded code points contained in cutset","func"],["Split","Split slices s into all subslices separated by sep and returns a slice ofthe subslices between those separators","func"],["Fields","Fields interprets s as a sequence of UTF-8-encoded code points","func"],["Buffer.WriteByte","WriteByte appends the byte c to the buffer, growing the buffer as needed","func"],["ToTitleSpecial","ToTitleSpecial treats s as UTF-8-encoded bytes and returns a copy with all the Unicode letters mapped to theirtitle case, giving priority to the special casing rules","func"],["Buffer.Reset","Reset resets the buffer to be empty,but it retains the underlying storage for use by future writes","func"],["Trim","Trim returns a subslice of s by slicing off all leading andtrailing UTF-8-encoded code points contained in cutset","func"],["NewReader","NewReader returns a new Reader reading from b","func"],["Reader.ReadRune","ReadRune implements the io.RuneReader interface","func"],["IndexByte","IndexByte returns the index of the first instance of c in b, or -1 if c is not present in b","func"],["ToLowerSpecial","ToLowerSpecial treats s as UTF-8-encoded bytes and returns a copy with all the Unicode letters mapped to theirlower case, giving priority to the special casing rules","func"],["IndexAny","IndexAny interprets s as a sequence of UTF-8-encoded Unicode code points","func"],["ToLower","ToLower returns a copy of the byte slice s with all Unicode letters mapped totheir lower case","func"],["NewBuffer","NewBuffer creates and initializes a new Buffer using buf as itsinitial contents","func"],["Buffer.ReadByte","ReadByte reads and returns the next byte from the buffer","func"],["Reader.ReadByte","ReadByte implements the io.ByteReader interface","func"],["Buffer.Cap","Cap returns the capacity of the buffer's underlying byte slice, that is, thetotal space allocated for the buffer's data","func"],["Runes","Runes interprets s as a sequence of UTF-8-encoded code points","func"],["ToUpperSpecial","ToUpperSpecial treats s as UTF-8-encoded bytes and returns a copy with all the Unicode letters mapped to theirupper case, giving priority to the special casing rules","func"],["Buffer.Next","Next returns a slice containing the next n bytes from the buffer,advancing the buffer as if the bytes had been returned by Read","func"]],"debug/pe":[["debug/pe","Package pe implements access to PE (Microsoft Windows Portable Executable) files","package"],["Open","Open opens the named file using os.Open and prepares it for use as a PE binary","func"],["Section","Section provides access to PE COFF section","struct"],["Section.Data","Data reads and returns the contents of the PE section s","func"],["OptionalHeader32","","struct"],["COFFSymbol","COFFSymbol represents single COFF symbol table record","struct"],["File.ImportedSymbols","ImportedSymbols returns the names of all symbolsreferred to by the binary f that are expected to besatisfied by other libraries at dynamic load time","func"],["StringTable","StringTable is a COFF string table","other"],["FileHeader","","struct"],["COFFSymbol.FullName","FullName finds real name of symbol sym","func"],["SectionHeader","SectionHeader is similar to SectionHeader32 with Namefield replaced by Go string","struct"],["OptionalHeader64","","struct"],["File.Section","Section returns the first section with the given name, or nil if no suchsection exists","func"],["NewFile","NewFile creates a new File for accessing a PE binary in an underlying reader","func"],["FormatError","FormatError is unused","struct"],["Reloc","Reloc represents a PE COFF relocation","struct"],["DataDirectory","","struct"],["StringTable.String","String extracts string from COFF string table st at offset start","func"],["File.Close","Close closes the File","func"],["Section.Open","Open returns a new ReadSeeker reading the PE section s","func"],["File","A File represents an open PE file","struct"],["SectionHeader32","SectionHeader32 represents real PE COFF section header","struct"],["Symbol","Symbol is similar to COFFSymbol with Name field replacedby Go string","struct"],["File.ImportedLibraries","ImportedLibraries returns the names of all librariesreferred to by the binary f that are expected to belinked with the binary at dynamic link time","func"],["ImportDirectory","","struct"]],"sync":[["sync","Package sync provides basic synchronization primitives such as mutualexclusion locks","package"],["Map.Range","Range calls f sequentially for each key and value present in the map","func"],["Map.LoadOrStore","LoadOrStore returns the existing value for the key if present","func"],["Map","Map is like a Go map[interface{}]interface{} but is safe for concurrent useby multiple goroutines without additional locking or coordination","struct"],["Mutex","A Mutex is a mutual exclusion lock","struct"],["Map.Delete","Delete deletes the value for a key","func"],["Once.Do","Do calls the function f if and only if Do is being called for thefirst time for this instance of Once","func"],["Once","Once is an object that will perform exactly one action","struct"],["RWMutex","A RWMutex is a reader/writer mutual exclusion lock","struct"],["RWMutex.RLocker","RLocker returns a Locker interface that implementsthe Lock and Unlock methods by calling rw.RLock and rw.RUnlock","func"],["Pool.Put","Put adds x to the pool","func"],["WaitGroup","A WaitGroup waits for a collection of goroutines to finish","struct"],["Mutex.Lock","Lock locks m","func"],["RWMutex.Lock","Lock locks rw for writing","func"],["RWMutex.Unlock","Unlock unlocks rw for writing","func"],["NewCond","NewCond returns a new Cond with Locker l","func"],["Pool.Get","Get selects an arbitrary item from the Pool, removes it from thePool, and returns it to the caller","func"],["Map.Load","Load returns the value stored in the map for a key, or nil if novalue is present","func"],["WaitGroup.Wait","Wait blocks until the WaitGroup counter is zero","func"],["Pool","A Pool is a set of temporary objects that may be individually saved andretrieved","struct"],["RWMutex.RLock","RLock locks rw for reading","func"],["Locker","A Locker represents an object that can be locked and unlocked","interface"],["Cond.Signal","Signal wakes one goroutine waiting on c, if there is any","func"],["WaitGroup.Add","Add adds delta, which may be negative, to the WaitGroup counter","func"],["Cond.Broadcast","Broadcast wakes all goroutines waiting on c","func"],["Mutex.Unlock","Unlock unlocks m","func"],["RWMutex.RUnlock","RUnlock undoes a single RLock call;it does not affect other simultaneous readers","func"],["WaitGroup.Done","Done decrements the WaitGroup counter by one","func"],["Map.Store","Store sets the value for a key","func"],["Cond.Wait","Wait atomically unlocks c.L and suspends executionof the calling goroutine","func"],["Cond","Cond implements a condition variable, a rendezvous pointfor goroutines waiting for or announcing the occurrenceof an event","struct"]],"encoding/binary":[["encoding/binary","Package binary implements simple translation between numbers and bytesequences and encoding and decoding of varints","package"],["Size","Size returns how many bytes Write would generate to encode the value v, whichmust be a fixed-size value or a slice of fixed-size values, or a pointer to such data","func"],["Uvarint","Uvarint decodes a uint64 from buf and returns that value and thenumber of bytes read (> 0)","func"],["ByteOrder","A ByteOrder specifies how to convert byte sequences into16-, 32-, or 64-bit unsigned integers","interface"],["ReadVarint","ReadVarint reads an encoded signed integer from r and returns it as an int64","func"],["Read","Read reads structured binary data from r into data","func"],["PutUvarint","PutUvarint encodes a uint64 into buf and returns the number of bytes written","func"],["Write","Write writes the binary representation of data into w","func"],["PutVarint","PutVarint encodes an int64 into buf and returns the number of bytes written","func"],["Varint","Varint decodes an int64 from buf and returns that value and thenumber of bytes read (> 0)","func"],["ReadUvarint","ReadUvarint reads an encoded unsigned integer from r and returns it as a uint64","func"]],"go/format":[["go/format","Package format implements standard formatting of Go source","package"],["Source","Source formats src in canonical gofmt style and returns the resultor an (I/O or syntax) error","func"],["Node","Node formats node in canonical gofmt style and writes the result to dst","func"]],"encoding/pem":[["encoding/pem","Package pem implements the PEM data encoding, which originated in PrivacyEnhanced Mail","package"],["Block","A Block represents a PEM encoded structure","struct"],["Encode","Encode writes the PEM encoding of b to out","func"],["EncodeToMemory","EncodeToMemory returns the PEM encoding of b","func"],["Decode","Decode will find the next PEM formatted block (certificate, private keyetc) in the input","func"]],"net/http/pprof":[["net/http/pprof","Package pprof serves via its HTTP server runtime profiling datain the format expected by the pprof visualization tool","package"],["Cmdline","Cmdline responds with the running program'scommand line, with arguments separated by NUL bytes","func"],["Handler","Handler returns an HTTP handler that serves the named profile","func"],["Symbol","Symbol looks up the program counters listed in the request,responding with a table mapping program counters to function names","func"],["Index","Index responds with the pprof-formatted profile named by the request","func"],["Profile","Profile responds with the pprof-formatted cpu profile","func"],["Trace","Trace responds with the execution trace in binary form","func"]],"testing/iotest":[["testing/iotest","Package iotest implements Readers and Writers useful mainly for testing","package"],["HalfReader","HalfReader returns a Reader that implements Readby reading half as many requested bytes from r","func"],["DataErrReader","DataErrReader changes the way errors are handled by a Reader","func"],["TruncateWriter","TruncateWriter returns a Writer that writes to wbut stops silently after n bytes","func"],["TimeoutReader","TimeoutReader returns ErrTimeout on the second readwith no data","func"],["NewReadLogger","NewReadLogger returns a reader that behaves like r exceptthat it logs (using log.Printf) each read to standard error,printing the prefix and the hexadecimal data read","func"],["NewWriteLogger","NewWriteLogger returns a writer that behaves like w exceptthat it logs (using log.Printf) each write to standard error,printing the prefix and the hexadecimal data written","func"],["OneByteReader","OneByteReader returns a Reader that implementseach non-empty Read by reading one byte from r","func"]],"net/http":[["net/http","Package http provides HTTP client and server implementations","package"],["RedirectHandler","RedirectHandler returns a request handler that redirectseach request it receives to the given url using the givenstatus code","func"],["SetCookie","SetCookie adds a Set-Cookie header to the provided ResponseWriter's headers","func"],["Request.ParseForm","ParseForm populates r.Form and r.PostForm","func"],["Client.Get","Get issues a GET to the specified URL","func"],["FileSystem","A FileSystem implements access to a collection of named files","interface"],["Server.ServeTLS","ServeTLS accepts incoming connections on the Listener l, creating anew service goroutine for each","func"],["ServeMux","ServeMux is an HTTP request multiplexer","struct"],["Header.Set","Set sets the header entries associated with key to thesingle element value","func"],["NotFoundHandler","NotFoundHandler returns a simple request handlerthat replies to each request with a “404 page not found” reply","func"],["ServeFile","ServeFile replies to the request with the contents of the namedfile or directory","func"],["Server.SetKeepAlivesEnabled","SetKeepAlivesEnabled controls whether HTTP keep-alives are enabled","func"],["PostForm","PostForm issues a POST to the specified URL, with data's keys andvalues URL-encoded as the request body","func"],["ListenAndServe","ListenAndServe listens on the TCP network address addr and then callsServe with handler to handle requests on incoming connections","func"],["Hijacker","The Hijacker interface is implemented by ResponseWriters that allowan HTTP handler to take over the connection","interface"],["Response.Cookies","Cookies parses and returns the cookies set in the Set-Cookie headers","func"],["Client.Post","Post issues a POST to the specified URL","func"],["Request.PostFormValue","PostFormValue returns the first value for the named component of the POST,PATCH, or PUT request body","func"],["PushOptions","PushOptions describes options for Pusher.Push","struct"],["Header.Del","Del deletes the values associated with key","func"],["Header.Clone","Clone returns a copy of h or nil if h is nil","func"],["ProtocolError","ProtocolError represents an HTTP protocol error","struct"],["ReadResponse","ReadResponse reads and returns an HTTP response from r","func"],["Header.WriteSubset","WriteSubset writes a header in wire format","func"],["Header","A Header represents the key-value pairs in an HTTP header","other"],["HandleFunc","HandleFunc registers the handler function for the given patternin the DefaultServeMux","func"],["Response","Response represents the response from an HTTP request","struct"],["Head","Head issues a HEAD to the specified URL","func"],["Cookie.String","String returns the serialization of the cookie for use in a Cookieheader (if only Name and Value are set) or a Set-Cookie responseheader (if other fields are set)","func"],["ParseHTTPVersion","ParseHTTPVersion parses a HTTP version string","func"],["Response.ProtoAtLeast","ProtoAtLeast reports whether the HTTP protocol usedin the response is at least major.minor","func"],["Request.Context","Context returns the request's context","func"],["Client.Head","Head issues a HEAD to the specified URL","func"],["Request.FormFile","FormFile returns the first file for the provided form key","func"],["ParseTime","ParseTime parses a time header (such as the Date: header),trying each of the three formats allowed by HTTP/1.1:TimeFormat, time.RFC850, and time.ANSIC","func"],["Flusher","The Flusher interface is implemented by ResponseWriters that allowan HTTP handler to flush buffered data to the client","interface"],["Server.Serve","Serve accepts incoming connections on the Listener l, creating anew service goroutine for each","func"],["ServeTLS","ServeTLS accepts incoming HTTPS connections on the listener l,creating a new service goroutine for each","func"],["FileServer","FileServer returns a handler that serves HTTP requestswith the contents of the file system rooted at root","func"],["Request","A Request represents an HTTP request received by a serveror to be sent by a client","struct"],["NewRequest","NewRequest wraps NewRequestWithContext using the background context","func"],["Transport.RegisterProtocol","RegisterProtocol registers a new protocol with scheme","func"],["Request.Referer","Referer returns the referring URL, if sent in the request","func"],["Pusher","Pusher is the interface implemented by ResponseWriters that supportHTTP/2 server push","interface"],["Dir.Open","Open implements FileSystem using os.Open, opening files for reading rootedand relative to the directory d","func"],["Client.CloseIdleConnections","CloseIdleConnections closes any connections on its Transport whichwere previously connected from previous requests but are nowsitting idle in a \"keep-alive\" state","func"],["Request.WriteProxy","WriteProxy is like Write but writes the request in the formexpected by an HTTP proxy","func"],["Request.AddCookie","AddCookie adds a cookie to the request","func"],["Request.Cookie","Cookie returns the named cookie provided in the request orErrNoCookie if not found","func"],["Server.RegisterOnShutdown","RegisterOnShutdown registers a function to call on Shutdown","func"],["Request.BasicAuth","BasicAuth returns the username and password provided in the request'sAuthorization header, if the request uses HTTP Basic Authentication","func"],["Header.Get","Get gets the first value associated with the given key","func"],["Client.PostForm","PostForm issues a POST to the specified URL,with data's keys and values URL-encoded as the request body","func"],["Server.Close","Close immediately closes all active net.Listeners and anyconnections in state StateNew, StateActive, or StateIdle","func"],["Post","Post issues a POST to the specified URL","func"],["Header.Add","Add adds the key, value pair to the header","func"],["Request.ProtoAtLeast","ProtoAtLeast reports whether the HTTP protocol usedin the request is at least major.minor","func"],["Server.ListenAndServeTLS","ListenAndServeTLS listens on the TCP network address srv.Addr andthen calls ServeTLS to handle requests on incoming TLS connections","func"],["ServeMux.Handler","Handler returns the handler to use for the given request,consulting r.Method, r.Host, and r.URL.Path","func"],["Request.MultipartReader","MultipartReader returns a MIME multipart reader if this is amultipart/form-data or a multipart/mixed POST request, else returns nil and an error","func"],["Get","Get issues a GET to the specified URL","func"],["Request.ParseMultipartForm","ParseMultipartForm parses a request body as multipart/form-data","func"],["CookieJar","A CookieJar manages storage and use of cookies in HTTP requests","interface"],["RoundTripper","RoundTripper is an interface representing the ability to execute asingle HTTP transaction, obtaining the Response for a given Request","interface"],["Request.Clone","Clone returns a deep copy of r with its context changed to ctx","func"],["ListenAndServeTLS","ListenAndServeTLS acts identically to ListenAndServe, except that itexpects HTTPS connections","func"],["MaxBytesReader","MaxBytesReader is similar to io.LimitReader but is intended forlimiting the size of incoming request bodies","func"],["Server.Shutdown","Shutdown gracefully shuts down the server without interrupting anyactive connections","func"],["Request.UserAgent","UserAgent returns the client's User-Agent, if sent in the request","func"],["ConnState","A ConnState represents the state of a client connection to a server","other"],["Transport.CloseIdleConnections","CloseIdleConnections closes any connections which were previouslyconnected from previous requests but are now sitting idle ina \"keep-alive\" state","func"],["Serve","Serve accepts incoming HTTP connections on the listener l,creating a new service goroutine for each","func"],["NewRequestWithContext","NewRequestWithContext returns a new Request given a method, URL, andoptional body","func"],["ResponseWriter","A ResponseWriter interface is used by an HTTP handler toconstruct an HTTP response","interface"],["HandlerFunc","The HandlerFunc type is an adapter to allow the use ofordinary functions as HTTP handlers","other"],["Server.ListenAndServe","ListenAndServe listens on the TCP network address srv.Addr and thencalls Serve to handle requests on incoming connections","func"],["NewFileTransport","NewFileTransport returns a new RoundTripper, serving the providedFileSystem","func"],["ServeMux.HandleFunc","HandleFunc registers the handler function for the given pattern","func"],["Request.Cookies","Cookies parses and returns the HTTP cookies sent with the request","func"],["ProxyURL","ProxyURL returns a proxy function (for use in a Transport)that always returns the same URL","func"],["Response.Location","Location returns the URL of the response's \"Location\" header,if present","func"],["SameSite","SameSite allows a server to define a cookie attribute making it impossible forthe browser to send this cookie along with cross-site requests","other"],["ServeContent","ServeContent replies to the request using the content in theprovided ReadSeeker","func"],["Transport","Transport is an implementation of RoundTripper that supports HTTP,HTTPS, and HTTP proxies (for either HTTP or HTTPS with CONNECT)","struct"],["Cookie","A Cookie represents an HTTP cookie as sent in the Set-Cookie header of anHTTP response or the Cookie header of an HTTP request","struct"],["Response.Write","Write writes r to w in the HTTP/1.x server response format,including the status line, headers, body, and optional trailer","func"],["Client","A Client is an HTTP client","struct"],["Handler","A Handler responds to an HTTP request","interface"],["Handle","Handle registers the handler for the given patternin the DefaultServeMux","func"],["Redirect","Redirect replies to the request with a redirect to url,which may be a path relative to the request path","func"],["Header.Write","Write writes a header in wire format","func"],["Transport.Clone","Clone returns a deep copy of t's exported fields","func"],["Server","A Server defines parameters for running an HTTP server","struct"],["Transport.RoundTrip","RoundTrip implements the RoundTripper interface","func"],["Request.SetBasicAuth","SetBasicAuth sets the request's Authorization header to use HTTPBasic Authentication with the provided username and password","func"],["StatusText","StatusText returns a text for the HTTP status code","func"],["Dir","A Dir implements FileSystem using the native file system restricted to aspecific directory tree","other"],["Client.Do","Do sends an HTTP request and returns an HTTP response, followingpolicy (such as redirects, cookies, auth) as configured on theclient","func"],["NewServeMux","NewServeMux allocates and returns a new ServeMux","func"],["ServeMux.Handle","Handle registers the handler for the given pattern","func"],["Transport.CancelRequest","CancelRequest cancels an in-flight request by closing its connection","func"],["HandlerFunc.ServeHTTP","ServeHTTP calls f(w, r)","func"],["ProxyFromEnvironment","ProxyFromEnvironment returns the URL of the proxy to use for agiven request, as indicated by the environment variablesHTTP_PROXY, HTTPS_PROXY and NO_PROXY (or the lowercase versionsthereof)","func"],["CanonicalHeaderKey","CanonicalHeaderKey returns the canonical format of theheader key s","func"],["CloseNotifier","The CloseNotifier interface is implemented by ResponseWriters whichallow detecting when the underlying connection has gone away","interface"],["DetectContentType","DetectContentType implements the algorithm describedat https://mimesniff.spec.whatwg.org/ to determine theContent-Type of the given data","func"],["StripPrefix","StripPrefix returns a handler that serves HTTP requestsby removing the given prefix from the request URL's Pathand invoking the handler h","func"],["File","A File is returned by a FileSystem's Open method and can beserved by the FileServer implementation","interface"],["Request.Write","Write writes an HTTP/1.1 request, which is the header and body, in wire format","func"],["NotFound","NotFound replies to the request with an HTTP 404 not found error","func"],["Error","Error replies to the request with the specified error message and HTTP code","func"],["TimeoutHandler","TimeoutHandler returns a Handler that runs h with the given time limit","func"],["ServeMux.ServeHTTP","ServeHTTP dispatches the request to the handler whosepattern most closely matches the request URL","func"],["Request.FormValue","FormValue returns the first value for the named component of the query","func"],["ReadRequest","ReadRequest reads and parses an incoming request from b","func"],["Request.WithContext","WithContext returns a shallow copy of r with its context changedto ctx","func"]],"image/jpeg":[["image/jpeg","Package jpeg implements a JPEG image decoder and encoder","package"],["UnsupportedError","An UnsupportedError reports that the input uses a valid but unimplemented JPEG feature","other"],["Encode","Encode writes the Image m to w in JPEG 4:2:0 baseline format with the givenoptions","func"],["Decode","Decode reads a JPEG image from r and returns it as an image.Image","func"],["Reader","Deprecated: Reader is not used by the image/jpeg package and shouldnot be used by others","interface"],["DecodeConfig","DecodeConfig returns the color model and dimensions of a JPEG image withoutdecoding the entire image","func"],["Options","Options are the encoding parameters","struct"],["FormatError","A FormatError reports that the input is not a valid JPEG","other"]],"crypto/dsa":[["crypto/dsa","Package dsa implements the Digital Signature Algorithm, as defined in FIPS 186-3","package"],["ParameterSizes","ParameterSizes is an enumeration of the acceptable bit lengths of the primesin a set of DSA parameters","other"],["GenerateParameters","GenerateParameters puts a random, valid set of DSA parameters into params","func"],["GenerateKey","GenerateKey generates a public&private key pair","func"],["Sign","Sign signs an arbitrary length hash (which should be the result of hashing alarger message) using the private key, priv","func"],["Verify","Verify verifies the signature in r, s of hash using the public key, pub","func"],["PublicKey","PublicKey represents a DSA public key","struct"],["PrivateKey","PrivateKey represents a DSA private key","struct"],["Parameters","Parameters represents the domain parameters for a key","struct"]],"crypto/rand":[["crypto/rand","Package rand implements a cryptographically securerandom number generator","package"],["Read","Read is a helper function that calls Reader.Read using io.ReadFull","func"],["Prime","Prime returns a number, p, of the given size, such that p is primewith high probability","func"],["Int","Int returns a uniform random value in [0, max)","func"]],"net/mail":[["net/mail","Package mail implements parsing of mail messages","package"],["ParseDate","ParseDate parses an RFC 5322 date string","func"],["Address.String","String formats the address as a valid RFC 5322 address","func"],["Header.AddressList","AddressList parses the named header field as a list of addresses","func"],["AddressParser.Parse","Parse parses a single RFC 5322 address of theform \"Gogh Fir <gf@example.com>\" or \"foo@example.com\"","func"],["AddressParser.ParseList","ParseList parses the given string as a list of comma-separated addressesof the form \"Gogh Fir <gf@example.com>\" or \"foo@example.com\"","func"],["Header.Get","Get gets the first value associated with the given key","func"],["Header","A Header represents the key-value pairs in a mail message header","other"],["ParseAddress","ParseAddress parses a single RFC 5322 address, e.g","func"],["ParseAddressList","ParseAddressList parses the given string as a list of addresses","func"],["AddressParser","An AddressParser is an RFC 5322 address parser","struct"],["ReadMessage","ReadMessage reads a message from r","func"],["Header.Date","Date parses the Date header field","func"],["Address","Address represents a single mail address","struct"],["Message","A Message represents a parsed mail message","struct"]],"text/template":[["text/template","Package template implements data-driven templates for generating textual output","package"],["IsTrue","IsTrue reports whether the value is 'true', in the sense of not the zero of its type,and whether the value has a meaningful truth value","func"],["Template.Name","Name returns the name of the template","func"],["ParseFiles","ParseFiles creates a new Template and parses the template definitions fromthe named files","func"],["ExecError","ExecError is the custom error type returned when Execute has anerror evaluating its template","struct"],["JSEscape","JSEscape writes to w the escaped JavaScript equivalent of the plain text data b","func"],["JSEscaper","JSEscaper returns the escaped JavaScript equivalent of the textualrepresentation of its arguments","func"],["JSEscapeString","JSEscapeString returns the escaped JavaScript equivalent of the plain text data s","func"],["ParseGlob","ParseGlob creates a new Template and parses the template definitions fromthe files identified by the pattern","func"],["Template.ParseFiles","ParseFiles parses the named files and associates the resulting templates witht","func"],["New","New allocates a new, undefined template with the given name","func"],["Template.DefinedTemplates","DefinedTemplates returns a string listing the defined templates,prefixed by the string \"; defined templates are: \"","func"],["Must","Must is a helper that wraps a call to a function returning (*Template, error)and panics if the error is non-nil","func"],["HTMLEscape","HTMLEscape writes to w the escaped HTML equivalent of the plain text data b","func"],["Template.Funcs","Funcs adds the elements of the argument map to the template's function map","func"],["Template.Delims","Delims sets the action delimiters to the specified strings, to be used insubsequent calls to Parse, ParseFiles, or ParseGlob","func"],["HTMLEscaper","HTMLEscaper returns the escaped HTML equivalent of the textualrepresentation of its arguments","func"],["FuncMap","FuncMap is the type of the map defining the mapping from names to functions","other"],["URLQueryEscaper","URLQueryEscaper returns the escaped value of the textual representation ofits arguments in a form suitable for embedding in a URL query","func"],["Template.ParseGlob","ParseGlob parses the template definitions in the files identified by thepattern and associates the resulting templates with t","func"],["Template.AddParseTree","AddParseTree adds parse tree for template with given name and associates it with t","func"],["Template.Clone","Clone returns a duplicate of the template, including all associatedtemplates","func"],["Template.Execute","Execute applies a parsed template to the specified data object,and writes the output to wr","func"],["Template.Parse","Parse parses text as a template body for t","func"],["Template.Lookup","Lookup returns the template with the given name that is associated with t","func"],["Template.Option","Option sets options for the template","func"],["Template.ExecuteTemplate","ExecuteTemplate applies the template associated with t that has the given nameto the specified data object and writes the output to wr","func"],["Template.New","New allocates a new, undefined template associated with the given one and with the samedelimiters","func"],["Template","Template is the representation of a parsed template","struct"],["Template.Templates","Templates returns a slice of defined templates associated with t","func"],["HTMLEscapeString","HTMLEscapeString returns the escaped HTML equivalent of the plain text data s","func"]],"net/rpc":[["net/rpc","Package rpc provides access to the exported methods of an object across anetwork or other I/O connection","package"],["ServeCodec","ServeCodec is like ServeConn but uses the specified codec todecode requests and encode responses","func"],["Register","Register publishes the receiver's methods in the DefaultServer","func"],["ClientCodec","A ClientCodec implements writing of RPC requests andreading of RPC responses for the client side of an RPC session","interface"],["NewClientWithCodec","NewClientWithCodec is like NewClient but uses the specifiedcodec to encode requests and decode responses","func"],["Accept","Accept accepts connections on the listener and serves requeststo DefaultServer for each incoming connection","func"],["Server.Register","Register publishes in the server the set of methods of thereceiver value that satisfy the following conditions:","func"],["Server","Server represents an RPC Server","struct"],["Request","Request is a header written before every RPC call","struct"],["NewClient","NewClient returns a new Client to handle requests to theset of services at the other end of the connection","func"],["Call","Call represents an active RPC","struct"],["Server.HandleHTTP","HandleHTTP registers an HTTP handler for RPC messages on rpcPath,and a debugging handler on debugPath","func"],["Dial","Dial connects to an RPC server at the specified network address","func"],["Client.Call","Call invokes the named function, waits for it to complete, and returns its error status","func"],["ServeRequest","ServeRequest is like ServeCodec but synchronously serves a single request","func"],["ServeConn","ServeConn runs the DefaultServer on a single connection","func"],["RegisterName","RegisterName is like Register but uses the provided name for the typeinstead of the receiver's concrete type","func"],["Client.Go","Go invokes the function asynchronously","func"],["Server.RegisterName","RegisterName is like Register but uses the provided name for the typeinstead of the receiver's concrete type","func"],["ServerError","ServerError represents an error that has been returned fromthe remote side of the RPC connection","other"],["ServerCodec","A ServerCodec implements reading of RPC requests and writing ofRPC responses for the server side of an RPC session","interface"],["DialHTTP","DialHTTP connects to an HTTP RPC server at the specified network addresslistening on the default HTTP RPC path","func"],["Server.Accept","Accept accepts connections on the listener and serves requestsfor each incoming connection","func"],["Server.ServeConn","ServeConn runs the server on a single connection","func"],["Client.Close","Close calls the underlying codec's Close method","func"],["Response","Response is a header written before every RPC return","struct"],["DialHTTPPath","DialHTTPPath connects to an HTTP RPC serverat the specified network address and path","func"],["NewServer","NewServer returns a new Server","func"],["Server.ServeHTTP","ServeHTTP implements an http.Handler that answers RPC requests","func"],["Server.ServeCodec","ServeCodec is like ServeConn but uses the specified codec todecode requests and encode responses","func"],["Server.ServeRequest","ServeRequest is like ServeCodec but synchronously serves a single request","func"],["HandleHTTP","HandleHTTP registers an HTTP handler for RPC messages to DefaultServeron DefaultRPCPath and a debugging handler on DefaultDebugPath","func"],["Client","Client represents an RPC Client","struct"]],"crypto/cipher":[["crypto/cipher","Package cipher implements standard block cipher modes that can be wrappedaround low-level block cipher implementations","package"],["NewCFBEncrypter","NewCFBEncrypter returns a Stream which encrypts with cipher feedback mode,using the given Block","func"],["NewGCM","NewGCM returns the given 128-bit, block cipher wrapped in Galois Counter Modewith the standard nonce length","func"],["Block","A Block represents an implementation of block cipherusing a given key","interface"],["StreamWriter.Close","Close closes the underlying Writer and returns its Close return value, if the Writeris also an io.Closer","func"],["BlockMode","A BlockMode represents a block cipher running in a block-based mode (CBC,ECB etc)","interface"],["NewCTR","NewCTR returns a Stream which encrypts/decrypts using the given Block incounter mode","func"],["StreamWriter","StreamWriter wraps a Stream into an io.Writer","struct"],["StreamReader","StreamReader wraps a Stream into an io.Reader","struct"],["Stream","A Stream represents a stream cipher","interface"],["NewCBCEncrypter","NewCBCEncrypter returns a BlockMode which encrypts in cipher block chainingmode, using the given Block","func"],["NewGCMWithNonceSize","NewGCMWithNonceSize returns the given 128-bit, block cipher wrapped in GaloisCounter Mode, which accepts nonces of the given length","func"],["AEAD","AEAD is a cipher mode providing authenticated encryption with associateddata","interface"],["NewGCMWithTagSize","NewGCMWithTagSize returns the given 128-bit, block cipher wrapped in GaloisCounter Mode, which generates tags with the given length","func"],["NewCFBDecrypter","NewCFBDecrypter returns a Stream which decrypts with cipher feedback mode,using the given Block","func"],["NewOFB","NewOFB returns a Stream that encrypts or decrypts using the block cipher bin output feedback mode","func"],["NewCBCDecrypter","NewCBCDecrypter returns a BlockMode which decrypts in cipher block chainingmode, using the given Block","func"]],"math":[["math","Package math provides basic constants and mathematical functions","package"],["Modf","Modf returns integer and fractional floating-point numbersthat sum to f","func"],["Ldexp","Ldexp is the inverse of Frexp","func"],["Floor","Floor returns the greatest integer value less than or equal to x","func"],["Erfinv","Erfinv returns the inverse error function of x","func"],["Float64frombits","Float64frombits returns the floating-point number correspondingto the IEEE 754 binary representation b, with the sign bit of band the result in the same bit position","func"],["Asinh","Asinh returns the inverse hyperbolic sine of x","func"],["Log1p","Log1p returns the natural logarithm of 1 plus its argument x","func"],["Y0","Y0 returns the order-zero Bessel function of the second kind","func"],["Acosh","Acosh returns the inverse hyperbolic cosine of x","func"],["Float64bits","Float64bits returns the IEEE 754 binary representation of f,with the sign bit of f and the result in the same bit position,and Float64bits(Float64frombits(x)) == x","func"],["Logb","Logb returns the binary exponent of x","func"],["Gamma","Gamma returns the Gamma function of x","func"],["Tanh","Tanh returns the hyperbolic tangent of x","func"],["Sqrt","Sqrt returns the square root of x","func"],["Exp","Exp returns e**x, the base-e exponential of x","func"],["J0","J0 returns the order-zero Bessel function of the first kind","func"],["J1","J1 returns the order-one Bessel function of the first kind","func"],["Log","Log returns the natural logarithm of x","func"],["Atan","Atan returns the arctangent, in radians, of x","func"],["Erfcinv","Erfcinv returns the inverse of Erfc(x)","func"],["Asin","Asin returns the arcsine, in radians, of x","func"],["NaN","NaN returns an IEEE 754 “not-a-number” value","func"],["Acos","Acos returns the arccosine, in radians, of x","func"],["Dim","Dim returns the maximum of x-y or 0","func"],["Lgamma","Lgamma returns the natural logarithm and sign (-1 or +1) of Gamma(x)","func"],["Sinh","Sinh returns the hyperbolic sine of x","func"],["Yn","Yn returns the order-n Bessel function of the second kind","func"],["IsNaN","IsNaN reports whether f is an IEEE 754 “not-a-number” value","func"],["Sincos","Sincos returns Sin(x), Cos(x)","func"],["Round","Round returns the nearest integer, rounding half away from zero","func"],["Mod","Mod returns the floating-point remainder of x/y","func"],["Abs","Abs returns the absolute value of x","func"],["Hypot","Hypot returns Sqrt(p*p + q*q), taking care to avoidunnecessary overflow and underflow","func"],["Exp2","Exp2 returns 2**x, the base-2 exponential of x","func"],["Cos","Cos returns the cosine of the radian argument x","func"],["Pow10","Pow10 returns 10**n, the base-10 exponential of n","func"],["Float32frombits","Float32frombits returns the floating-point number correspondingto the IEEE 754 binary representation b, with the sign bit of band the result in the same bit position","func"],["Max","Max returns the larger of x or y","func"],["Signbit","Signbit reports whether x is negative or negative zero","func"],["Frexp","Frexp breaks f into a normalized fractionand an integral power of two","func"],["Copysign","Copysign returns a value with the magnitudeof x and the sign of y","func"],["Sin","Sin returns the sine of the radian argument x","func"],["Remainder","Remainder returns the IEEE 754 floating-point remainder of x/y","func"],["Nextafter","Nextafter returns the next representable float64 value after x towards y","func"],["Log2","Log2 returns the binary logarithm of x","func"],["Cbrt","Cbrt returns the cube root of x","func"],["Trunc","Trunc returns the integer value of x","func"],["IsInf","IsInf reports whether f is an infinity, according to sign","func"],["Erfc","Erfc returns the complementary error function of x","func"],["Pow","Pow returns x**y, the base-x exponential of y","func"],["Nextafter32","Nextafter32 returns the next representable float32 value after x towards y","func"],["RoundToEven","RoundToEven returns the nearest integer, rounding ties to even","func"],["Ilogb","Ilogb returns the binary exponent of x as an integer","func"],["Ceil","Ceil returns the least integer value greater than or equal to x","func"],["Atanh","Atanh returns the inverse hyperbolic tangent of x","func"],["Min","Min returns the smaller of x or y","func"],["Jn","Jn returns the order-n Bessel function of the first kind","func"],["Y1","Y1 returns the order-one Bessel function of the second kind","func"],["Tan","Tan returns the tangent of the radian argument x","func"],["Inf","Inf returns positive infinity if sign >= 0, negative infinity if sign < 0","func"],["Expm1","Expm1 returns e**x - 1, the base-e exponential of x minus 1","func"],["Float32bits","Float32bits returns the IEEE 754 binary representation of f,with the sign bit of f and the result in the same bit position","func"],["Cosh","Cosh returns the hyperbolic cosine of x","func"],["Log10","Log10 returns the decimal logarithm of x","func"],["Erf","Erf returns the error function of x","func"],["Atan2","Atan2 returns the arc tangent of y/x, usingthe signs of the two to determine the quadrantof the return value","func"]],"net/http/cgi":[["net/http/cgi","Package cgi implements CGI (Common Gateway Interface) as specifiedin RFC 3875","package"],["Request","Request returns the HTTP request as represented in the currentenvironment","func"],["RequestFromMap","RequestFromMap creates an http.Request from CGI variables","func"],["Serve","Serve executes the provided Handler on the currently active CGIrequest, if any","func"],["Handler","Handler runs an executable in a subprocess with a CGI environment","struct"]],"net/http/httptrace":[["net/http/httptrace","Package httptrace provides mechanisms to trace the events withinHTTP client requests","package"],["ContextClientTrace","ContextClientTrace returns the ClientTrace associated with theprovided context","func"],["GotConnInfo","GotConnInfo is the argument to the ClientTrace.GotConn function andcontains information about the obtained connection","struct"],["WroteRequestInfo","WroteRequestInfo contains information provided to the WroteRequesthook","struct"],["DNSDoneInfo","DNSDoneInfo contains information about the results of a DNS lookup","struct"],["WithClientTrace","WithClientTrace returns a new context based on the provided parentctx","func"],["DNSStartInfo","DNSStartInfo contains information about a DNS request","struct"],["ClientTrace","ClientTrace is a set of hooks to run at various stages of an outgoingHTTP request","struct"]],"encoding/xml":[["encoding/xml","Package xml implements a simple XML 1.0 parser thatunderstands XML name spaces","package"],["Encoder.Flush","Flush flushes any buffered XML to the underlying writer","func"],["CharData.Copy","Copy creates a new copy of CharData","func"],["EscapeText","EscapeText writes to w the properly escaped XML equivalentof the plain text data s","func"],["EndElement","An EndElement represents an XML end element","struct"],["ProcInst.Copy","Copy creates a new copy of ProcInst","func"],["StartElement","A StartElement represents an XML start element","struct"],["Decoder.Decode","Decode works like Unmarshal, except it reads the decoderstream to find the start element","func"],["Decoder.DecodeElement","DecodeElement works like Unmarshal except that it takesa pointer to the start XML element to decode into v","func"],["Decoder.InputOffset","InputOffset returns the input stream byte offset of the current decoder position","func"],["Encoder.EncodeElement","EncodeElement writes the XML encoding of v to the stream,using start as the outermost tag in the encoding","func"],["Decoder.Skip","Skip reads tokens until it has consumed the end elementmatching the most recent start element already consumed","func"],["StartElement.End","End returns the corresponding XML end element","func"],["Name","A Name represents an XML name (Local) annotatedwith a name space identifier (Space)","struct"],["ProcInst","A ProcInst represents an XML processing instruction of the form <?target inst?>","struct"],["CopyToken","CopyToken returns a copy of a Token","func"],["Unmarshal","Unmarshal parses the XML-encoded data and stores the result inthe value pointed to by v, which must be an arbitrary struct,slice, or string","func"],["Comment.Copy","Copy creates a new copy of Comment","func"],["Encoder.EncodeToken","EncodeToken writes the given XML token to the stream","func"],["Marshaler","Marshaler is the interface implemented by objects that can marshalthemselves into valid XML elements","interface"],["Comment","A Comment represents an XML comment of the form <!--comment-->","other"],["Directive.Copy","Copy creates a new copy of Directive","func"],["SyntaxError","A SyntaxError represents a syntax error in the XML input stream","struct"],["TagPathError","A TagPathError represents an error in the unmarshaling processcaused by the use of field tags with conflicting paths","struct"],["Encoder","An Encoder writes XML data to an output stream","struct"],["Directive","A Directive represents an XML directive of the form <!text>","other"],["NewDecoder","NewDecoder creates a new XML parser reading from r","func"],["Encoder.Encode","Encode writes the XML encoding of v to the stream","func"],["Token","A Token is an interface holding one of the token types:StartElement, EndElement, CharData, Comment, ProcInst, or Directive","other"],["UnsupportedTypeError","UnsupportedTypeError is returned when Marshal encounters a typethat cannot be converted into XML","struct"],["NewEncoder","NewEncoder returns a new encoder that writes to w","func"],["MarshalerAttr","MarshalerAttr is the interface implemented by objects that can marshalthemselves into valid XML attributes","interface"],["CharData","A CharData represents XML character data (raw text),in which XML escape sequences have been replaced bythe characters they represent","other"],["StartElement.Copy","Copy creates a new copy of StartElement","func"],["MarshalIndent","MarshalIndent works like Marshal, but each XML element begins on a newindented line that starts with prefix and is followed by one or morecopies of indent according to the nesting depth","func"],["Unmarshaler","Unmarshaler is the interface implemented by objects that can unmarshalan XML element description of themselves","interface"],["Marshal","Marshal returns the XML encoding of v","func"],["Escape","Escape is like EscapeText but omits the error return value","func"],["Decoder.Token","Token returns the next XML token in the input stream","func"],["Decoder.RawToken","RawToken is like Token but does not verify thatstart and end elements match and does not translatename space prefixes to their corresponding URLs","func"],["UnmarshalerAttr","UnmarshalerAttr is the interface implemented by objects that can unmarshalan XML attribute description of themselves","interface"],["Decoder","A Decoder represents an XML parser reading a particular input stream","struct"],["Encoder.Indent","Indent sets the encoder to generate XML in which each elementbegins on a new indented line that starts with prefix and is followed byone or more copies of indent according to the nesting depth","func"],["TokenReader","A TokenReader is anything that can decode a stream of XML tokens, including aDecoder","interface"],["UnmarshalError","An UnmarshalError represents an error in the unmarshaling process","other"],["Attr","An Attr represents an attribute in an XML element (Name=Value)","struct"],["NewTokenDecoder","NewTokenDecoder creates a new XML parser using an underlying token stream","func"]],"go/constant":[["go/constant","Package constant implements Values representing untypedGo constants and their corresponding operations","package"],["BoolVal","BoolVal returns the Go boolean value of x, which must be a Bool or an Unknown","func"],["BitLen","BitLen returns the number of bits required to representthe absolute value x in binary representation; x must be an Int or an Unknown","func"],["MakeInt64","MakeInt64 returns the Int value for x","func"],["Float32Val","Float32Val is like Float64Val but for float32 instead of float64","func"],["Compare","Compare returns the result of the comparison x op y","func"],["Imag","Imag returns the imaginary part of x, which must be a numeric or unknown value","func"],["Kind","Kind specifies the kind of value represented by a Value","other"],["ToFloat","ToFloat converts x to a Float value if x is representable as a Float","func"],["ToComplex","ToComplex converts x to a Complex value if x is representable as a Complex","func"],["Sign","Sign returns -1, 0, or 1 depending on whether x < 0, x == 0, or x > 0;x must be numeric or Unknown","func"],["MakeFromBytes","MakeFromBytes returns the Int value given the bytes of its little-endianbinary representation","func"],["StringVal","StringVal returns the Go string value of x, which must be a String or an Unknown","func"],["Real","Real returns the real part of x, which must be a numeric or unknown value","func"],["Value","A Value represents the value of a Go constant","interface"],["Int64Val","Int64Val returns the Go int64 value of x and whether the result is exact;x must be an Int or an Unknown","func"],["MakeString","MakeString returns the String value for s","func"],["UnaryOp","UnaryOp returns the result of the unary expression op y","func"],["BinaryOp","BinaryOp returns the result of the binary expression x op y","func"],["MakeUint64","MakeUint64 returns the Int value for x","func"],["MakeFromLiteral","MakeFromLiteral returns the corresponding integer, floating-point,imaginary, character, or string value for a Go literal string","func"],["Denom","Denom returns the denominator of x; x must be Int, Float, or Unknown","func"],["Float64Val","Float64Val returns the nearest Go float64 value of x and whether the result is exact;x must be numeric or an Unknown, but not Complex","func"],["MakeBool","MakeBool returns the Bool value for b","func"],["MakeImag","MakeImag returns the Complex value x*i;x must be Int, Float, or Unknown","func"],["Make","Make returns the Value for x","func"],["Bytes","Bytes returns the bytes for the absolute value of x in little-endian binary representation; x must be an Int","func"],["Val","Val returns the underlying value for a given constant","func"],["Shift","Shift returns the result of the shift expression x op swith op == token.SHL or token.SHR (<< or >>)","func"],["Uint64Val","Uint64Val returns the Go uint64 value of x and whether the result is exact;x must be an Int or an Unknown","func"],["ToInt","ToInt converts x to an Int value if x is representable as an Int","func"],["Num","Num returns the numerator of x; x must be Int, Float, or Unknown","func"],["MakeFloat64","MakeFloat64 returns the Float value for x","func"],["MakeUnknown","MakeUnknown returns the Unknown value","func"]],"os":[["os","Package os provides a platform-independent interface to operating systemfunctionality","package"],["SyscallError.Timeout","Timeout reports whether this error represents a timeout","func"],["File.WriteAt","WriteAt writes len(b) bytes to the File starting at byte offset off","func"],["Getppid","Getppid returns the process id of the caller's parent","func"],["TempDir","TempDir returns the default directory to use for temporary files","func"],["Rename","Rename renames (moves) oldpath to newpath","func"],["ProcessState.ExitCode","ExitCode returns the exit code of the exited process, or -1if the process hasn't exited or was terminated by a signal","func"],["UserCacheDir","UserCacheDir returns the default root directory to use for user-specificcached data","func"],["RemoveAll","RemoveAll removes path and any children it contains","func"],["Getuid","Getuid returns the numeric user id of the caller","func"],["IsPathSeparator","IsPathSeparator reports whether c is a directory separator character","func"],["File.Close","Close closes the File, rendering it unusable for I/O","func"],["Getwd","Getwd returns a rooted path name corresponding to thecurrent directory","func"],["Executable","Executable returns the path name for the executable that startedthe current process","func"],["ProcessState.SystemTime","SystemTime returns the system CPU time of the exited process and its children","func"],["MkdirAll","MkdirAll creates a directory named path,along with any necessary parents, and returns nil,or else returns an error","func"],["Pipe","Pipe returns a connected pair of Files; reads from r return bytes written to w","func"],["Chdir","Chdir changes the current working directory to the named directory","func"],["Chmod","Chmod changes the mode of the named file to mode","func"],["File.Readdir","Readdir reads the contents of the directory associated with file andreturns a slice of up to n FileInfo values, as would be returnedby Lstat, in directory order","func"],["FileMode.Perm","Perm returns the Unix permission bits in m","func"],["ProcAttr","ProcAttr holds the attributes that will be applied to a new processstarted by StartProcess","struct"],["File.SyscallConn","SyscallConn returns a raw file","func"],["Stat","Stat returns a FileInfo describing the named file","func"],["ProcessState.Exited","Exited reports whether the program has exited","func"],["File.Readdirnames","Readdirnames reads the contents of the directory associated with fileand returns a slice of up to n names of files in the directory,in directory order","func"],["Hostname","Hostname returns the host name reported by the kernel","func"],["Getegid","Getegid returns the numeric effective group id of the caller","func"],["File.Name","Name returns the name of the file as presented to Open","func"],["File.Truncate","Truncate changes the size of the file","func"],["NewSyscallError","NewSyscallError returns, as an error, a new SyscallErrorwith the given system call name and error details","func"],["UserHomeDir","UserHomeDir returns the current user's home directory","func"],["FileMode.IsRegular","IsRegular reports whether m describes a regular file","func"],["File","File represents an open file descriptor","struct"],["File.Write","Write writes len(b) bytes to the File","func"],["Setenv","Setenv sets the value of the environment variable named by the key","func"],["NewFile","NewFile returns a new File with the given file descriptor andname","func"],["File.SetWriteDeadline","SetWriteDeadline sets the deadline for any future Write calls and anycurrently-blocked Write call","func"],["Getenv","Getenv retrieves the value of the environment variable named by the key","func"],["ProcessState.SysUsage","SysUsage returns system-dependent resource usage information aboutthe exited process","func"],["Getpid","Getpid returns the process id of the caller","func"],["ProcessState.Pid","Pid returns the process id of the exited process","func"],["FileInfo","A FileInfo describes a file and is returned by Stat and Lstat","interface"],["File.Chdir","Chdir changes the current working directory to the file,which must be a directory","func"],["ProcessState.Success","Success reports whether the program exited successfully,such as with exit status 0 on Unix","func"],["IsPermission","IsPermission returns a boolean indicating whether the error is known toreport that permission is denied","func"],["Clearenv","Clearenv deletes all environment variables","func"],["OpenFile","OpenFile is the generalized open call; most users will use Openor Create instead","func"],["ProcessState","ProcessState stores information about a process, as reported by Wait","struct"],["ProcessState.UserTime","UserTime returns the user CPU time of the exited process and its children","func"],["PathError.Timeout","Timeout reports whether this error represents a timeout","func"],["Process.Release","Release releases any resources associated with the Process p,rendering it unusable in the future","func"],["Link","Link creates newname as a hard link to the oldname file","func"],["Process.Wait","Wait waits for the Process to exit, and then returns aProcessState describing its status and an error, if any","func"],["Signal","A Signal represents an operating system signal","interface"],["Chtimes","Chtimes changes the access and modification times of the namedfile, similar to the Unix utime() or utimes() functions","func"],["IsExist","IsExist returns a boolean indicating whether the error is known to reportthat a file or directory already exists","func"],["StartProcess","StartProcess starts a new process with the program, arguments and attributesspecified by name, argv and attr","func"],["FindProcess","FindProcess looks for a running process by its pid","func"],["Process.Kill","Kill causes the Process to exit immediately","func"],["Environ","Environ returns a copy of strings representing the environment,in the form \"key=value\"","func"],["LinkError","LinkError records an error during a link or symlink or renamesystem call and the paths that caused it","struct"],["Truncate","Truncate changes the size of the named file","func"],["Expand","Expand replaces ${var} or $var in the string based on the mapping function","func"],["Getpagesize","Getpagesize returns the underlying system's memory page size","func"],["Symlink","Symlink creates newname as a symbolic link to oldname","func"],["File.Chown","Chown changes the numeric uid and gid of the named file","func"],["Mkdir","Mkdir creates a new directory with the specified name and permissionbits (before umask)","func"],["Process.Signal","Signal sends a signal to the Process","func"],["Lchown","Lchown changes the numeric uid and gid of the named file","func"],["Open","Open opens the named file for reading","func"],["FileMode","A FileMode represents a file's mode and permission bits","other"],["IsNotExist","IsNotExist returns a boolean indicating whether the error is known toreport that a file or directory does not exist","func"],["IsTimeout","IsTimeout returns a boolean indicating whether the error is knownto report that a timeout occurred","func"],["File.ReadAt","ReadAt reads len(b) bytes from the File starting at byte offset off","func"],["Readlink","Readlink returns the destination of the named symbolic link","func"],["File.SetReadDeadline","SetReadDeadline sets the deadline for future Read calls and anycurrently-blocked Read call","func"],["Exit","Exit causes the current program to exit with the given status code","func"],["FileMode.IsDir","IsDir reports whether m describes a directory","func"],["PathError","PathError records an error and the operation and file path that caused it","struct"],["File.SetDeadline","SetDeadline sets the read and write deadlines for a File","func"],["File.Stat","Stat returns the FileInfo structure describing file","func"],["File.WriteString","WriteString is like Write, but writes the contents of string s rather thana slice of bytes","func"],["ProcessState.Sys","Sys returns system-dependent exit information aboutthe process","func"],["Remove","Remove removes the named file or (empty) directory","func"],["Unsetenv","Unsetenv unsets a single environment variable","func"],["Getgid","Getgid returns the numeric group id of the caller","func"],["File.Fd","Fd returns the integer Unix file descriptor referencing the open file","func"],["File.Sync","Sync commits the current contents of the file to stable storage","func"],["Create","Create creates or truncates the named file","func"],["File.Seek","Seek sets the offset for the next Read or Write on file to offset, interpretedaccording to whence: 0 means relative to the origin of the file, 1 meansrelative to the current offset, and 2 means relative to the end","func"],["File.Chmod","Chmod changes the mode of the file to mode","func"],["Chown","Chown changes the numeric uid and gid of the named file","func"],["SyscallError","SyscallError records an error from a specific system call","struct"],["SameFile","SameFile reports whether fi1 and fi2 describe the same file","func"],["LookupEnv","LookupEnv retrieves the value of the environment variable namedby the key","func"],["Process","Process stores the information about a process created by StartProcess","struct"],["Getgroups","Getgroups returns a list of the numeric ids of groups that the caller belongs to","func"],["ExpandEnv","ExpandEnv replaces ${var} or $var in the string according to the valuesof the current environment variables","func"],["Lstat","Lstat returns a FileInfo describing the named file","func"],["UserConfigDir","UserConfigDir returns the default root directory to use for user-specificconfiguration data","func"],["File.Read","Read reads up to len(b) bytes from the File","func"],["Geteuid","Geteuid returns the numeric effective user id of the caller","func"]],"go/importer":[["go/importer","Package importer provides access to export data importers","package"],["Default","Default returns an Importer for the compiler that built the running binary","func"],["ForCompiler","ForCompiler returns an Importer for importing from installed packagesfor the compilers \"gc\" and \"gccgo\", or for importing directlyfrom the source if the compiler argument is \"source\"","func"],["Lookup","A Lookup function returns a reader to access package data fora given import path, or an error if no matching package is found","other"],["For","For calls ForCompiler with a new FileSet","func"]],"compress/zlib":[["compress/zlib","Package zlib implements reading and writing of zlib format compressed data,as specified in RFC 1950","package"],["Writer","A Writer takes data written to it and writes the compressedform of that data to an underlying writer (see NewWriter)","struct"],["NewWriterLevelDict","NewWriterLevelDict is like NewWriterLevel but specifies a dictionary tocompress with","func"],["NewReader","NewReader creates a new ReadCloser","func"],["Resetter","Resetter resets a ReadCloser returned by NewReader or NewReaderDictto switch to a new underlying Reader","interface"],["NewWriterLevel","NewWriterLevel is like NewWriter but specifies the compression level insteadof assuming DefaultCompression","func"],["Writer.Flush","Flush flushes the Writer to its underlying io.Writer","func"],["Writer.Close","Close closes the Writer, flushing any unwritten data to the underlyingio.Writer, but does not close the underlying io.Writer","func"],["NewReaderDict","NewReaderDict is like NewReader but uses a preset dictionary","func"],["Writer.Reset","Reset clears the state of the Writer z such that it is equivalent to itsinitial state from NewWriterLevel or NewWriterLevelDict, but instead writingto w","func"],["Writer.Write","Write writes a compressed form of p to the underlying io.Writer","func"],["NewWriter","NewWriter creates a new Writer","func"]],"net":[["net","Package net provides a portable interface for network I/O, includingTCP/IP, UDP, domain name resolution, and Unix domain sockets","package"],["UDPConn.Read","Read implements the Conn Read method","func"],["InterfaceByIndex","InterfaceByIndex returns the interface specified by index","func"],["TCPConn.SetDeadline","SetDeadline implements the Conn SetDeadline method","func"],["IP","An IP is a single IP address, a slice of bytes","other"],["UDPConn.SetReadDeadline","SetReadDeadline implements the Conn SetReadDeadline method","func"],["ParseMAC","ParseMAC parses s as an IEEE 802 MAC-48, EUI-48, EUI-64, or a 20-octetIP over InfiniBand link-layer address using one of the following formats:","func"],["LookupSRV","LookupSRV tries to resolve an SRV query of the given service,protocol, and domain name","func"],["TCPConn.SetWriteBuffer","SetWriteBuffer sets the size of the operating system'stransmit buffer associated with the connection","func"],["UnixAddr.Network","Network returns the address's network name, \"unix\", \"unixgram\" or\"unixpacket\"","func"],["InterfaceAddrs","InterfaceAddrs returns a list of the system's unicast interfaceaddresses","func"],["UnixConn.File","File returns a copy of the underlying os.File","func"],["IPConn.WriteTo","WriteTo implements the PacketConn WriteTo method","func"],["IP.IsLoopback","IsLoopback reports whether ip is a loopback address","func"],["IP.IsInterfaceLocalMulticast","IsInterfaceLocalMulticast reports whether ip isan interface-local multicast address","func"],["UnixAddr","UnixAddr represents the address of a Unix domain socket end point","struct"],["UDPConn.WriteToUDP","WriteToUDP acts like WriteTo but takes a UDPAddr","func"],["InvalidAddrError","","other"],["UDPConn.RemoteAddr","RemoteAddr returns the remote network address","func"],["OpError","OpError is the error type usually returned by functions in the netpackage","struct"],["AddrError","","struct"],["IPMask","An IP mask is an IP address","other"],["ResolveUnixAddr","ResolveUnixAddr returns an address of Unix domain socket end point","func"],["DialUnix","DialUnix acts like Dial for Unix networks","func"],["UnknownNetworkError","","other"],["UDPConn.File","File returns a copy of the underlying os.File","func"],["TCPAddr.Network","Network returns the address's network name, \"tcp\"","func"],["ResolveUDPAddr","ResolveUDPAddr returns an address of UDP end point","func"],["TCPConn.SyscallConn","SyscallConn returns a raw network connection","func"],["IP.To4","To4 converts the IPv4 address ip to a 4-byte representation","func"],["Conn","Conn is a generic stream-oriented network connection","interface"],["ListenUDP","ListenUDP acts like ListenPacket for UDP networks","func"],["IPv4","IPv4 returns the IP address (in 16-byte form) of theIPv4 address a.b.c.d","func"],["SRV","An SRV represents a single DNS SRV record","struct"],["TCPConn","TCPConn is an implementation of the Conn interface for TCP networkconnections","struct"],["UDPAddr","UDPAddr represents the address of a UDP end point","struct"],["SplitHostPort","SplitHostPort splits a network address of the form \"host:port\",\"host%zone:port\", \"[host]:port\" or \"[host%zone]:port\" into host orhost%zone and port","func"],["IPConn.SetReadDeadline","SetReadDeadline implements the Conn SetReadDeadline method","func"],["ListenUnix","ListenUnix acts like Listen for Unix networks","func"],["TCPConn.CloseWrite","CloseWrite shuts down the writing side of the TCP connection","func"],["IPNet.Network","Network returns the address's network name, \"ip+net\"","func"],["ListenConfig","ListenConfig contains options for listening to an address","struct"],["IPConn.SetWriteBuffer","SetWriteBuffer sets the size of the operating system'stransmit buffer associated with the connection","func"],["ParseCIDR","ParseCIDR parses s as a CIDR notation IP address and prefix length,like \"192.0.2.0/24\" or \"2001:db8::/32\", as defined inRFC 4632 and RFC 4291","func"],["ResolveTCPAddr","ResolveTCPAddr returns an address of TCP end point","func"],["IP.IsMulticast","IsMulticast reports whether ip is a multicast address","func"],["Resolver.LookupAddr","LookupAddr performs a reverse lookup for the given address, returning a listof names mapping to that address","func"],["UnixConn.WriteTo","WriteTo implements the PacketConn WriteTo method","func"],["UnixConn.Write","Write implements the Conn Write method","func"],["MX","An MX represents a single DNS MX record","struct"],["ResolveIPAddr","ResolveIPAddr returns an address of IP end point","func"],["NS","An NS represents a single DNS NS record","struct"],["UDPConn.WriteTo","WriteTo implements the PacketConn WriteTo method","func"],["TCPConn.Write","Write implements the Conn Write method","func"],["LookupMX","LookupMX returns the DNS MX records for the given domain name sorted by preference","func"],["IP.Mask","Mask returns the result of masking the IP address ip with mask","func"],["UnixListener.File","File returns a copy of the underlying os.File","func"],["IPNet","An IPNet represents an IP network","struct"],["ListenUnixgram","ListenUnixgram acts like ListenPacket for Unix networks","func"],["UDPConn.SetDeadline","SetDeadline implements the Conn SetDeadline method","func"],["Pipe","Pipe creates a synchronous, in-memory, full duplexnetwork connection; both ends implement the Conn interface","func"],["UDPConn.LocalAddr","LocalAddr returns the local network address","func"],["UnixListener.SetDeadline","SetDeadline sets the deadline associated with the listener","func"],["FilePacketConn","FilePacketConn returns a copy of the packet network connectioncorresponding to the open file f","func"],["IP.IsLinkLocalMulticast","IsLinkLocalMulticast reports whether ip is a link-localmulticast address","func"],["ListenMulticastUDP","ListenMulticastUDP acts like ListenPacket for UDP networks buttakes a group address on a specific network interface","func"],["Dial","Dial connects to the address on the named network","func"],["IPNet.String","String returns the CIDR notation of n like \"192.0.2.0/24\"or \"2001:db8::/48\" as defined in RFC 4632 and RFC 4291","func"],["Interface","Interface represents a mapping between network interface nameand index","struct"],["TCPConn.SetNoDelay","SetNoDelay controls whether the operating system should delaypacket transmission in hopes of sending fewer packets (Nagle'salgorithm)","func"],["UnixConn.WriteMsgUnix","WriteMsgUnix writes a message to addr via c, copying the payloadfrom b and the associated out-of-band data from oob","func"],["TCPConn.SetLinger","SetLinger sets the behavior of Close on a connection which stillhas data waiting to be sent or to be acknowledged","func"],["Dialer.Dial","Dial connects to the address on the named network","func"],["UnixListener.AcceptUnix","AcceptUnix accepts the next incoming call and returns the newconnection","func"],["Addr","Addr represents a network end point address","interface"],["UDPConn.ReadMsgUDP","ReadMsgUDP reads a message from c, copying the payload into b andthe associated out-of-band data into oob","func"],["CIDRMask","CIDRMask returns an IPMask consisting of `ones' 1 bitsfollowed by 0s up to a total length of `bits' bits","func"],["UnixConn.SetReadBuffer","SetReadBuffer sets the size of the operating system'sreceive buffer associated with the connection","func"],["UDPConn.ReadFromUDP","ReadFromUDP acts like ReadFrom but returns a UDPAddr","func"],["TCPConn.RemoteAddr","RemoteAddr returns the remote network address","func"],["TCPAddr","TCPAddr represents the address of a TCP end point","struct"],["DialUDP","DialUDP acts like Dial for UDP networks","func"],["IPConn.SetReadBuffer","SetReadBuffer sets the size of the operating system'sreceive buffer associated with the connection","func"],["TCPConn.SetReadBuffer","SetReadBuffer sets the size of the operating system'sreceive buffer associated with the connection","func"],["TCPConn.SetKeepAlive","SetKeepAlive sets whether the operating system should sendkeep-alive messages on the connection","func"],["UnixConn","UnixConn is an implementation of the Conn interface for connectionsto Unix domain sockets","struct"],["UnixConn.SetReadDeadline","SetReadDeadline implements the Conn SetReadDeadline method","func"],["Resolver.LookupMX","LookupMX returns the DNS MX records for the given domain name sorted by preference","func"],["Buffers","Buffers contains zero or more runs of bytes to write","other"],["UDPConn.SetWriteBuffer","SetWriteBuffer sets the size of the operating system'stransmit buffer associated with the connection","func"],["Resolver.LookupSRV","LookupSRV tries to resolve an SRV query of the given service,protocol, and domain name","func"],["JoinHostPort","JoinHostPort combines host and port into a network address of theform \"host:port\"","func"],["TCPListener.File","File returns a copy of the underlying os.File","func"],["Interface.Addrs","Addrs returns a list of unicast interface addresses for a specificinterface","func"],["Listen","Listen announces on the local network address","func"],["UDPConn","UDPConn is the implementation of the Conn and PacketConn interfacesfor UDP network connections","struct"],["ListenConfig.Listen","Listen announces on the local network address","func"],["IPAddr.Network","Network returns the address's network name, \"ip\"","func"],["UDPConn.SetReadBuffer","SetReadBuffer sets the size of the operating system'sreceive buffer associated with the connection","func"],["DNSConfigError","DNSConfigError represents an error reading the machine's DNS configuration","struct"],["ParseError","A ParseError is the error type of literal network address parsers","struct"],["TCPConn.SetKeepAlivePeriod","SetKeepAlivePeriod sets period between keep-alives","func"],["DialIP","DialIP acts like Dial for IP networks","func"],["LookupIP","LookupIP looks up host using the local resolver","func"],["UDPConn.WriteMsgUDP","WriteMsgUDP writes a message to addr via c if c isn't connected, orto c's remote address if c is connected (in which case addr must benil)","func"],["IPConn","IPConn is the implementation of the Conn and PacketConn interfacesfor IP network connections","struct"],["InterfaceByName","InterfaceByName returns the interface specified by name","func"],["Dialer","A Dialer contains options for connecting to an address","struct"],["Dialer.DialContext","DialContext connects to the address on the named network usingthe provided context","func"],["IP.String","String returns the string form of the IP address ip","func"],["UnixListener.SetUnlinkOnClose","SetUnlinkOnClose sets whether the underlying socket file should be removedfrom the file system when the listener is closed","func"],["DNSError","DNSError represents a DNS lookup error","struct"],["Resolver.LookupNS","LookupNS returns the DNS NS records for the given domain name","func"],["UDPAddr.Network","Network returns the address's network name, \"udp\"","func"],["IPConn.SetWriteDeadline","SetWriteDeadline implements the Conn SetWriteDeadline method","func"],["Listener","A Listener is a generic network listener for stream-oriented protocols","interface"],["UnixListener","UnixListener is a Unix domain socket listener","struct"],["TCPConn.SetWriteDeadline","SetWriteDeadline implements the Conn SetWriteDeadline method","func"],["IPAddr","IPAddr represents the address of an IP end point","struct"],["UDPConn.Close","Close closes the connection","func"],["TCPListener.Close","Close stops listening on the TCP address","func"],["IP.Equal","Equal reports whether ip and x are the same IP address","func"],["ListenIP","ListenIP acts like ListenPacket for IP networks","func"],["TCPListener.SetDeadline","SetDeadline sets the deadline associated with the listener","func"],["IPConn.Write","Write implements the Conn Write method","func"],["TCPConn.ReadFrom","ReadFrom implements the io.ReaderFrom ReadFrom method","func"],["UDPConn.SyscallConn","SyscallConn returns a raw network connection","func"],["UnixConn.ReadFrom","ReadFrom implements the PacketConn ReadFrom method","func"],["DialTCP","DialTCP acts like Dial for TCP networks","func"],["IPv4Mask","IPv4Mask returns the IP mask (in 4-byte form) of theIPv4 mask a.b.c.d","func"],["IPMask.String","String returns the hexadecimal form of m, with no punctuation","func"],["Resolver","A Resolver looks up names and numbers","struct"],["TCPListener.Accept","Accept implements the Accept method in the Listener interface; itwaits for the next call and returns a generic Conn","func"],["TCPConn.Read","Read implements the Conn Read method","func"],["LookupTXT","LookupTXT returns the DNS TXT records for the given domain name","func"],["IPConn.Read","Read implements the Conn Read method","func"],["UDPConn.SetWriteDeadline","SetWriteDeadline implements the Conn SetWriteDeadline method","func"],["TCPConn.CloseRead","CloseRead shuts down the reading side of the TCP connection","func"],["IP.UnmarshalText","UnmarshalText implements the encoding.TextUnmarshaler interface","func"],["Resolver.LookupPort","LookupPort looks up the port for the given network and service","func"],["IPConn.ReadFrom","ReadFrom implements the PacketConn ReadFrom method","func"],["UnixConn.RemoteAddr","RemoteAddr returns the remote network address","func"],["IPConn.Close","Close closes the connection","func"],["IPConn.File","File returns a copy of the underlying os.File","func"],["TCPConn.SetReadDeadline","SetReadDeadline implements the Conn SetReadDeadline method","func"],["UnixConn.SetWriteBuffer","SetWriteBuffer sets the size of the operating system'stransmit buffer associated with the connection","func"],["ListenTCP","ListenTCP acts like Listen for TCP networks","func"],["TCPListener.AcceptTCP","AcceptTCP accepts the next incoming call and returns the newconnection","func"],["UnixConn.Close","Close closes the connection","func"],["TCPListener","TCPListener is a TCP network listener","struct"],["UDPConn.Write","Write implements the Conn Write method","func"],["IPConn.SyscallConn","SyscallConn returns a raw network connection","func"],["Error","An Error represents a network error","interface"],["UnixConn.CloseRead","CloseRead shuts down the reading side of the Unix domain connection","func"],["IP.DefaultMask","DefaultMask returns the default IP mask for the IP address ip","func"],["UnixListener.SyscallConn","SyscallConn returns a raw network connection","func"],["TCPConn.File","File returns a copy of the underlying os.File","func"],["UnixListener.Addr","Addr returns the listener's network address","func"],["IPConn.LocalAddr","LocalAddr returns the local network address","func"],["ParseIP","ParseIP parses s as an IP address, returning the result","func"],["LookupNS","LookupNS returns the DNS NS records for the given domain name","func"],["UnixConn.WriteToUnix","WriteToUnix acts like WriteTo but takes a UnixAddr","func"],["UnixConn.ReadFromUnix","ReadFromUnix acts like ReadFrom but returns a UnixAddr","func"],["FileConn","FileConn returns a copy of the network connection corresponding tothe open file f","func"],["Resolver.LookupCNAME","LookupCNAME returns the canonical name for the given host","func"],["PacketConn","PacketConn is a generic packet-oriented network connection","interface"],["IP.MarshalText","MarshalText implements the encoding.TextMarshaler interface","func"],["ListenPacket","ListenPacket announces on the local network address","func"],["UnixListener.Close","Close stops listening on the Unix address","func"],["DNSError.Timeout","Timeout reports whether the DNS lookup is known to have timed out","func"],["IP.IsUnspecified","IsUnspecified reports whether ip is an unspecified address, eitherthe IPv4 address \"0.0.0.0\" or the IPv6 address \"::\"","func"],["DNSError.Temporary","Temporary reports whether the DNS error is known to be temporary","func"],["Resolver.LookupIPAddr","LookupIPAddr looks up host using the local resolver","func"],["UnixConn.SetWriteDeadline","SetWriteDeadline implements the Conn SetWriteDeadline method","func"],["IPConn.WriteMsgIP","WriteMsgIP writes a message to addr via c, copying the payload fromb and the associated out-of-band data from oob","func"],["TCPListener.Addr","Addr returns the listener's network address, a *TCPAddr","func"],["Interface.MulticastAddrs","MulticastAddrs returns a list of multicast, joined group addressesfor a specific interface","func"],["DialTimeout","DialTimeout acts like Dial but takes a timeout","func"],["TCPListener.SyscallConn","SyscallConn returns a raw network connection","func"],["UnixConn.SyscallConn","SyscallConn returns a raw network connection","func"],["IPMask.Size","Size returns the number of leading ones and total bits in the mask","func"],["UDPConn.ReadFrom","ReadFrom implements the PacketConn ReadFrom method","func"],["LookupPort","LookupPort looks up the port for the given network and service","func"],["UnixListener.Accept","Accept implements the Accept method in the Listener interface","func"],["UnixConn.CloseWrite","CloseWrite shuts down the writing side of the Unix domain connection","func"],["UnixConn.LocalAddr","LocalAddr returns the local network address","func"],["IPNet.Contains","Contains reports whether the network includes ip","func"],["UnixConn.ReadMsgUnix","ReadMsgUnix reads a message from c, copying the payload into b andthe associated out-of-band data into oob","func"],["ListenConfig.ListenPacket","ListenPacket announces on the local network address","func"],["UnixConn.SetDeadline","SetDeadline implements the Conn SetDeadline method","func"],["IP.IsGlobalUnicast","IsGlobalUnicast reports whether ip is a global unicastaddress","func"],["LookupAddr","LookupAddr performs a reverse lookup for the given address, returning a listof names mapping to that address","func"],["Resolver.LookupHost","LookupHost looks up the given host using the local resolver","func"],["FileListener","FileListener returns a copy of the network listener correspondingto the open file f","func"],["Resolver.LookupTXT","LookupTXT returns the DNS TXT records for the given domain name","func"],["IP.To16","To16 converts the IP address ip to a 16-byte representation","func"],["TCPConn.Close","Close closes the connection","func"],["LookupCNAME","LookupCNAME returns the canonical name for the given host","func"],["TCPConn.LocalAddr","LocalAddr returns the local network address","func"],["Interfaces","Interfaces returns a list of the system's network interfaces","func"],["IPConn.RemoteAddr","RemoteAddr returns the remote network address","func"],["Flags","","other"],["IP.IsLinkLocalUnicast","IsLinkLocalUnicast reports whether ip is a link-localunicast address","func"],["IPConn.WriteToIP","WriteToIP acts like WriteTo but takes an IPAddr","func"],["IPConn.SetDeadline","SetDeadline implements the Conn SetDeadline method","func"],["UnixConn.Read","Read implements the Conn Read method","func"],["IPConn.ReadMsgIP","ReadMsgIP reads a message from c, copying the payload into b andthe associated out-of-band data into oob","func"],["IPConn.ReadFromIP","ReadFromIP acts like ReadFrom but returns an IPAddr","func"],["LookupHost","LookupHost looks up the given host using the local resolver","func"],["HardwareAddr","A HardwareAddr represents a physical hardware address","other"]],"errors":[["errors","Package errors implements functions to manipulate errors","package"],["Unwrap","Unwrap returns the result of calling the Unwrap method on err, if err'stype contains an Unwrap method returning error","func"],["New","New returns an error that formats as the given text","func"],["Is","Is reports whether any error in err's chain matches target","func"],["As","As finds the first error in err's chain that matches target, and if so, setstarget to that error value and returns true","func"]],"encoding/base64":[["encoding/base64","Package base64 implements base64 encoding as specified by RFC 4648","package"],["Encoding","An Encoding is a radix 64 encoding/decoding scheme, defined by a64-character alphabet","struct"],["CorruptInputError","","other"],["Encoding.Decode","Decode decodes src using the encoding enc","func"],["NewEncoding","NewEncoding returns a new padded Encoding defined by the given alphabet,which must be a 64-byte string that does not contain the padding characteror CR / LF ('\\r', '\\n')","func"],["NewEncoder","NewEncoder returns a new base64 stream encoder","func"],["Encoding.Strict","Strict creates a new encoding identical to enc except withstrict decoding enabled","func"],["Encoding.DecodedLen","DecodedLen returns the maximum length in bytes of the decoded datacorresponding to n bytes of base64-encoded data","func"],["Encoding.EncodeToString","EncodeToString returns the base64 encoding of src","func"],["Encoding.DecodeString","DecodeString returns the bytes represented by the base64 string s","func"],["Encoding.Encode","Encode encodes src using the encoding enc, writingEncodedLen(len(src)) bytes to dst","func"],["Encoding.EncodedLen","EncodedLen returns the length in bytes of the base64 encodingof an input buffer of length n","func"],["NewDecoder","NewDecoder constructs a new base64 stream decoder","func"],["Encoding.WithPadding","WithPadding creates a new encoding identical to enc exceptwith a specified padding character, or NoPadding to disable padding","func"]],"encoding/gob":[["encoding/gob","Package gob manages streams of gobs - binary values exchanged between anEncoder (transmitter) and a Decoder (receiver)","package"],["Register","Register records a type, identified by a value for that type, under itsinternal type name","func"],["NewEncoder","NewEncoder returns a new encoder that will transmit on the io.Writer","func"],["GobDecoder","GobDecoder is the interface describing data that provides its ownroutine for decoding transmitted values sent by a GobEncoder","interface"],["NewDecoder","NewDecoder returns a new decoder that reads from the io.Reader","func"],["Decoder.DecodeValue","DecodeValue reads the next value from the input stream","func"],["Decoder.Decode","Decode reads the next value from the input stream and storesit in the data represented by the empty interface value","func"],["GobEncoder","GobEncoder is the interface describing data that provides its ownrepresentation for encoding values for transmission to a GobDecoder","interface"],["Encoder.EncodeValue","EncodeValue transmits the data item represented by the reflection value,guaranteeing that all necessary type information has been transmitted first","func"],["Decoder","A Decoder manages the receipt of type and data information read from theremote side of a connection","struct"],["RegisterName","RegisterName is like Register but uses the provided name rather than thetype's default","func"],["Encoder.Encode","Encode transmits the data item represented by the empty interface value,guaranteeing that all necessary type information has been transmitted first","func"],["Encoder","An Encoder manages the transmission of type and data information to theother side of a connection","struct"],["CommonType","CommonType holds elements of all types","struct"]],"image":[["image","Package image implements a basic 2-D image library","package"],["Rectangle.Dx","Dx returns r's width","func"],["Gray.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["CMYK","CMYK is an in-memory image whose At method returns color.CMYK values","struct"],["Rectangle.In","In reports whether every point in r is in s","func"],["YCbCr","YCbCr is an in-memory image of Y'CbCr colors","struct"],["Paletted.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Point","A Point is an X, Y coordinate pair","struct"],["Decode","Decode decodes an image that has been encoded in a registered format","func"],["NRGBA.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["NRGBA64.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["RGBA.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Uniform.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["Rect","Rect is shorthand for Rectangle{Pt(x0, y0), Pt(x1, y1)}","func"],["Point.Eq","Eq reports whether p and q are equal","func"],["YCbCr.YOffset","YOffset returns the index of the first element of Y that corresponds tothe pixel at (x, y)","func"],["Paletted.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["Alpha16.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["YCbCr.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Rectangle.Intersect","Intersect returns the largest rectangle contained by both r and s","func"],["Point.Mod","Mod returns the point q in r such that p.X-q.X is a multiple of r's widthand p.Y-q.Y is a multiple of r's height","func"],["RGBA64.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["RegisterFormat","RegisterFormat registers an image format for use by Decode","func"],["YCbCrSubsampleRatio","YCbCrSubsampleRatio is the chroma subsample ratio used in a YCbCr image","other"],["RGBA64.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["NewCMYK","NewCMYK returns a new CMYK image with the given bounds","func"],["Rectangle.Inset","Inset returns the rectangle r inset by n, which may be negative","func"],["Point.In","In reports whether p is in r","func"],["Alpha16.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["YCbCr.COffset","COffset returns the index of the first element of Cb or Cr that correspondsto the pixel at (x, y)","func"],["Gray","Gray is an in-memory image whose At method returns color.Gray values","struct"],["Rectangle.Canon","Canon returns the canonical version of r","func"],["Rectangle.Add","Add returns the rectangle r translated by p","func"],["Paletted.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["NYCbCrA.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Gray16.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["Paletted","Paletted is an in-memory image of uint8 indices into a given palette","struct"],["Point.Div","Div returns the vector p/k","func"],["Alpha16.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["Uniform","Uniform is an infinite-sized Image of uniform color","struct"],["CMYK.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NRGBA","NRGBA is an in-memory image whose At method returns color.NRGBA values","struct"],["Alpha.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Pt","Pt is shorthand for Point{X, Y}","func"],["RGBA","RGBA is an in-memory image whose At method returns color.RGBA values","struct"],["CMYK.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["RGBA64","RGBA64 is an in-memory image whose At method returns color.RGBA64 values","struct"],["NRGBA.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Rectangle.Sub","Sub returns the rectangle r translated by -p","func"],["NewRGBA64","NewRGBA64 returns a new RGBA64 image with the given bounds","func"],["NRGBA64.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["Alpha.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["Rectangle.Bounds","Bounds implements the Image interface","func"],["PalettedImage","PalettedImage is an image whose colors may come from a limited palette","interface"],["Rectangle.Union","Union returns the smallest rectangle that contains both r and s","func"],["Rectangle.Empty","Empty reports whether the rectangle contains no points","func"],["Gray16.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["RGBA.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["NewRGBA","NewRGBA returns a new RGBA image with the given bounds","func"],["NRGBA64.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Rectangle.At","At implements the Image interface","func"],["Gray16","Gray16 is an in-memory image whose At method returns color.Gray16 values","struct"],["Gray.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NYCbCrA.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["Point.Sub","Sub returns the vector p-q","func"],["Image","Image is a finite rectangular grid of color.Color values taken from a colormodel","interface"],["Point.String","String returns a string representation of p like \"(3,4)\"","func"],["Rectangle.Dy","Dy returns r's height","func"],["NYCbCrA.AOffset","AOffset returns the index of the first element of A that corresponds to thepixel at (x, y)","func"],["Rectangle.Overlaps","Overlaps reports whether r and s have a non-empty intersection","func"],["RGBA.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NYCbCrA","NYCbCrA is an in-memory image of non-alpha-premultiplied Y'CbCr-with-alphacolors","struct"],["Alpha.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["Rectangle.Eq","Eq reports whether r and s contain the same set of points","func"],["NewGray16","NewGray16 returns a new Gray16 image with the given bounds","func"],["Rectangle.Size","Size returns r's width and height","func"],["Alpha","Alpha is an in-memory image whose At method returns color.Alpha values","struct"],["Rectangle.ColorModel","ColorModel implements the Image interface","func"],["Gray16.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NewNRGBA","NewNRGBA returns a new NRGBA image with the given bounds","func"],["NewAlpha16","NewAlpha16 returns a new Alpha16 image with the given bounds","func"],["NRGBA.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NewAlpha","NewAlpha returns a new Alpha image with the given bounds","func"],["NewYCbCr","NewYCbCr returns a new YCbCr image with the given bounds and subsampleratio","func"],["Point.Add","Add returns the vector p+q","func"],["NRGBA64","NRGBA64 is an in-memory image whose At method returns color.NRGBA64 values","struct"],["Alpha16","Alpha16 is an in-memory image whose At method returns color.Alpha16 values","struct"],["NewNYCbCrA","NewNYCbCrA returns a new NYCbCrA image with the given bounds and subsampleratio","func"],["Rectangle.String","String returns a string representation of r like \"(3,4)-(6,5)\"","func"],["NewPaletted","NewPaletted returns a new Paletted image with the given width, height andpalette","func"],["RGBA64.PixOffset","PixOffset returns the index of the first element of Pix that corresponds tothe pixel at (x, y)","func"],["NewNRGBA64","NewNRGBA64 returns a new NRGBA64 image with the given bounds","func"],["CMYK.SubImage","SubImage returns an image representing the portion of the image p visiblethrough r","func"],["Gray.Opaque","Opaque scans the entire image and reports whether it is fully opaque","func"],["NewGray","NewGray returns a new Gray image with the given bounds","func"],["DecodeConfig","DecodeConfig decodes the color model and dimensions of an image that hasbeen encoded in a registered format","func"],["Rectangle","A Rectangle contains the points with Min.X <= X < Max.X, Min.Y <= Y < Max.Y","struct"],["Point.Mul","Mul returns the vector p*k","func"],["Config","Config holds an image's color model and dimensions","struct"]],"sort":[["sort","Package sort provides primitives for sorting slices and user-definedcollections","package"],["Strings","Strings sorts a slice of strings in increasing order","func"],["Reverse","Reverse returns the reverse order for data","func"],["SearchStrings","SearchStrings searches for x in a sorted slice of strings and returns the indexas specified by Search","func"],["StringSlice.Sort","Sort is a convenience method","func"],["IsSorted","IsSorted reports whether data is sorted","func"],["SearchInts","SearchInts searches for x in a sorted slice of ints and returns the indexas specified by Search","func"],["Interface","A type, typically a collection, that satisfies sort.Interface can besorted by the routines in this package","interface"],["Float64Slice.Search","Search returns the result of applying SearchFloat64s to the receiver and x","func"],["Float64Slice","Float64Slice attaches the methods of Interface to []float64, sorting in increasing order(not-a-number values are treated as less than other values)","other"],["SliceStable","SliceStable sorts the provided slice given the provided lessfunction while keeping the original order of equal elements","func"],["Slice","Slice sorts the provided slice given the provided less function","func"],["Float64s","Float64s sorts a slice of float64s in increasing order(not-a-number values are treated as less than other values)","func"],["SliceIsSorted","SliceIsSorted tests whether a slice is sorted","func"],["Sort","Sort sorts data","func"],["StringsAreSorted","StringsAreSorted tests whether a slice of strings is sorted in increasing order","func"],["IntSlice","IntSlice attaches the methods of Interface to []int, sorting in increasing order","other"],["IntSlice.Sort","Sort is a convenience method","func"],["SearchFloat64s","SearchFloat64s searches for x in a sorted slice of float64s and returns the indexas specified by Search","func"],["Ints","Ints sorts a slice of ints in increasing order","func"],["StringSlice.Search","Search returns the result of applying SearchStrings to the receiver and x","func"],["StringSlice","StringSlice attaches the methods of Interface to []string, sorting in increasing order","other"],["Float64Slice.Sort","Sort is a convenience method","func"],["Float64sAreSorted","Float64sAreSorted tests whether a slice of float64s is sorted in increasing order(not-a-number values are treated as less than other values)","func"],["Stable","Stable sorts data while keeping the original order of equal elements","func"],["IntsAreSorted","IntsAreSorted tests whether a slice of ints is sorted in increasing order","func"],["IntSlice.Search","Search returns the result of applying SearchInts to the receiver and x","func"],["Search","Search uses binary search to find and return the smallest index iin [0, n) at which f(i) is true, assuming that on the range [0, n),f(i) == true implies f(i+1) == true","func"]],"net/http/httputil":[["net/http/httputil","Package httputil provides HTTP utility functions, complementing themore common ones in the net/http package","package"],["BufferPool","A BufferPool is an interface for getting and returning temporarybyte slices for use by io.CopyBuffer","interface"],["NewServerConn","NewServerConn is an artifact of Go's early HTTP implementation","func"],["DumpResponse","DumpResponse is like DumpRequest but dumps a response","func"],["ClientConn","ClientConn is an artifact of Go's early HTTP implementation","struct"],["ServerConn.Read","Read returns the next request on the wire","func"],["NewClientConn","NewClientConn is an artifact of Go's early HTTP implementation","func"],["NewSingleHostReverseProxy","NewSingleHostReverseProxy returns a new ReverseProxy that routesURLs to the scheme, host, and base path provided in target","func"],["ClientConn.Hijack","Hijack detaches the ClientConn and returns the underlying connection as wellas the read-side bufio which may have some left over data","func"],["ServerConn.Hijack","Hijack detaches the ServerConn and returns the underlying connection as wellas the read-side bufio which may have some left over data","func"],["ClientConn.Do","Do is convenience method that writes a request and reads a response","func"],["ClientConn.Read","Read reads the next response from the wire","func"],["NewChunkedReader","NewChunkedReader returns a new chunkedReader that translates the data read from rout of HTTP \"chunked\" format before returning it","func"],["ServerConn","ServerConn is an artifact of Go's early HTTP implementation","struct"],["ClientConn.Close","Close calls Hijack and then also closes the underlying connection","func"],["NewChunkedWriter","NewChunkedWriter returns a new chunkedWriter that translates writes into HTTP\"chunked\" format before writing them to w","func"],["ServerConn.Close","Close calls Hijack and then also closes the underlying connection","func"],["ClientConn.Write","Write writes a request","func"],["ClientConn.Pending","Pending returns the number of unanswered requeststhat have been sent on the connection","func"],["ReverseProxy","ReverseProxy is an HTTP Handler that takes an incoming request andsends it to another server, proxying the response back to theclient","struct"],["ServerConn.Write","Write writes resp in response to req","func"],["ServerConn.Pending","Pending returns the number of unanswered requeststhat have been received on the connection","func"],["DumpRequest","DumpRequest returns the given request in its HTTP/1.x wirerepresentation","func"],["DumpRequestOut","DumpRequestOut is like DumpRequest but for outgoing client requests","func"],["NewProxyClientConn","NewProxyClientConn is an artifact of Go's early HTTP implementation","func"]],"encoding":[["encoding","Package encoding defines interfaces shared by other packages thatconvert data to and from byte-level and textual representations","package"],["BinaryMarshaler","BinaryMarshaler is the interface implemented by an object that canmarshal itself into a binary form","interface"],["TextUnmarshaler","TextUnmarshaler is the interface implemented by an object that canunmarshal a textual representation of itself","interface"],["BinaryUnmarshaler","BinaryUnmarshaler is the interface implemented by an object that canunmarshal a binary representation of itself","interface"],["TextMarshaler","TextMarshaler is the interface implemented by an object that canmarshal itself into a textual form","interface"]],"os/signal":[["os/signal","Package signal implements access to incoming signals","package"],["Ignore","Ignore causes the provided signals to be ignored","func"],["Ignored","Ignored reports whether sig is currently ignored","func"],["Notify","Notify causes package signal to relay incoming signals to c","func"],["Stop","Stop causes package signal to stop relaying incoming signals to c","func"],["Reset","Reset undoes the effect of any prior calls to Notify for the providedsignals","func"]],"crypto/x509/pkix":[["crypto/x509/pkix","Package pkix contains shared, low level structures used for ASN.1 parsingand serialization of X.509 certificates, CRL and OCSP","package"],["RelativeDistinguishedNameSET","","other"],["RDNSequence","","other"],["CertificateList","CertificateList represents the ASN.1 structure of the same name","struct"],["CertificateList.HasExpired","HasExpired reports whether certList should have been updated by now","func"],["RDNSequence.String","String returns a string representation of the sequence r,roughly following the RFC 2253 Distinguished Names syntax","func"],["AlgorithmIdentifier","AlgorithmIdentifier represents the ASN.1 structure of the same name","struct"],["Name","Name represents an X.509 distinguished name","struct"],["AttributeTypeAndValue","AttributeTypeAndValue mirrors the ASN.1 structure of the same name inRFC 5280, Section 4.1.2.4","struct"],["Extension","Extension represents the ASN.1 structure of the same name","struct"],["RevokedCertificate","RevokedCertificate represents the ASN.1 structure of the same name","struct"],["TBSCertificateList","TBSCertificateList represents the ASN.1 structure of the same name","struct"],["Name.String","String returns the string form of n, roughly followingthe RFC 2253 Distinguished Names syntax","func"],["AttributeTypeAndValueSET","AttributeTypeAndValueSET represents a set of ASN.1 sequences ofAttributeTypeAndValue sequences from RFC 2986 (PKCS #10)","struct"]],"go/scanner":[["go/scanner","Package scanner implements a scanner for Go source text","package"],["ErrorList.Add","Add adds an Error with given position and error message to an ErrorList","func"],["ErrorList.Sort","Sort sorts an ErrorList","func"],["Mode","A mode value is a set of flags (or 0)","other"],["ErrorList.Error","An ErrorList implements the error interface","func"],["Scanner.Init","Init prepares the scanner s to tokenize the text src by setting thescanner at the beginning of src","func"],["ErrorList.Reset","Reset resets an ErrorList to no errors","func"],["ErrorList.RemoveMultiples","RemoveMultiples sorts an ErrorList and removes all but the first error per line","func"],["Error","In an ErrorList, an error is represented by an *Error","struct"],["ErrorList.Len","ErrorList implements the sort Interface","func"],["Scanner","A Scanner holds the scanner's internal state while processinga given text","struct"],["Error.Error","Error implements the error interface","func"],["ErrorHandler","An ErrorHandler may be provided to Scanner.Init","other"],["Scanner.Scan","Scan scans the next token and returns the token position, the token,and its literal string if applicable","func"],["ErrorList.Err","Err returns an error equivalent to this error list","func"],["ErrorList","ErrorList is a list of *Errors","other"],["PrintError","PrintError is a utility function that prints a list of errors to w,one error per line, if the err parameter is an ErrorList","func"]],"html":[["html","Package html provides functions for escaping and unescaping HTML text","package"],["UnescapeString","UnescapeString unescapes entities like \"&lt;\" to become \"<\"","func"],["EscapeString","EscapeString escapes special characters like \"<\" to become \"&lt;\"","func"]],"crypto/aes":[["crypto/aes","Package aes implements AES encryption (formerly Rijndael), as defined inU.S","package"],["NewCipher","NewCipher creates and returns a new cipher.Block","func"],["KeySizeError","","other"]],"regexp/syntax":[["regexp/syntax","Package syntax parses regular expressions into parse trees and compilesparse trees into programs","package"],["Prog.Prefix","Prefix returns a literal string that all matches for theregexp must start with","func"],["ErrorCode","An ErrorCode describes a failure to parse a regular expression","other"],["Regexp.CapNames","CapNames walks the regexp to find the names of capturing groups","func"],["Regexp.Simplify","Simplify returns a regexp equivalent to re but without counted repetitionsand with various other simplifications, such as rewriting /(?:a+)+/ to /a+/","func"],["EmptyOp","An EmptyOp specifies a kind or mixture of zero-width assertions","other"],["Parse","Parse parses a regular expression string s, controlled by the specifiedFlags, and returns a regular expression parse tree","func"],["Inst","An Inst is a single instruction in a regular expression program","struct"],["Inst.MatchRune","MatchRune reports whether the instruction matches (and consumes) r","func"],["Compile","Compile compiles the regexp into a program to be executed","func"],["Inst.MatchRunePos","MatchRunePos checks whether the instruction matches (and consumes) r","func"],["IsWordChar","IsWordChar reports whether r is consider a “word character”during the evaluation of the \\b and \\B zero-width assertions","func"],["Prog.StartCond","StartCond returns the leading empty-width conditions that mustbe true in any match","func"],["Regexp","A Regexp is a node in a regular expression syntax tree","struct"],["Regexp.MaxCap","MaxCap walks the regexp to find the maximum capture index","func"],["Error","An Error describes a failure to parse a regular expressionand gives the offending expression","struct"],["Inst.MatchEmptyWidth","MatchEmptyWidth reports whether the instruction matchesan empty string between the runes before and after","func"],["Regexp.Equal","Equal reports whether x and y have identical structure","func"],["Op","An Op is a single regular expression operator","other"],["EmptyOpContext","EmptyOpContext returns the zero-width assertionssatisfied at the position between the runes r1 and r2","func"],["Flags","Flags control the behavior of the parser and record information about regexp context","other"],["Prog","A Prog is a compiled regular expression program","struct"],["InstOp","An InstOp is an instruction opcode","other"]],"crypto/tls":[["crypto/tls","Package tls partially implements TLS 1.2, as specified in RFC 5246,and TLS 1.3, as specified in RFC 8446","package"],["Conn.Handshake","Handshake runs the client or server handshakeprotocol if it has not yet been run","func"],["Listen","Listen creates a TLS listener accepting connections on thegiven network address using net.Listen","func"],["LoadX509KeyPair","LoadX509KeyPair reads and parses a public/private key pair from a pairof files","func"],["Conn.LocalAddr","LocalAddr returns the local network address","func"],["ClientHelloInfo","ClientHelloInfo contains information from a ClientHello message in order toguide certificate selection in the GetCertificate callback","struct"],["X509KeyPair","X509KeyPair parses a public/private key pair from a pair ofPEM encoded data","func"],["CurveID","CurveID is the type of a TLS identifier for an elliptic curve","other"],["NewListener","NewListener creates a Listener which accepts connections from an innerListener and wraps each connection with Server","func"],["Server","Server returns a new TLS server side connectionusing conn as the underlying transport","func"],["Conn.Close","Close closes the connection","func"],["Config","A Config structure is used to configure a TLS client or server","struct"],["Conn.VerifyHostname","VerifyHostname checks that the peer certificate chain is valid forconnecting to host","func"],["Config.BuildNameToCertificate","BuildNameToCertificate parses c.Certificates and builds c.NameToCertificatefrom the CommonName and SubjectAlternateName fields of each of the leafcertificates","func"],["Conn.SetWriteDeadline","SetWriteDeadline sets the write deadline on the underlying connection","func"],["CertificateRequestInfo","CertificateRequestInfo contains information from a server'sCertificateRequest message, which is used to demand a certificate and proofof control from a client","struct"],["Certificate","A Certificate is a chain of one or more certificates, leaf first","struct"],["ConnectionState","ConnectionState records basic TLS details about the connection","struct"],["RecordHeaderError","RecordHeaderError is returned when a TLS record header is invalid","struct"],["Conn.SetReadDeadline","SetReadDeadline sets the read deadline on the underlying connection","func"],["ClientAuthType","ClientAuthType declares the policy the server will follow forTLS Client Authentication","other"],["Conn.RemoteAddr","RemoteAddr returns the remote network address","func"],["Conn.OCSPResponse","OCSPResponse returns the stapled OCSP response from the TLS server, ifany","func"],["Conn.SetDeadline","SetDeadline sets the read and write deadlines associated with the connection","func"],["Conn.ConnectionState","ConnectionState returns basic TLS details about the connection","func"],["Client","Client returns a new TLS client side connectionusing conn as the underlying transport","func"],["Conn.Write","Write writes data to the connection","func"],["ClientSessionCache","ClientSessionCache is a cache of ClientSessionState objects that can be usedby a client to resume a TLS session with a given server","interface"],["Conn.Read","Read can be made to time out and return a net.Error with Timeout() == trueafter a fixed time limit; see SetDeadline and SetReadDeadline","func"],["Config.SetSessionTicketKeys","SetSessionTicketKeys updates the session ticket keys for a server","func"],["Conn.CloseWrite","CloseWrite shuts down the writing side of the connection","func"],["DialWithDialer","DialWithDialer connects to the given network address using dialer.Dial andthen initiates a TLS handshake, returning the resulting TLS connection","func"],["ConnectionState.ExportKeyingMaterial","ExportKeyingMaterial returns length bytes of exported key material in a newslice as defined in RFC 5705","func"],["Dial","Dial connects to the given network address using net.Dialand then initiates a TLS handshake, returning the resultingTLS connection","func"],["SignatureScheme","SignatureScheme identifies a signature algorithm supported by TLS","other"],["Config.Clone","Clone returns a shallow clone of c","func"],["NewLRUClientSessionCache","NewLRUClientSessionCache returns a ClientSessionCache with the givencapacity that uses an LRU strategy","func"],["Conn","A Conn represents a secured connection","struct"],["ClientSessionState","ClientSessionState contains the state needed by clients to resume TLSsessions","struct"],["RenegotiationSupport","RenegotiationSupport enumerates the different levels of support for TLSrenegotiation","other"]],"hash/adler32":[["hash/adler32","Package adler32 implements the Adler-32 checksum","package"],["New","New returns a new hash.Hash32 computing the Adler-32 checksum","func"],["Checksum","Checksum returns the Adler-32 checksum of data","func"]],"runtime/pprof":[["runtime/pprof","Package pprof writes runtime profiling data in the format expectedby the pprof visualization tool","package"],["Lookup","Lookup returns the profile with the given name, or nil if no such profile exists","func"],["Label","Label returns the value of the label with the given key on ctx, and a boolean indicatingwhether that label exists","func"],["Profile.Count","Count returns the number of execution stacks currently in the profile","func"],["LabelSet","LabelSet is a set of labels","struct"],["Profile.Add","Add adds the current execution stack to the profile, associated with value","func"],["Profile.Name","Name returns this profile's name, which can be passed to Lookup to reobtain the profile","func"],["Profiles","Profiles returns a slice of all the known profiles, sorted by name","func"],["Profile.WriteTo","WriteTo writes a pprof-formatted snapshot of the profile to w","func"],["SetGoroutineLabels","SetGoroutineLabels sets the current goroutine's labels to match ctx","func"],["NewProfile","NewProfile creates a new profile with the given name","func"],["StartCPUProfile","StartCPUProfile enables CPU profiling for the current process","func"],["WriteHeapProfile","WriteHeapProfile is shorthand for Lookup(\"heap\").WriteTo(w, 0)","func"],["Labels","Labels takes an even number of strings representing key-value pairsand makes a LabelSet containing them","func"],["WithLabels","WithLabels returns a new context.Context with the given labels added","func"],["Profile","A Profile is a collection of stack traces showing the call sequencesthat led to instances of a particular event, such as allocation","struct"],["Do","Do calls f with a copy of the parent context with thegiven labels added to the parent's label map","func"],["Profile.Remove","Remove removes the execution stack associated with value from the profile","func"],["StopCPUProfile","StopCPUProfile stops the current CPU profile, if any","func"],["ForLabels","ForLabels invokes f with each label set on the context","func"]],"hash":[["hash","Package hash provides interfaces for hash functions","package"],["Hash","Hash is the common interface implemented by all hash functions","interface"],["Hash64","Hash64 is the common interface implemented by all 64-bit hash functions","interface"],["Hash32","Hash32 is the common interface implemented by all 32-bit hash functions","interface"]],"crypto/md5":[["crypto/md5","Package md5 implements the MD5 hash algorithm as defined in RFC 1321","package"],["New","New returns a new hash.Hash computing the MD5 checksum","func"],["Sum","Sum returns the MD5 checksum of the data","func"]],"crypto/x509":[["crypto/x509","Package x509 parses X.509-encoded keys and certificates","package"],["ParsePKCS8PrivateKey","ParsePKCS8PrivateKey parses an unencrypted private key in PKCS#8, ASN.1 DER form","func"],["ParseECPrivateKey","ParseECPrivateKey parses an EC public key in SEC 1, ASN.1 DER form","func"],["Certificate.Verify","Verify attempts to verify c by building one or more chains from c to acertificate in opts.Roots, using certificates in opts.Intermediates ifneeded","func"],["SystemCertPool","SystemCertPool returns a copy of the system cert pool","func"],["DecryptPEMBlock","DecryptPEMBlock takes a password encrypted PEM block and the password used toencrypt it and returns a slice of decrypted DER encoded bytes","func"],["CertPool","CertPool is a set of certificates","struct"],["EncryptPEMBlock","EncryptPEMBlock returns a PEM block of the specified type holding thegiven DER-encoded data encrypted with the specified algorithm andpassword","func"],["CreateCertificateRequest","CreateCertificateRequest creates a new certificate request based on atemplate","func"],["CertificateRequest","CertificateRequest represents a PKCS #10, certificate signature request","struct"],["Certificate.CreateCRL","CreateCRL returns a DER encoded CRL, signed by this Certificate, thatcontains the given list of revoked certificates","func"],["ParsePKIXPublicKey","ParsePKIXPublicKey parses a public key in PKIX, ASN.1 DER form","func"],["ParseCertificate","ParseCertificate parses a single certificate from the given ASN.1 DER data","func"],["NewCertPool","NewCertPool returns a new, empty CertPool","func"],["CertPool.Subjects","Subjects returns a list of the DER-encoded subjects ofall of the certificates in the pool","func"],["MarshalPKCS8PrivateKey","MarshalPKCS8PrivateKey converts an RSA private key to PKCS#8, ASN.1 DER form","func"],["PublicKeyAlgorithm","","other"],["Certificate.CheckCRLSignature","CheckCRLSignature checks that the signature in crl is from c","func"],["SignatureAlgorithm","","other"],["Certificate.CheckSignatureFrom","CheckSignatureFrom verifies that the signature on c is a valid signaturefrom parent","func"],["IsEncryptedPEMBlock","IsEncryptedPEMBlock returns if the PEM block is password encrypted","func"],["MarshalPKCS1PrivateKey","MarshalPKCS1PrivateKey converts an RSA private key to PKCS#1, ASN.1 DER form","func"],["ParseCertificates","ParseCertificates parses one or more certificates from the given ASN.1 DERdata","func"],["Certificate.CheckSignature","CheckSignature verifies that signature is a valid signature over signed fromc's public key","func"],["CreateCertificate","CreateCertificate creates a new X.509v3 certificate based on a template","func"],["SystemRootsError","SystemRootsError results when we fail to load the system root certificates","struct"],["VerifyOptions","VerifyOptions contains parameters for Certificate.Verify","struct"],["Certificate","A Certificate represents an X.509 certificate","struct"],["UnhandledCriticalExtension","","other"],["ParseDERCRL","ParseDERCRL parses a DER encoded CRL from the given bytes","func"],["CertificateInvalidError","CertificateInvalidError results when an odd error occurs","struct"],["ParsePKCS1PrivateKey","ParsePKCS1PrivateKey parses an RSA private key in PKCS#1, ASN.1 DER form","func"],["InvalidReason","","other"],["MarshalECPrivateKey","MarshalECPrivateKey converts an EC private key to SEC 1, ASN.1 DER form","func"],["ParseCRL","ParseCRL parses a CRL from the given bytes","func"],["UnknownAuthorityError","UnknownAuthorityError results when the certificate issuer is unknown","struct"],["CertPool.AppendCertsFromPEM","AppendCertsFromPEM attempts to parse a series of PEM encoded certificates","func"],["MarshalPKCS1PublicKey","MarshalPKCS1PublicKey converts an RSA public key to PKCS#1, ASN.1 DER form","func"],["Certificate.VerifyHostname","VerifyHostname returns nil if c is a valid certificate for the named host","func"],["HostnameError","HostnameError results when the set of authorized names doesn't match therequested name","struct"],["ParsePKCS1PublicKey","ParsePKCS1PublicKey parses an RSA public key in PKCS#1, ASN.1 DER form","func"],["ExtKeyUsage","ExtKeyUsage represents an extended set of actions that are valid for a given key","other"],["PEMCipher","","other"],["InsecureAlgorithmError","An InsecureAlgorithmError","other"],["ConstraintViolationError","ConstraintViolationError results when a requested usage is not permitted bya certificate","other"],["CertificateRequest.CheckSignature","CheckSignature reports whether the signature on c is valid","func"],["KeyUsage","KeyUsage represents the set of actions that are valid for a given key","other"],["ParseCertificateRequest","ParseCertificateRequest parses a single certificate request from thegiven ASN.1 DER data","func"],["MarshalPKIXPublicKey","MarshalPKIXPublicKey converts a public key to PKIX, ASN.1 DER form","func"],["CertPool.AddCert","AddCert adds a certificate to a pool","func"]],"log/syslog":[["log/syslog","Package syslog provides a simple interface to the system logservice","package"],["Priority","The Priority is a combination of the syslog facility andseverity","other"],["Writer.Emerg","Emerg logs a message with severity LOG_EMERG, ignoring the severitypassed to New","func"],["Writer.Write","Write sends a log message to the syslog daemon","func"],["Writer.Crit","Crit logs a message with severity LOG_CRIT, ignoring the severitypassed to New","func"],["Writer.Debug","Debug logs a message with severity LOG_DEBUG, ignoring the severitypassed to New","func"],["Writer.Alert","Alert logs a message with severity LOG_ALERT, ignoring the severitypassed to New","func"],["Writer.Info","Info logs a message with severity LOG_INFO, ignoring the severitypassed to New","func"],["Writer","A Writer is a connection to a syslog server","struct"],["Writer.Warning","Warning logs a message with severity LOG_WARNING, ignoring theseverity passed to New","func"],["Writer.Close","Close closes a connection to the syslog daemon","func"],["Writer.Notice","Notice logs a message with severity LOG_NOTICE, ignoring theseverity passed to New","func"],["Writer.Err","Err logs a message with severity LOG_ERR, ignoring the severitypassed to New","func"],["Dial","Dial establishes a connection to a log daemon by connecting toaddress raddr on the specified network","func"],["New","New establishes a new connection to the system log daemon","func"],["NewLogger","NewLogger creates a log.Logger whose output is written to thesystem log service with the specified priority, a combination ofthe syslog facility and severity","func"]],"plugin":[["plugin","Package plugin implements loading and symbol resolution of Go plugins","package"],["Plugin.Lookup","Lookup searches for a symbol named symName in plugin p","func"],["Plugin","Plugin is a loaded Go plugin","struct"],["Open","Open opens a Go plugin","func"],["Symbol","A Symbol is a pointer to a variable or function","other"]],"runtime/cgo":[["runtime/cgo","Package cgo contains runtime support for code generatedby the cgo tool","package"]],"go/build":[["go/build","Package build gathers information about Go packages","package"],["NoGoError","NoGoError is the error used by Import to describe a directorycontaining no buildable Go source files","struct"],["Package.IsCommand","IsCommand reports whether the package is considered acommand to be installed (not just a library)","func"],["Context.Import","Import returns details about the Go package named by the import path,interpreting local import paths relative to the srcDir directory","func"],["Context.MatchFile","MatchFile reports whether the file with the given name in the given directorymatches the context and would be included in a Package created by ImportDirof that directory","func"],["MultiplePackageError","MultiplePackageError describes a directory containingmultiple buildable Go source files for multiple packages","struct"],["Context.ImportDir","ImportDir is like Import but processes the Go package found inthe named directory","func"],["IsLocalImport","IsLocalImport reports whether the import path isa local import path, like \".\", \"..\", \"./foo\", or \"../foo\"","func"],["ImportMode","An ImportMode controls the behavior of the Import method","other"],["Package","A Package describes the Go package found in a directory","struct"],["ImportDir","ImportDir is shorthand for Default.ImportDir","func"],["Context","A Context specifies the supporting context for a build","struct"],["ArchChar","ArchChar returns \"?\" and an error","func"],["Import","Import is shorthand for Default.Import","func"],["Context.SrcDirs","SrcDirs returns a list of package source root directories","func"]],"go/parser":[["go/parser","Package parser implements a parser for Go source files","package"],["ParseDir","ParseDir calls ParseFile for all files with names ending in \".go\" in thedirectory specified by path and returns a map of package name -> packageAST with all the packages found","func"],["ParseExprFrom","ParseExprFrom is a convenience function for parsing an expression","func"],["Mode","A Mode value is a set of flags (or 0)","other"],["ParseFile","ParseFile parses the source code of a single Go source file and returnsthe corresponding ast.File node","func"],["ParseExpr","ParseExpr is a convenience function for obtaining the AST of an expression x","func"]],"crypto/sha1":[["crypto/sha1","Package sha1 implements the SHA-1 hash algorithm as defined in RFC 3174","package"],["Sum","Sum returns the SHA-1 checksum of the data","func"],["New","New returns a new hash.Hash computing the SHA1 checksum","func"]],"encoding/hex":[["encoding/hex","Package hex implements hexadecimal encoding and decoding","package"],["Decode","Decode decodes src into DecodedLen(len(src)) bytes,returning the actual number of bytes written to dst","func"],["Encode","Encode encodes src into EncodedLen(len(src))bytes of dst","func"],["EncodeToString","EncodeToString returns the hexadecimal encoding of src","func"],["Dump","Dump returns a string that contains a hex dump of the given data","func"],["DecodeString","DecodeString returns the bytes represented by the hexadecimal string s","func"],["InvalidByteError","InvalidByteError values describe errors resulting from an invalid byte in a hex string","other"],["NewDecoder","NewDecoder returns an io.Reader that decodes hexadecimal characters from r","func"],["NewEncoder","NewEncoder returns an io.Writer that writes lowercase hexadecimal characters to w","func"],["DecodedLen","DecodedLen returns the length of a decoding of x source bytes","func"],["EncodedLen","EncodedLen returns the length of an encoding of n source bytes","func"],["Dumper","Dumper returns a WriteCloser that writes a hex dump of all written data tow","func"]],"net/http/httptest":[["net/http/httptest","Package httptest provides utilities for HTTP testing","package"],["Server.Start","Start starts a server from NewUnstartedServer","func"],["ResponseRecorder.WriteHeader","WriteHeader implements http.ResponseWriter","func"],["Server","A Server is an HTTP server listening on a system-chosen port on thelocal loopback interface, for use in end-to-end HTTP tests","struct"],["Server.StartTLS","StartTLS starts TLS on a server from NewUnstartedServer","func"],["NewTLSServer","NewTLSServer starts and returns a new Server using TLS","func"],["NewServer","NewServer starts and returns a new Server","func"],["ResponseRecorder.Flush","Flush implements http.Flusher","func"],["NewRequest","NewRequest returns a new incoming server Request, suitablefor passing to an http.Handler for testing","func"],["NewRecorder","NewRecorder returns an initialized ResponseRecorder","func"],["ResponseRecorder.WriteString","WriteString implements io.StringWriter","func"],["ResponseRecorder.Header","Header implements http.ResponseWriter","func"],["ResponseRecorder.Result","Result returns the response generated by the handler","func"],["Server.Close","Close shuts down the server and blocks until all outstandingrequests on this server have completed","func"],["ResponseRecorder.Write","Write implements http.ResponseWriter","func"],["Server.CloseClientConnections","CloseClientConnections closes any open HTTP connections to the test Server","func"],["Server.Certificate","Certificate returns the certificate used by the server, or nil ifthe server doesn't use TLS","func"],["ResponseRecorder","ResponseRecorder is an implementation of http.ResponseWriter thatrecords its mutations for later inspection in tests","struct"],["NewUnstartedServer","NewUnstartedServer returns a new Server but doesn't start it","func"],["Server.Client","Client returns an HTTP client configured for making requests to the server","func"]],"net/textproto":[["net/textproto","Package textproto implements generic support for text-based request/responseprotocols in the style of HTTP, NNTP, and SMTP","package"],["Conn.Close","Close closes the connection","func"],["Reader.ReadContinuedLine","ReadContinuedLine reads a possibly continued line from r,eliding the final trailing ASCII white space","func"],["Pipeline","A Pipeline manages a pipelined in-order request/response sequence","struct"],["Reader.ReadLineBytes","ReadLineBytes is like ReadLine but returns a []byte instead of a string","func"],["TrimString","TrimString returns s without leading and trailing ASCII space","func"],["Pipeline.EndResponse","EndResponse notifies p that the response with the given id has been received(or, if this is a server, sent)","func"],["Reader.ReadDotBytes","ReadDotBytes reads a dot-encoding and returns the decoded data","func"],["MIMEHeader.Del","Del deletes the values associated with key","func"],["Pipeline.EndRequest","EndRequest notifies p that the request with the given id has been sent(or, if this is a server, received)","func"],["ProtocolError","A ProtocolError describes a protocol violation suchas an invalid response or a hung-up connection","other"],["Writer.DotWriter","DotWriter returns a writer that can be used to write a dot-encoding to w","func"],["TrimBytes","TrimBytes returns b without leading and trailing ASCII space","func"],["Reader.DotReader","DotReader returns a new Reader that satisfies Reads using thedecoded text of a dot-encoded block read from r","func"],["Dial","Dial connects to the given address on the given network using net.Dialand then returns a new Conn for the connection","func"],["Reader.ReadCodeLine","ReadCodeLine reads a response code line of the form","func"],["CanonicalMIMEHeaderKey","CanonicalMIMEHeaderKey returns the canonical format of theMIME header key s","func"],["Writer","A Writer implements convenience methods for writingrequests or responses to a text protocol network connection","struct"],["NewReader","NewReader returns a new Reader reading from r","func"],["Reader.ReadDotLines","ReadDotLines reads a dot-encoding and returns a slicecontaining the decoded lines, with the final \\r\\n or \\n elided from each","func"],["Reader.ReadLine","ReadLine reads a single line from r,eliding the final \\n or \\r\\n from the returned string","func"],["MIMEHeader.Set","Set sets the header entries associated with key tothe single element value","func"],["Reader","A Reader implements convenience methods for reading requestsor responses from a text protocol network connection","struct"],["Conn.Cmd","Cmd is a convenience method that sends a command afterwaiting its turn in the pipeline","func"],["Reader.ReadMIMEHeader","ReadMIMEHeader reads a MIME-style header from r","func"],["Conn","A Conn represents a textual network protocol connection","struct"],["Pipeline.Next","Next returns the next id for a request/response pair","func"],["Error","An Error represents a numeric error response from a server","struct"],["NewWriter","NewWriter returns a new Writer writing to w","func"],["NewConn","NewConn returns a new Conn using conn for I/O","func"],["Pipeline.StartRequest","StartRequest blocks until it is time to send (or, if this is a server, receive)the request with the given id","func"],["MIMEHeader.Add","Add adds the key, value pair to the header","func"],["Pipeline.StartResponse","StartResponse blocks until it is time to receive (or, if this is a server, send)the request with the given id","func"],["Reader.ReadResponse","ReadResponse reads a multi-line response of the form:","func"],["Reader.ReadContinuedLineBytes","ReadContinuedLineBytes is like ReadContinuedLine butreturns a []byte instead of a string","func"],["MIMEHeader","A MIMEHeader represents a MIME-style header mappingkeys to sets of values","other"],["MIMEHeader.Get","Get gets the first value associated with the given key","func"],["Writer.PrintfLine","PrintfLine writes the formatted output followed by \\r\\n","func"]],"math/big":[["math/big","Package big implements arbitrary-precision arithmetic (big numbers)","package"],["Int.GobEncode","GobEncode implements the gob.GobEncoder interface","func"],["Float.SetInt","SetInt sets z to the (possibly rounded) value of x and returns z","func"],["Int.Mul","Mul sets z to the product x*y and returns z","func"],["Rat.SetFloat64","SetFloat64 sets z to exactly f and returns z","func"],["Float.SetFloat64","SetFloat64 sets z to the (possibly rounded) value of x and returns z","func"],["Int.ProbablyPrime","ProbablyPrime reports whether x is probably prime,applying the Miller-Rabin test with n pseudorandomly chosen basesas well as a Baillie-PSW test","func"],["Int.UnmarshalJSON","UnmarshalJSON implements the json.Unmarshaler interface","func"],["RoundingMode","RoundingMode determines how a Float value is rounded to thedesired precision","other"],["Rat.String","String returns a string representation of x in the form \"a/b\" (even if b == 1)","func"],["Int.Binomial","Binomial sets z to the binomial coefficient of (n, k) and returns z","func"],["Float.SetRat","SetRat sets z to the (possibly rounded) value of x and returns z","func"],["Int.ModSqrt","ModSqrt sets z to a square root of x mod p if such a square root exists, andreturns z","func"],["Float.Acc","Acc returns the accuracy of x produced by the most recent operation","func"],["Rat.SetInt","SetInt sets z to x (by making a copy of x) and returns z","func"],["Int.GCD","GCD sets z to the greatest common divisor of a and b, which both mustbe > 0, and returns z","func"],["Int.TrailingZeroBits","TrailingZeroBits returns the number of consecutive least significant zerobits of |x|","func"],["Int.Add","Add sets z to the sum x+y and returns z","func"],["Int.Bit","Bit returns the value of the i'th bit of x","func"],["Rat.SetUint64","SetUint64 sets z to x and returns z","func"],["Int.SetBits","SetBits provides raw (unchecked but fast) access to z by setting itsvalue to abs, interpreted as a little-endian Word slice, and returningz","func"],["Int.Abs","Abs sets z to |x| (the absolute value of x) and returns z","func"],["Accuracy","Accuracy describes the rounding error produced by the most recentoperation that generated a Float value, relative to the exact value","other"],["Int.Bits","Bits provides raw (unchecked but fast) access to x by returning itsabsolute value as a little-endian Word slice","func"],["Int.Append","Append appends the string representation of x, as generated byx.Text(base), to buf and returns the extended buffer","func"],["Float.SetString","SetString sets z to the value of s and returns z and a boolean indicatingsuccess","func"],["Float.SetUint64","SetUint64 sets z to the (possibly rounded) value of x and returns z","func"],["Float.MantExp","MantExp breaks x into its mantissa and exponent componentsand returns the exponent","func"],["Int.Not","Not sets z = ^x and returns z","func"],["Rat.IsInt","IsInt reports whether the denominator of x is 1","func"],["Int.Scan","Scan is a support routine for fmt.Scanner; it sets z to the value ofthe scanned number","func"],["Int.Format","Format implements fmt.Formatter","func"],["Jacobi","Jacobi returns the Jacobi symbol (x/y), either +1, -1, or 0","func"],["Int.AndNot","AndNot sets z = x &^ y and returns z","func"],["Rat.SetFrac","SetFrac sets z to a/b and returns z","func"],["Int.Mod","Mod sets z to the modulus x%y for y != 0 and returns z","func"],["Rat.Sub","Sub sets z to the difference x-y and returns z","func"],["Rat.UnmarshalText","UnmarshalText implements the encoding.TextUnmarshaler interface","func"],["Float.Format","Format implements fmt.Formatter","func"],["Int.Set","Set sets z to x and returns z","func"],["Float.UnmarshalText","UnmarshalText implements the encoding.TextUnmarshaler interface","func"],["Float.Int64","Int64 returns the integer resulting from truncating x towards zero","func"],["Int.Text","Text returns the string representation of x in the given base","func"],["Rat.SetInt64","SetInt64 sets z to x and returns z","func"],["Int.Div","Div sets z to the quotient x/y for y != 0 and returns z","func"],["Float.Sign","Sign returns:","func"],["Rat.Cmp","Cmp compares x and y and returns:","func"],["Float.IsInf","IsInf reports whether x is +Inf or -Inf","func"],["Float.Float32","Float32 returns the float32 value nearest to x","func"],["Int.GobDecode","GobDecode implements the gob.GobDecoder interface","func"],["Int.Bytes","Bytes returns the absolute value of x as a big-endian byte slice","func"],["Float","A nonzero finite Float represents a multi-precision floating point number","struct"],["Int","An Int represents a signed multi-precision integer","struct"],["Float.Neg","Neg sets z to the (possibly rounded) value of x with its sign negated,and returns z","func"],["NewFloat","NewFloat allocates and returns a new Float set to x,with precision 53 and rounding mode ToNearestEven","func"],["Rat.Quo","Quo sets z to the quotient x/y and returns z","func"],["Float.SetMantExp","SetMantExp sets z to mant × 2**exp and returns z","func"],["ErrNaN","An ErrNaN panic is raised by a Float operation that would lead toa NaN under IEEE-754 rules","struct"],["Float.MinPrec","MinPrec returns the minimum precision required to represent x exactly(i.e., the smallest prec before x.SetPrec(prec) would start rounding x)","func"],["Float.Mul","Mul sets z to the rounded product x*y and returns z","func"],["Int.Uint64","Uint64 returns the uint64 representation of x","func"],["Int.Int64","Int64 returns the int64 representation of x","func"],["Rat.Num","Num returns the numerator of x; it may be <= 0","func"],["Rat.SetString","SetString sets z to the value of s and returns z and a boolean indicatingsuccess","func"],["Int.SetBytes","SetBytes interprets buf as the bytes of a big-endian unsignedinteger, sets z to that value, and returns z","func"],["Rat.Mul","Mul sets z to the product x*y and returns z","func"],["Float.IsInt","IsInt reports whether x is an integer","func"],["Int.Rem","Rem sets z to the remainder x%y for y != 0 and returns z","func"],["Float.String","String formats x like x.Text('g', 10)","func"],["Float.Sub","Sub sets z to the rounded difference x-y and returns z","func"],["Float.SetInt64","SetInt64 sets z to the (possibly rounded) value of x and returns z","func"],["Float.SetPrec","SetPrec sets z's precision to prec and returns the (possibly) roundedvalue of z","func"],["Int.Sqrt","Sqrt sets z to ⌊√x⌋, the largest integer such that z² ≤ x, and returns z","func"],["NewRat","NewRat creates a new Rat with numerator a and denominator b","func"],["Float.Text","Text converts the floating-point number x to a string accordingto the given format and precision prec","func"],["Int.Cmp","Cmp compares x and y and returns:","func"],["Float.Quo","Quo sets z to the rounded quotient x/y and returns z","func"],["Rat.Add","Add sets z to the sum x+y and returns z","func"],["Float.Abs","Abs sets z to the (possibly rounded) value |x| (the absolute value of x)and returns z","func"],["Word","A Word represents a single digit of a multi-precision unsigned integer","other"],["Int.IsInt64","IsInt64 reports whether x can be represented as an int64","func"],["Float.Copy","Copy sets z to x, with the same precision, rounding mode, andaccuracy as x, and returns z","func"],["Int.UnmarshalText","UnmarshalText implements the encoding.TextUnmarshaler interface","func"],["Int.SetUint64","SetUint64 sets z to x and returns z","func"],["Float.Prec","Prec returns the mantissa precision of x in bits","func"],["Float.MarshalText","MarshalText implements the encoding.TextMarshaler interface","func"],["Int.BitLen","BitLen returns the length of the absolute value of x in bits","func"],["Rat","A Rat represents a quotient a/b of arbitrary precision","struct"],["Rat.Scan","Scan is a support routine for fmt.Scanner","func"],["Float.Sqrt","Sqrt sets z to the rounded square root of x, and returns it","func"],["Int.SetInt64","SetInt64 sets z to x and returns z","func"],["Float.Rat","Rat returns the rational number corresponding to x;or nil if x is an infinity","func"],["Rat.GobEncode","GobEncode implements the gob.GobEncoder interface","func"],["Int.Lsh","Lsh sets z = x << n and returns z","func"],["Int.QuoRem","QuoRem sets z to the quotient x/y and r to the remainder x%yand returns the pair (z, r) for y != 0","func"],["Int.Xor","Xor sets z = x ^ y and returns z","func"],["Rat.GobDecode","GobDecode implements the gob.GobDecoder interface","func"],["Rat.Denom","Denom returns the denominator of x; it is always > 0","func"],["Rat.Float32","Float32 returns the nearest float32 value for x and a bool indicatingwhether f represents x exactly","func"],["Float.Float64","Float64 returns the float64 value nearest to x","func"],["Rat.FloatString","FloatString returns a string representation of x in decimal form with precdigits of precision after the radix point","func"],["Int.SetString","SetString sets z to the value of s, interpreted in the given base,and returns z and a boolean indicating success","func"],["Int.CmpAbs","CmpAbs compares the absolute values of x and y and returns:","func"],["ParseFloat","ParseFloat is like f.Parse(s, base) with f set to the given precisionand rounding mode","func"],["Float.GobEncode","GobEncode implements the gob.GobEncoder interface","func"],["Int.Or","Or sets z = x | y and returns z","func"],["Float.Mode","Mode returns the rounding mode of x","func"],["Int.MulRange","MulRange sets z to the product of all integersin the range [a, b] inclusively and returns z","func"],["Rat.SetFrac64","SetFrac64 sets z to a/b and returns z","func"],["Rat.Abs","Abs sets z to |x| (the absolute value of x) and returns z","func"],["Int.Exp","Exp sets z = x**y mod |m| (i.e","func"],["Float.SetMode","SetMode sets z's rounding mode to mode and returns an exact z","func"],["Int.And","And sets z = x & y and returns z","func"],["Int.Quo","Quo sets z to the quotient x/y for y != 0 and returns z","func"],["Float.SetInf","SetInf sets z to the infinite Float -Inf if signbit isset, or +Inf if signbit is not set, and returns z","func"],["Int.MarshalText","MarshalText implements the encoding.TextMarshaler interface","func"],["Int.Rsh","Rsh sets z = x >> n and returns z","func"],["Int.String","String returns the decimal representation of x as generated byx.Text(10)","func"],["Int.Sign","Sign returns:","func"],["Float.Set","Set sets z to the (possibly rounded) value of x and returns z","func"],["Float.Parse","Parse parses s which must contain a text representation of a floating-point number with a mantissa in the given conversion base (the exponentis always a decimal number), or a string representing an infinite value","func"],["Int.ModInverse","ModInverse sets z to the multiplicative inverse of g in the ring ℤ/nℤand returns z","func"],["NewInt","NewInt allocates and returns a new Int set to x","func"],["Float.Int","Int returns the result of truncating x towards zero;or nil if x is an infinity","func"],["Int.MarshalJSON","MarshalJSON implements the json.Marshaler interface","func"],["Int.Rand","Rand sets z to a pseudo-random number in [0, n) and returns z","func"],["Rat.Float64","Float64 returns the nearest float64 value for x and a bool indicatingwhether f represents x exactly","func"],["Float.Cmp","Cmp compares x and y and returns:","func"],["Int.DivMod","DivMod sets z to the quotient x div y and m to the modulus x mod yand returns the pair (z, m) for y != 0","func"],["Float.GobDecode","GobDecode implements the gob.GobDecoder interface","func"],["Float.Signbit","Signbit reports whether x is negative or negative zero","func"],["Float.Add","Add sets z to the rounded sum x+y and returns z","func"],["Float.Append","Append appends to buf the string form of the floating-point number x,as generated by x.Text, and returns the extended buffer","func"],["Int.Neg","Neg sets z to -x and returns z","func"],["Int.Sub","Sub sets z to the difference x-y and returns z","func"],["Rat.RatString","RatString returns a string representation of x in the form \"a/b\" if b != 1,and in the form \"a\" if b == 1","func"],["Rat.Inv","Inv sets z to 1/x and returns z","func"],["Rat.Set","Set sets z to x (by making a copy of x) and returns z","func"],["Float.Uint64","Uint64 returns the unsigned integer resulting from truncating xtowards zero","func"],["Int.IsUint64","IsUint64 reports whether x can be represented as a uint64","func"],["Rat.MarshalText","MarshalText implements the encoding.TextMarshaler interface","func"],["Int.SetBit","SetBit sets z to x, with x's i'th bit set to b (0 or 1)","func"],["Rat.Sign","Sign returns:","func"],["Float.Scan","Scan is a support routine for fmt.Scanner; it sets z to the value ofthe scanned number","func"],["Rat.Neg","Neg sets z to -x and returns z","func"]],"unicode":[["unicode","Package unicode provides data and functions to test some properties ofUnicode code points","package"],["IsLetter","IsLetter reports whether the rune is a letter (category L)","func"],["In","In reports whether the rune is a member of one of the ranges","func"],["IsSymbol","IsSymbol reports whether the rune is a symbolic character","func"],["IsPunct","IsPunct reports whether the rune is a Unicode punctuation character(category P)","func"],["ToTitle","ToTitle maps the rune to title case","func"],["ToUpper","ToUpper maps the rune to upper case","func"],["IsOneOf","IsOneOf reports whether the rune is a member of one of the ranges","func"],["Range32","Range32 represents of a range of Unicode code points and is used when one ormore of the values will not fit in 16 bits","struct"],["IsPrint","IsPrint reports whether the rune is defined as printable by Go","func"],["SpecialCase.ToTitle","ToTitle maps the rune to title case giving priority to the special mapping","func"],["IsMark","IsMark reports whether the rune is a mark character (category M)","func"],["ToLower","ToLower maps the rune to lower case","func"],["IsControl","IsControl reports whether the rune is a control character","func"],["SpecialCase","SpecialCase represents language-specific case mappings such as Turkish","other"],["IsTitle","IsTitle reports whether the rune is a title case letter","func"],["CaseRange","CaseRange represents a range of Unicode code points for simple (onecode point to one code point) case conversion","struct"],["IsSpace","IsSpace reports whether the rune is a space character as definedby Unicode's White Space property; in the Latin-1 spacethis is","func"],["RangeTable","RangeTable defines a set of Unicode code points by listing the ranges ofcode points within the set","struct"],["IsNumber","IsNumber reports whether the rune is a number (category N)","func"],["Is","Is reports whether the rune is in the specified table of ranges","func"],["To","To maps the rune to the specified case: UpperCase, LowerCase, or TitleCase","func"],["IsDigit","IsDigit reports whether the rune is a decimal digit","func"],["SpecialCase.ToUpper","ToUpper maps the rune to upper case giving priority to the special mapping","func"],["IsUpper","IsUpper reports whether the rune is an upper case letter","func"],["IsLower","IsLower reports whether the rune is a lower case letter","func"],["SimpleFold","SimpleFold iterates over Unicode code points equivalent underthe Unicode-defined simple case folding","func"],["Range16","Range16 represents of a range of 16-bit Unicode code points","struct"],["IsGraphic","IsGraphic reports whether the rune is defined as a Graphic by Unicode","func"],["SpecialCase.ToLower","ToLower maps the rune to lower case giving priority to the special mapping","func"]],"archive/zip":[["archive/zip","Package zip provides support for reading and writing ZIP archives","package"],["Writer.Flush","Flush flushes any buffered data to the underlying writer","func"],["Writer.CreateHeader","CreateHeader adds a file to the zip archive using the provided FileHeaderfor the file metadata","func"],["Writer.SetComment","SetComment sets the end-of-central-directory comment field","func"],["RegisterCompressor","RegisterCompressor registers custom compressors for a specified method ID","func"],["Reader.RegisterDecompressor","RegisterDecompressor registers or overrides a custom decompressor for aspecific method ID","func"],["NewReader","NewReader returns a new Reader reading from r, which is assumed tohave the given size in bytes","func"],["RegisterDecompressor","RegisterDecompressor allows custom decompressors for a specified method ID","func"],["FileInfoHeader","FileInfoHeader creates a partially-populated FileHeader from anos.FileInfo","func"],["FileHeader","FileHeader describes a file within a zip file","struct"],["FileHeader.ModTime","ModTime returns the modification time in UTC using the legacyModifiedDate and ModifiedTime fields","func"],["ReadCloser.Close","Close closes the Zip file, rendering it unusable for I/O","func"],["NewWriter","NewWriter returns a new Writer writing a zip file to w","func"],["File.Open","Open returns a ReadCloser that provides access to the File's contents","func"],["File","","struct"],["OpenReader","OpenReader will open the Zip file specified by name and return a ReadCloser","func"],["Writer","Writer implements a zip file writer","struct"],["ReadCloser","","struct"],["FileHeader.SetModTime","SetModTime sets the Modified, ModifiedTime, and ModifiedDate fieldsto the given time in UTC","func"],["File.DataOffset","DataOffset returns the offset of the file's possibly-compresseddata, relative to the beginning of the zip file","func"],["Decompressor","A Decompressor returns a new decompressing reader, reading from r","other"],["Reader","","struct"],["FileHeader.Mode","Mode returns the permission and mode bits for the FileHeader","func"],["Writer.SetOffset","SetOffset sets the offset of the beginning of the zip data within theunderlying writer","func"],["FileHeader.FileInfo","FileInfo returns an os.FileInfo for the FileHeader","func"],["Writer.RegisterCompressor","RegisterCompressor registers or overrides a custom compressor for a specificmethod ID","func"],["Compressor","A Compressor returns a new compressing writer, writing to w","other"],["Writer.Close","Close finishes writing the zip file by writing the central directory","func"],["FileHeader.SetMode","SetMode changes the permission and mode bits for the FileHeader","func"],["Writer.Create","Create adds a file to the zip file using the provided name","func"]],"crypto/ed25519":[["crypto/ed25519","Package ed25519 implements the Ed25519 signature algorithm","package"],["PrivateKey","PrivateKey is the type of Ed25519 private keys","other"],["GenerateKey","GenerateKey generates a public/private key pair using entropy from rand","func"],["PrivateKey.Sign","Sign signs the given message with priv","func"],["PrivateKey.Public","Public returns the PublicKey corresponding to priv","func"],["Sign","Sign signs the message with privateKey and returns a signature","func"],["NewKeyFromSeed","NewKeyFromSeed calculates a private key from a seed","func"],["PrivateKey.Seed","Seed returns the private key seed corresponding to priv","func"],["Verify","Verify reports whether sig is a valid signature of message by publicKey","func"],["PublicKey","PublicKey is the type of Ed25519 public keys","other"]],"log":[["log","Package log implements a simple logging package","package"],["Fatal","Fatal is equivalent to Print() followed by a call to os.Exit(1)","func"],["Logger.Panicf","Panicf is equivalent to l.Printf() followed by a call to panic()","func"],["Logger.Flags","Flags returns the output flags for the logger","func"],["Logger.Printf","Printf calls l.Output to print to the logger","func"],["New","New creates a new Logger","func"],["Logger.Output","Output writes the output for a logging event","func"],["SetPrefix","SetPrefix sets the output prefix for the standard logger","func"],["Logger.SetPrefix","SetPrefix sets the output prefix for the logger","func"],["Logger.Panic","Panic is equivalent to l.Print() followed by a call to panic()","func"],["Fatalln","Fatalln is equivalent to Println() followed by a call to os.Exit(1)","func"],["Output","Output writes the output for a logging event","func"],["SetOutput","SetOutput sets the output destination for the standard logger","func"],["Logger","A Logger represents an active logging object that generates lines ofoutput to an io.Writer","struct"],["Logger.Println","Println calls l.Output to print to the logger","func"],["Logger.Writer","Writer returns the output destination for the logger","func"],["Logger.SetOutput","SetOutput sets the output destination for the logger","func"],["SetFlags","SetFlags sets the output flags for the standard logger","func"],["Printf","Printf calls Output to print to the standard logger","func"],["Print","Print calls Output to print to the standard logger","func"],["Logger.Fatalf","Fatalf is equivalent to l.Printf() followed by a call to os.Exit(1)","func"],["Panic","Panic is equivalent to Print() followed by a call to panic()","func"],["Logger.Fatal","Fatal is equivalent to l.Print() followed by a call to os.Exit(1)","func"],["Panicln","Panicln is equivalent to Println() followed by a call to panic()","func"],["Println","Println calls Output to print to the standard logger","func"],["Flags","Flags returns the output flags for the standard logger","func"],["Fatalf","Fatalf is equivalent to Printf() followed by a call to os.Exit(1)","func"],["Writer","Writer returns the output destination for the standard logger","func"],["Logger.Fatalln","Fatalln is equivalent to l.Println() followed by a call to os.Exit(1)","func"],["Prefix","Prefix returns the output prefix for the standard logger","func"],["Logger.SetFlags","SetFlags sets the output flags for the logger","func"],["Logger.Panicln","Panicln is equivalent to l.Println() followed by a call to panic()","func"],["Logger.Print","Print calls l.Output to print to the logger","func"],["Panicf","Panicf is equivalent to Printf() followed by a call to panic()","func"],["Logger.Prefix","Prefix returns the output prefix for the logger","func"]],"image/color":[["image/color","Package color implements a basic color library","package"],["Alpha16","Alpha16 represents a 16-bit alpha color","struct"],["CMYK","CMYK represents a fully opaque CMYK color, having 8 bits for each of cyan,magenta, yellow and black","struct"],["YCbCr","YCbCr represents a fully opaque 24-bit Y'CbCr color, having 8 bits each forone luma and two chroma components","struct"],["RGBA","RGBA represents a traditional 32-bit alpha-premultiplied color, having 8bits for each of red, green, blue and alpha","struct"],["NRGBA","NRGBA represents a non-alpha-premultiplied 32-bit color","struct"],["CMYKToRGB","CMYKToRGB converts a CMYK quadruple to an RGB triple","func"],["RGBA64","RGBA64 represents a 64-bit alpha-premultiplied color, having 16 bits foreach of red, green, blue and alpha","struct"],["Palette","Palette is a palette of colors","other"],["Model","Model can convert any Color to one from its own color model","interface"],["Gray","Gray represents an 8-bit grayscale color","struct"],["NRGBA64","NRGBA64 represents a non-alpha-premultiplied 64-bit color,having 16 bits for each of red, green, blue and alpha","struct"],["RGBToYCbCr","RGBToYCbCr converts an RGB triple to a Y'CbCr triple","func"],["Gray16","Gray16 represents a 16-bit grayscale color","struct"],["RGBToCMYK","RGBToCMYK converts an RGB triple to a CMYK quadruple","func"],["ModelFunc","ModelFunc returns a Model that invokes f to implement the conversion","func"],["Color","Color can convert itself to alpha-premultiplied 16-bits per channel RGBA","interface"],["Alpha","Alpha represents an 8-bit alpha color","struct"],["Palette.Index","Index returns the index of the palette color closest to c in EuclideanR,G,B,A space","func"],["NYCbCrA","NYCbCrA represents a non-alpha-premultiplied Y'CbCr-with-alpha color, having8 bits each for one luma, two chroma and one alpha component","struct"],["Palette.Convert","Convert returns the palette color closest to c in Euclidean R,G,B space","func"],["YCbCrToRGB","YCbCrToRGB converts a Y'CbCr triple to an RGB triple","func"]],"debug/elf":[["debug/elf","Package elf implements access to ELF object files","package"],["Open","Open opens the named file using os.Open and prepares it for use as an ELF binary","func"],["Chdr32","ELF32 Compression header","struct"],["FileHeader","A FileHeader represents an ELF file header","struct"],["CompressionType","Section compression type","other"],["SymVis","Symbol visibility - ELFNN_ST_VISIBILITY - st_other","other"],["Rela32","ELF32 Relocations that need an addend field","struct"],["R_MIPS","Relocation types for MIPS","other"],["Type","Type is found in Header.Type","other"],["R_X86_64","Relocation types for x86-64","other"],["Section.Open","Open returns a new ReadSeeker reading the ELF section","func"],["SectionIndex","Special section indices","other"],["Section","A Section represents a single section in an ELF file","struct"],["File.DynamicSymbols","DynamicSymbols returns the dynamic symbol table for f","func"],["Rel32","ELF32 Relocations that don't need an addend field","struct"],["DynTag","Dyn.Tag","other"],["R_PPC64","Relocation types for 64-bit PowerPC or Power Architecture processors","other"],["NewFile","NewFile creates a new File for accessing an ELF binary in an underlying reader","func"],["R_390","Relocation types for s390x processors","other"],["ImportedSymbol","","struct"],["NType","NType values; used in core files","other"],["File.Symbols","Symbols returns the symbol table for f","func"],["R_ALPHA","Relocation types for Alpha","other"],["Dyn32","ELF32 Dynamic structure","struct"],["File.SectionByType","SectionByType returns the first section in f with thegiven type, or nil if there is no such section","func"],["File.Close","Close closes the File","func"],["Version","Version is found in Header.Ident[EI_VERSION] and Header.Version","other"],["R_AARCH64","Relocation types for AArch64 (aka arm64)","other"],["Section32","ELF32 Section header","struct"],["Prog64","ELF64 Program header","struct"],["ProgHeader","A ProgHeader represents a single ELF program header","struct"],["DynFlag","DT_FLAGS values","other"],["R_SPARC","Relocation types for SPARC","other"],["Data","Data is found in Header.Ident[EI_DATA] and Header.Data","other"],["Rela64","ELF64 relocations that need an addend field","struct"],["Header32","ELF32 File header","struct"],["Section64","ELF64 Section header","struct"],["File.DynString","DynString returns the strings listed for the given tag in the file's dynamicsection","func"],["Class","Class is found in Header.Ident[EI_CLASS] and Header.Class","other"],["SectionHeader","A SectionHeader represents a single ELF section header","struct"],["Prog.Open","Open returns a new ReadSeeker reading the ELF program body","func"],["Prog","A Prog represents a single ELF program header in an ELF binary","struct"],["Symbol","A Symbol represents an entry in an ELF symbol table section","struct"],["ProgFlag","Prog.Flag","other"],["SectionFlag","Section flags","other"],["Machine","Machine is found in Header.Machine","other"],["R_ARM","Relocation types for ARM","other"],["OSABI","OSABI is found in Header.Ident[EI_OSABI] and Header.OSABI","other"],["Chdr64","ELF64 Compression header","struct"],["SymType","Symbol type - ELFNN_ST_TYPE - st_info","other"],["File.Section","Section returns a section with the given name, or nil if no suchsection exists","func"],["R_386","Relocation types for 386","other"],["R_PPC","Relocation types for PowerPC","other"],["R_RISCV","Relocation types for RISC-V processors","other"],["ProgType","Prog.Type","other"],["Dyn64","ELF64 Dynamic structure","struct"],["File.ImportedLibraries","ImportedLibraries returns the names of all librariesreferred to by the binary f that are expected to belinked with the binary at dynamic link time","func"],["FormatError","","struct"],["SymBind","Symbol Binding - ELFNN_ST_BIND - st_info","other"],["Rel64","ELF64 relocations that don't need an addend field","struct"],["File","A File represents an open ELF file","struct"],["Prog32","ELF32 Program header","struct"],["File.ImportedSymbols","ImportedSymbols returns the names of all symbolsreferred to by the binary f that are expected to besatisfied by other libraries at dynamic load time","func"],["Sym32","ELF32 Symbol","struct"],["Sym64","ELF64 symbol table entries","struct"],["Header64","ELF64 file header","struct"],["Section.Data","Data reads and returns the contents of the ELF section","func"],["SectionType","Section type","other"]],"hash/crc32":[["hash/crc32","Package crc32 implements the 32-bit cyclic redundancy check, or CRC-32,checksum","package"],["Update","Update returns the result of adding the bytes in p to the crc","func"],["Checksum","Checksum returns the CRC-32 checksum of datausing the polynomial represented by the Table","func"],["MakeTable","MakeTable returns a Table constructed from the specified polynomial","func"],["New","New creates a new hash.Hash32 computing the CRC-32 checksum using thepolynomial represented by the Table","func"],["Table","Table is a 256-word table representing the polynomial for efficient processing","other"],["ChecksumIEEE","ChecksumIEEE returns the CRC-32 checksum of datausing the IEEE polynomial","func"],["NewIEEE","NewIEEE creates a new hash.Hash32 computing the CRC-32 checksum usingthe IEEE polynomial","func"]],"path/filepath":[["path/filepath","Package filepath implements utility routines for manipulating filename pathsin a way compatible with the target operating system-defined file paths","package"],["Clean","Clean returns the shortest path name equivalent to pathby purely lexical processing","func"],["Split","Split splits path immediately following the final Separator,separating it into a directory and file name component","func"],["Walk","Walk walks the file tree rooted at root, calling walkFn for each file ordirectory in the tree, including root","func"],["VolumeName","VolumeName returns leading volume name","func"],["EvalSymlinks","EvalSymlinks returns the path name after the evaluation of any symboliclinks","func"],["Ext","Ext returns the file name extension used by path","func"],["Match","Match reports whether name matches the shell file name pattern","func"],["HasPrefix","HasPrefix exists for historical compatibility and should not be used","func"],["Join","Join joins any number of path elements into a single path, addinga Separator if necessary","func"],["ToSlash","ToSlash returns the result of replacing each separator characterin path with a slash ('/') character","func"],["IsAbs","IsAbs reports whether the path is absolute","func"],["Glob","Glob returns the names of all files matching pattern or nilif there is no matching file","func"],["Base","Base returns the last element of path","func"],["Abs","Abs returns an absolute representation of path","func"],["FromSlash","FromSlash returns the result of replacing each slash ('/') characterin path with a separator character","func"],["SplitList","SplitList splits a list of paths joined by the OS-specific ListSeparator,usually found in PATH or GOPATH environment variables","func"],["WalkFunc","WalkFunc is the type of the function called for each file or directoryvisited by Walk","other"],["Rel","Rel returns a relative path that is lexically equivalent to targpath whenjoined to basepath with an intervening separator","func"],["Dir","Dir returns all but the last element of path, typically the path's directory","func"]],"go/printer":[["go/printer","Package printer implements printing of AST nodes","package"],["Config.Fprint","Fprint \"pretty-prints\" an AST node to output for a given configuration cfg","func"],["Mode","A Mode value is a set of flags (or 0)","other"],["CommentedNode","A CommentedNode bundles an AST node and corresponding comments","struct"],["Config","A Config node controls the output of Fprint","struct"],["Fprint","Fprint \"pretty-prints\" an AST node to output","func"]],"crypto/elliptic":[["crypto/elliptic","Package elliptic implements several standard elliptic curves over primefields","package"],["Marshal","Marshal converts a point into the uncompressed form specified in section 4.3.6 of ANSI X9.62","func"],["Curve","A Curve represents a short-form Weierstrass curve with a=-3","interface"],["Unmarshal","Unmarshal converts a point, serialized by Marshal, into an x, y pair","func"],["P256","P256 returns a Curve which implements P-256 (see FIPS 186-3, section D.2.3)","func"],["P384","P384 returns a Curve which implements P-384 (see FIPS 186-3, section D.2.4)","func"],["GenerateKey","GenerateKey returns a public/private key pair","func"],["P224","P224 returns a Curve which implements P-224 (see FIPS 186-3, section D.2.2)","func"],["P521","P521 returns a Curve which implements P-521 (see FIPS 186-3, section D.2.5)","func"],["CurveParams","CurveParams contains the parameters of an elliptic curve and also providesa generic, non-constant time implementation of Curve","struct"]],"os/user":[["os/user","Package user allows user account lookups by name or id","package"],["UnknownUserError","UnknownUserError is returned by Lookup whena user cannot be found","other"],["UnknownGroupIdError","UnknownGroupIdError is returned by LookupGroupId whena group cannot be found","other"],["LookupGroupId","LookupGroupId looks up a group by groupid","func"],["UnknownGroupError","UnknownGroupError is returned by LookupGroup whena group cannot be found","other"],["User.GroupIds","GroupIds returns the list of group IDs that the user is a member of","func"],["Group","Group represents a grouping of users","struct"],["LookupId","LookupId looks up a user by userid","func"],["LookupGroup","LookupGroup looks up a group by name","func"],["Lookup","Lookup looks up a user by username","func"],["User","User represents a user account","struct"],["UnknownUserIdError","UnknownUserIdError is returned by LookupId when a user cannot be found","other"],["Current","Current returns the current user","func"]],"strings":[["strings","Package strings implements simple functions to manipulate UTF-8 encoded strings","package"],["ToLower","ToLower returns s with all Unicode letters mapped to their lower case","func"],["Reader.WriteTo","WriteTo implements the io.WriterTo interface","func"],["Reader.Seek","Seek implements the io.Seeker interface","func"],["Map","Map returns a copy of the string s with all its characters modifiedaccording to the mapping function","func"],["Reader.Size","Size returns the original length of the underlying string","func"],["Builder.Grow","Grow grows b's capacity, if necessary, to guarantee space foranother n bytes","func"],["IndexFunc","IndexFunc returns the index into s of the first Unicodecode point satisfying f(c), or -1 if none do","func"],["TrimSuffix","TrimSuffix returns s without the provided trailing suffix string","func"],["Builder.WriteByte","WriteByte appends the byte c to b's buffer","func"],["Contains","Contains reports whether substr is within s","func"],["Fields","Fields splits the string s around each instance of one or more consecutive white spacecharacters, as defined by unicode.IsSpace, returning a slice of substrings of s or anempty slice if s contains only white space","func"],["ToTitle","ToTitle returns a copy of the string s with all Unicode letters mapped totheir Unicode title case","func"],["HasPrefix","HasPrefix tests whether the string s begins with prefix","func"],["Reader","A Reader implements the io.Reader, io.ReaderAt, io.Seeker, io.WriterTo,io.ByteScanner, and io.RuneScanner interfaces by readingfrom a string","struct"],["TrimPrefix","TrimPrefix returns s without the provided leading prefix string","func"],["ToLowerSpecial","ToLowerSpecial returns a copy of the string s with all Unicode letters mapped to theirlower case using the case mapping specified by c","func"],["IndexByte","IndexByte returns the index of the first instance of c in s, or -1 if c is not present in s","func"],["ToTitleSpecial","ToTitleSpecial returns a copy of the string s with all Unicode letters mapped to theirUnicode title case, giving priority to the special casing rules","func"],["IndexAny","IndexAny returns the index of the first instance of any Unicode code pointfrom chars in s, or -1 if no Unicode code point from chars is present in s","func"],["Builder.Len","Len returns the number of accumulated bytes; b.Len() == len(b.String())","func"],["Index","Index returns the index of the first instance of substr in s, or -1 if substr is not present in s","func"],["Join","Join concatenates the elements of a to create a single string","func"],["TrimLeftFunc","TrimLeftFunc returns a slice of the string s with all leadingUnicode code points c satisfying f(c) removed","func"],["ContainsRune","ContainsRune reports whether the Unicode code point r is within s","func"],["Trim","Trim returns a slice of the string s with all leading andtrailing Unicode code points contained in cutset removed","func"],["Split","Split slices s into all substrings separated by sep and returns a slice ofthe substrings between those separators","func"],["Builder.WriteString","WriteString appends the contents of s to b's buffer","func"],["Replacer","Replacer replaces a list of strings with replacements","struct"],["NewReader","NewReader returns a new Reader reading from s","func"],["Repeat","Repeat returns a new string consisting of count copies of the string s","func"],["Replace","Replace returns a copy of the string s with the first nnon-overlapping instances of old replaced by new","func"],["NewReplacer","NewReplacer returns a new Replacer from a list of old, new stringpairs","func"],["ToValidUTF8","ToValidUTF8 returns a copy of the string s with each run of invalid UTF-8 byte sequencesreplaced by the replacement string, which may be empty","func"],["Compare","Compare returns an integer comparing two strings lexicographically","func"],["Count","Count counts the number of non-overlapping instances of substr in s","func"],["Builder","A Builder is used to efficiently build a string using Write methods","struct"],["Builder.Write","Write appends the contents of p to b's buffer","func"],["LastIndex","LastIndex returns the index of the last instance of substr in s, or -1 if substr is not present in s","func"],["TrimSpace","TrimSpace returns a slice of the string s, with all leadingand trailing white space removed, as defined by Unicode","func"],["Builder.Reset","Reset resets the Builder to be empty","func"],["ReplaceAll","ReplaceAll returns a copy of the string s with allnon-overlapping instances of old replaced by new","func"],["ContainsAny","ContainsAny reports whether any Unicode code points in chars are within s","func"],["TrimFunc","TrimFunc returns a slice of the string s with all leadingand trailing Unicode code points c satisfying f(c) removed","func"],["Builder.Cap","Cap returns the capacity of the builder's underlying byte slice","func"],["IndexRune","IndexRune returns the index of the first instance of the Unicode code pointr, or -1 if rune is not present in s","func"],["TrimRightFunc","TrimRightFunc returns a slice of the string s with all trailingUnicode code points c satisfying f(c) removed","func"],["SplitAfterN","SplitAfterN slices s into substrings after each instance of sep andreturns a slice of those substrings","func"],["Title","Title returns a copy of the string s with all Unicode letters that begin wordsmapped to their Unicode title case","func"],["LastIndexAny","LastIndexAny returns the index of the last instance of any Unicode codepoint from chars in s, or -1 if no Unicode code point from chars ispresent in s","func"],["FieldsFunc","FieldsFunc splits the string s at each run of Unicode code points c satisfying f(c)and returns an array of slices of s","func"],["Builder.String","String returns the accumulated string","func"],["Replacer.WriteString","WriteString writes s to w with all replacements performed","func"],["SplitN","SplitN slices s into substrings separated by sep and returns a slice ofthe substrings between those separators","func"],["LastIndexFunc","LastIndexFunc returns the index into s of the lastUnicode code point satisfying f(c), or -1 if none do","func"],["Builder.WriteRune","WriteRune appends the UTF-8 encoding of Unicode code point r to b's buffer","func"],["Reader.Len","Len returns the number of bytes of the unread portion of thestring","func"],["ToUpper","ToUpper returns s with all Unicode letters mapped to their upper case","func"],["ToUpperSpecial","ToUpperSpecial returns a copy of the string s with all Unicode letters mapped to theirupper case using the case mapping specified by c","func"],["EqualFold","EqualFold reports whether s and t, interpreted as UTF-8 strings,are equal under Unicode case-folding","func"],["HasSuffix","HasSuffix tests whether the string s ends with suffix","func"],["LastIndexByte","LastIndexByte returns the index of the last instance of c in s, or -1 if c is not present in s","func"],["Replacer.Replace","Replace returns a copy of s with all replacements performed","func"],["Reader.Reset","Reset resets the Reader to be reading from s","func"],["SplitAfter","SplitAfter slices s into all substrings after each instance of sep andreturns a slice of those substrings","func"],["TrimRight","TrimRight returns a slice of the string s, with all trailingUnicode code points contained in cutset removed","func"],["TrimLeft","TrimLeft returns a slice of the string s with all leadingUnicode code points contained in cutset removed","func"]],"debug/macho":[["debug/macho","Package macho implements access to Mach-O object files","package"],["RelocTypeARM","","other"],["FatFile","A FatFile is a Mach-O universal binary that contains at least one architecture","struct"],["LoadBytes","A LoadBytes is the uninterpreted bytes of a Mach-O load command","other"],["File.Close","Close closes the File","func"],["FatArch","A FatArch is a Mach-O File inside a FatFile","struct"],["File.ImportedLibraries","ImportedLibraries returns the paths of all librariesreferred to by the binary f that are expected to belinked with the binary at dynamic link time","func"],["Rpath","A Rpath represents a Mach-O rpath command","struct"],["Segment.Data","Data reads and returns the contents of the segment","func"],["Dylib","A Dylib represents a Mach-O load dynamic library command","struct"],["LoadCmd","A LoadCmd is a Mach-O load command","other"],["Section32","A Section32 is a 32-bit Mach-O section header","struct"],["Section","","struct"],["SectionHeader","","struct"],["SymtabCmd","A SymtabCmd is a Mach-O symbol table command","struct"],["Section64","A Section64 is a 64-bit Mach-O section header","struct"],["Segment.Open","Open returns a new ReadSeeker reading the segment","func"],["File","A File represents an open Mach-O file","struct"],["Reloc","A Reloc represents a Mach-O relocation","struct"],["Type","A Type is the Mach-O file type, e.g","other"],["Section.Data","Data reads and returns the contents of the Mach-O section","func"],["Segment64","A Segment64 is a 64-bit Mach-O segment load command","struct"],["SegmentHeader","A SegmentHeader is the header for a Mach-O 32-bit or 64-bit load segment command","struct"],["Load","A Load represents any Mach-O load command","interface"],["Segment","A Segment represents a Mach-O 32-bit or 64-bit load segment command","struct"],["File.Section","Section returns the first section with the given name, or nil if no suchsection exists","func"],["Open","Open opens the named file using os.Open and prepares it for use as a Mach-O binary","func"],["RelocTypeGeneric","","other"],["Segment32","A Segment32 is a 32-bit Mach-O segment load command","struct"],["Nlist64","An Nlist64 is a Mach-O 64-bit symbol table entry","struct"],["FatArchHeader","A FatArchHeader represents a fat header for a specific image architecture","struct"],["DylibCmd","A DylibCmd is a Mach-O load dynamic library command","struct"],["FileHeader","A FileHeader represents a Mach-O file header","struct"],["NewFile","NewFile creates a new File for accessing a Mach-O binary in an underlying reader","func"],["Dysymtab","A Dysymtab represents a Mach-O dynamic symbol table command","struct"],["RelocTypeX86_64","","other"],["Thread","A Thread is a Mach-O thread state command","struct"],["FormatError","FormatError is returned by some operations if the data doesnot have the correct format for an object file","struct"],["Symbol","A Symbol is a Mach-O 32-bit or 64-bit symbol table entry","struct"],["File.DWARF","DWARF returns the DWARF debug information for the Mach-O file","func"],["Regs386","Regs386 is the Mach-O 386 register structure","struct"],["NewFatFile","NewFatFile creates a new FatFile for accessing all the Mach-O images in auniversal binary","func"],["OpenFat","OpenFat opens the named file using os.Open and prepares it for use as a Mach-Ouniversal binary","func"],["RpathCmd","A RpathCmd is a Mach-O rpath command","struct"],["Section.Open","Open returns a new ReadSeeker reading the Mach-O section","func"],["Nlist32","An Nlist32 is a Mach-O 32-bit symbol table entry","struct"],["File.Segment","Segment returns the first Segment with the given name, or nil if no such segment exists","func"],["RelocTypeARM64","","other"],["DysymtabCmd","A DysymtabCmd is a Mach-O dynamic symbol table command","struct"],["Symtab","A Symtab represents a Mach-O symbol table command","struct"],["File.ImportedSymbols","ImportedSymbols returns the names of all symbolsreferred to by the binary f that are expected to besatisfied by other libraries at dynamic load time","func"],["RegsAMD64","RegsAMD64 is the Mach-O AMD64 register structure","struct"],["Cpu","A Cpu is a Mach-O cpu type","other"]],"sync/atomic":[["sync/atomic","Package atomic provides low-level atomic memory primitivesuseful for implementing synchronization algorithms","package"],["AddInt64","AddInt64 atomically adds delta to *addr and returns the new value","func"],["SwapUint64","SwapUint64 atomically stores new into *addr and returns the previous *addr value","func"],["SwapInt64","SwapInt64 atomically stores new into *addr and returns the previous *addr value","func"],["LoadInt32","LoadInt32 atomically loads *addr","func"],["StorePointer","StorePointer atomically stores val into *addr","func"],["CompareAndSwapUint32","CompareAndSwapUint32 executes the compare-and-swap operation for a uint32 value","func"],["CompareAndSwapUintptr","CompareAndSwapUintptr executes the compare-and-swap operation for a uintptr value","func"],["LoadUint64","LoadUint64 atomically loads *addr","func"],["AddUintptr","AddUintptr atomically adds delta to *addr and returns the new value","func"],["CompareAndSwapUint64","CompareAndSwapUint64 executes the compare-and-swap operation for a uint64 value","func"],["Value","A Value provides an atomic load and store of a consistently typed value","struct"],["StoreInt32","StoreInt32 atomically stores val into *addr","func"],["CompareAndSwapInt64","CompareAndSwapInt64 executes the compare-and-swap operation for an int64 value","func"],["LoadInt64","LoadInt64 atomically loads *addr","func"],["SwapUint32","SwapUint32 atomically stores new into *addr and returns the previous *addr value","func"],["SwapUintptr","SwapUintptr atomically stores new into *addr and returns the previous *addr value","func"],["Value.Store","Store sets the value of the Value to x","func"],["AddUint64","AddUint64 atomically adds delta to *addr and returns the new value","func"],["SwapPointer","SwapPointer atomically stores new into *addr and returns the previous *addr value","func"],["StoreUintptr","StoreUintptr atomically stores val into *addr","func"],["StoreUint32","StoreUint32 atomically stores val into *addr","func"],["LoadPointer","LoadPointer atomically loads *addr","func"],["AddUint32","AddUint32 atomically adds delta to *addr and returns the new value","func"],["StoreUint64","StoreUint64 atomically stores val into *addr","func"],["SwapInt32","SwapInt32 atomically stores new into *addr and returns the previous *addr value","func"],["LoadUint32","LoadUint32 atomically loads *addr","func"],["StoreInt64","StoreInt64 atomically stores val into *addr","func"],["CompareAndSwapInt32","CompareAndSwapInt32 executes the compare-and-swap operation for an int32 value","func"],["LoadUintptr","LoadUintptr atomically loads *addr","func"],["AddInt32","AddInt32 atomically adds delta to *addr and returns the new value","func"],["Value.Load","Load returns the value set by the most recent Store","func"],["CompareAndSwapPointer","CompareAndSwapPointer executes the compare-and-swap operation for a unsafe.Pointer value","func"]],"hash/crc64":[["hash/crc64","Package crc64 implements the 64-bit cyclic redundancy check, or CRC-64,checksum","package"],["MakeTable","MakeTable returns a Table constructed from the specified polynomial","func"],["Table","Table is a 256-word table representing the polynomial for efficient processing","other"],["Update","Update returns the result of adding the bytes in p to the crc","func"],["Checksum","Checksum returns the CRC-64 checksum of datausing the polynomial represented by the Table","func"],["New","New creates a new hash.Hash64 computing the CRC-64 checksum using thepolynomial represented by the Table","func"]],"container/ring":[["container/ring","Package ring implements operations on circular lists","package"],["New","New creates a ring of n elements","func"],["Ring","A Ring is an element of a circular list, or ring","struct"],["Ring.Do","Do calls function f on each element of the ring, in forward order","func"],["Ring.Unlink","Unlink removes n % r.Len() elements from the ring r, startingat r.Next()","func"],["Ring.Next","Next returns the next ring element","func"],["Ring.Len","Len computes the number of elements in ring r","func"],["Ring.Prev","Prev returns the previous ring element","func"],["Ring.Move","Move moves n % r.Len() elements backward (n < 0) or forward (n >= 0)in the ring and returns that ring element","func"],["Ring.Link","Link connects ring r with ring s such that r.Next()becomes s and returns the original value for r.Next()","func"]],"database/sql":[["database/sql","Package sql provides a generic interface around SQL (or SQL-like)databases","package"],["DB.Ping","Ping verifies a connection to the database is still alive,establishing a connection if necessary","func"],["Conn.Close","Close returns the connection to the connection pool","func"],["DB.Close","Close closes the database and prevents new queries from starting","func"],["Stmt","Stmt is a prepared statement","struct"],["Conn.QueryRowContext","QueryRowContext executes a query that is expected to return at most one row","func"],["ColumnType.Nullable","Nullable reports whether the column may be null","func"],["Conn.PingContext","PingContext verifies the connection to the database is still alive","func"],["Conn.QueryContext","QueryContext executes a query that returns rows, typically a SELECT","func"],["NullTime.Scan","Scan implements the Scanner interface","func"],["DB.QueryContext","QueryContext executes a query that returns rows, typically a SELECT","func"],["NullTime.Value","Value implements the driver Valuer interface","func"],["Row.Scan","Scan copies the columns from the matched row into the valuespointed at by dest","func"],["Rows.Columns","Columns returns the column names","func"],["DB.QueryRow","QueryRow executes a query that is expected to return at most one row","func"],["Tx.Query","Query executes a query that returns rows, typically a SELECT","func"],["NullBool","NullBool represents a bool that may be null","struct"],["Stmt.ExecContext","ExecContext executes a prepared statement with the given arguments andreturns a Result summarizing the effect of the statement","func"],["Conn.Raw","Raw executes f exposing the underlying driver connection for theduration of f","func"],["Tx.Rollback","Rollback aborts the transaction","func"],["ColumnType.DecimalSize","DecimalSize returns the scale and precision of a decimal type","func"],["DB.Conn","Conn returns a single connection by either opening a new connectionor returning an existing connection from the connection pool","func"],["NullInt64.Scan","Scan implements the Scanner interface","func"],["TxOptions","TxOptions holds the transaction options to be used in DB.BeginTx","struct"],["ColumnType","ColumnType contains the name and type of a column","struct"],["Result","A Result summarizes an executed SQL command","interface"],["DB.Stats","Stats returns database statistics","func"],["Tx.PrepareContext","PrepareContext creates a prepared statement for use within a transaction","func"],["Tx.Exec","Exec executes a query that doesn't return rows","func"],["Scanner","Scanner is an interface used by Scan","interface"],["Stmt.Close","Close closes the statement","func"],["DB.QueryRowContext","QueryRowContext executes a query that is expected to return at most one row","func"],["Tx.Commit","Commit commits the transaction","func"],["Rows.Close","Close closes the Rows, preventing further enumeration","func"],["Stmt.QueryRowContext","QueryRowContext executes a prepared query statement with the given arguments","func"],["Rows.Scan","Scan copies the columns in the current row into the values pointedat by dest","func"],["NullString.Scan","Scan implements the Scanner interface","func"],["NullTime","NullTime represents a time.Time that may be null","struct"],["Out","Out may be used to retrieve OUTPUT value parameters from stored procedures","struct"],["ColumnType.Name","Name returns the name or alias of the column","func"],["DB.Exec","Exec executes a query without returning any rows","func"],["NullFloat64","NullFloat64 represents a float64 that may be null","struct"],["Tx","Tx is an in-progress database transaction","struct"],["DB.SetMaxIdleConns","SetMaxIdleConns sets the maximum number of connections in the idleconnection pool","func"],["ColumnType.ScanType","ScanType returns a Go type suitable for scanning into using Rows.Scan","func"],["DB.Begin","Begin starts a transaction","func"],["Named","Named provides a more concise way to create NamedArg values","func"],["NullInt64.Value","Value implements the driver Valuer interface","func"],["Rows.ColumnTypes","ColumnTypes returns column information such as column type, length,and nullable","func"],["Stmt.Exec","Exec executes a prepared statement with the given arguments andreturns a Result summarizing the effect of the statement","func"],["NullBool.Scan","Scan implements the Scanner interface","func"],["NullInt32.Value","Value implements the driver Valuer interface","func"],["NamedArg","A NamedArg is a named argument","struct"],["Drivers","Drivers returns a sorted list of the names of the registered drivers","func"],["Tx.Stmt","Stmt returns a transaction-specific prepared statement froman existing statement","func"],["Tx.QueryRow","QueryRow executes a query that is expected to return at most one row","func"],["Rows.Next","Next prepares the next result row for reading with the Scan method","func"],["DB.SetConnMaxLifetime","SetConnMaxLifetime sets the maximum amount of time a connection may be reused","func"],["NullInt32","NullInt32 represents an int32 that may be null","struct"],["DB.SetMaxOpenConns","SetMaxOpenConns sets the maximum number of open connections to the database","func"],["ColumnType.DatabaseTypeName","DatabaseTypeName returns the database system name of the column type","func"],["OpenDB","OpenDB opens a database using a Connector, allowing drivers tobypass a string based data source name","func"],["Tx.ExecContext","ExecContext executes a query that doesn't return rows","func"],["DB.PrepareContext","PrepareContext creates a prepared statement for later queries or executions","func"],["Row","Row is the result of calling QueryRow to select a single row","struct"],["ColumnType.Length","Length returns the column type length for variable length column types suchas text and binary field types","func"],["Rows.Err","Err returns the error, if any, that was encountered during iteration","func"],["Tx.QueryContext","QueryContext executes a query that returns rows, typically a SELECT","func"],["IsolationLevel","IsolationLevel is the transaction isolation level used in TxOptions","other"],["DB","DB is a database handle representing a pool of zero or moreunderlying connections","struct"],["RawBytes","RawBytes is a byte slice that holds a reference to memory owned bythe database itself","other"],["Open","Open opens a database specified by its database driver name and adriver-specific data source name, usually consisting of at least adatabase name and connection information","func"],["Conn.PrepareContext","PrepareContext creates a prepared statement for later queries or executions","func"],["NullString","NullString represents a string that may be null","struct"],["Tx.StmtContext","StmtContext returns a transaction-specific prepared statement froman existing statement","func"],["NullInt64","NullInt64 represents an int64 that may be null","struct"],["IsolationLevel.String","String returns the name of the transaction isolation level","func"],["DB.ExecContext","ExecContext executes a query without returning any rows","func"],["DB.Driver","Driver returns the database's underlying driver","func"],["NullFloat64.Scan","Scan implements the Scanner interface","func"],["NullFloat64.Value","Value implements the driver Valuer interface","func"],["Rows","Rows is the result of a query","struct"],["DBStats","DBStats contains database statistics","struct"],["Register","Register makes a database driver available by the provided name","func"],["Rows.NextResultSet","NextResultSet prepares the next result set for reading","func"],["Stmt.QueryRow","QueryRow executes a prepared query statement with the given arguments","func"],["NullString.Value","Value implements the driver Valuer interface","func"],["Tx.QueryRowContext","QueryRowContext executes a query that is expected to return at most one row","func"],["Conn.ExecContext","ExecContext executes a query without returning any rows","func"],["Stmt.QueryContext","QueryContext executes a prepared query statement with the given argumentsand returns the query results as a *Rows","func"],["DB.Query","Query executes a query that returns rows, typically a SELECT","func"],["DB.PingContext","PingContext verifies a connection to the database is still alive,establishing a connection if necessary","func"],["Stmt.Query","Query executes a prepared query statement with the given argumentsand returns the query results as a *Rows","func"],["DB.BeginTx","BeginTx starts a transaction","func"],["DB.Prepare","Prepare creates a prepared statement for later queries or executions","func"],["NullInt32.Scan","Scan implements the Scanner interface","func"],["Tx.Prepare","Prepare creates a prepared statement for use within a transaction","func"],["Conn","Conn represents a single database connection rather than a pool of databaseconnections","struct"],["Conn.BeginTx","BeginTx starts a transaction","func"],["NullBool.Value","Value implements the driver Valuer interface","func"]],"image/color/palette":[["image/color/palette","Package palette provides standard color palettes","package"]],"crypto/hmac":[["crypto/hmac","Package hmac implements the Keyed-Hash Message Authentication Code (HMAC) asdefined in U.S","package"],["New","New returns a new HMAC hash using the given hash.Hash type and key","func"],["Equal","Equal compares two MACs for equality without leaking timing information","func"]]};